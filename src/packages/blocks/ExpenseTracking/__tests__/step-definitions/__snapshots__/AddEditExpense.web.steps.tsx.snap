// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddEditExpense Expense Form 1`] = `
<AddEditExpense
  classes={
    Object {
      "addEditExpense": Object {
        "& .error": Object {
          "color": "red",
          "fontSize": "14px",
          "marginLeft": "20px",
        },
        "& .form.issue-lease-content .next-button": Object {
          "bottom": 0,
          "position": "sticky",
        },
        "& .issue-lease-content .MuiSelect-root": Object {
          "background": "#F9F9F9",
          "borderRadius": "30px",
        },
        "& .issue-lease-content .select-box": Object {
          "position": "relative",
        },
        "& .issue-lease-content .select-box .select-input": Object {
          "paddingLeft": "50px",
          "width": "100%",
        },
        "& .issue-lease-content .select-box .select-input.input": Object {
          "fontSize": "16px",
          "outline": "none",
          "padding": "18px 10px 18px 60px !important",
        },
        "& .issue-lease-content .select-box img": Object {
          "left": "15px",
          "position": "absolute",
          "top": "38px",
        },
        "& .issue-lease-content .select-input-box .input.select-input": Object {
          "padding": "12px 15px",
        },
        "& .issue-lease-content .select-input-box .input.select-input .MuiInputAdornment-positionStart": Object {
          "marginRight": "25px",
        },
        "& .issue-lease-content .select-input-box .input.select-input:after": Object {
          "border": 0,
        },
        "& .issue-lease-content .select-input-box .input.select-input:before": Object {
          "border": 0,
        },
        "& .issue-lease-content .select-input-box .select-input": Object {
          "background": "#F9F9F9",
          "border": "1px solid #F0F0F0",
          "borderRadius": "30px",
          "marginTop": "18px",
        },
        "& .issue-lease-content .select-input-box .select-input .MuiListItemIcon-root": Object {
          "minWidth": "40px",
        },
        "& .issue-lease-content .tenant-info": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "margin": "18px 0",
        },
        "& .issue-lease-content .tenant-info a": Object {
          "color": "#FC8434",
          "fontWeight": "600",
        },
        "& .issue-lease-content .tenant-info p": Object {
          "color": "black",
          "fontWeight": "600",
        },
        "& .issue-lease-content .tenant-info span": Object {
          "color": "#9C9C9C",
        },
        "& .next-button": Object {
          "alignItems": "center",
          "background": "white",
          "boxShadow": "none",
          "display": "flex",
          "justifyContent": "center",
          "marginTop": "20px",
          "padding": "10px 0",
        },
        "& .next-button button": Object {
          "background": "#2b6fec",
          "borderRadius": "25px",
          "color": "white",
          "fontWeight": 600,
          "minWidth": "300px",
          "padding": "12px 50px",
        },
        "& .page-container": Object {
          "height": "88vh",
          "overflowY": "auto",
        },
        "& .right-image": Object {
          "padding": "23px 60px",
        },
        "& .success-page": Object {
          "& p": Object {
            "textAlign": "center",
          },
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "gap": "20px",
          "height": "calc(100% - 100px)",
          "justifyContent": "center",
        },
        "& .top-bar": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "borderBottom": "2px solid #F9F9F9",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "padding": "10px 20px",
          "position": "sticky",
          "top": "0",
        },
        "& .top-bar .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        },
        "& .top-bar .right-icon img": Object {
          "marginLeft": "15px",
        },
        "& :-ms-input-placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& ::-ms-input-placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& ::placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
        "height": "100vh",
        "overflowY": "hidden",
      },
      "myExpenseList": Object {
        "& .right-image": Object {
          "padding": "25px 60px",
        },
        "& .tenant-list-box": Object {
          "height": "88vh",
          "marginTop": "15px",
          "overflow": "hidden",
          "position": "relative",
        },
        "& .tenant-list-box .tenant": Object {
          "borderRadius": "8px",
          "boxShadow": "none",
          "padding": "20px",
        },
        "& .tenant-list-box .tenant .expense-details p": Object {
          "fontWeight": 600,
        },
        "& .tenant-list-box .tenant .header": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
        },
        "& .tenant-list-box .tenant .info p": Object {
          "color": "black",
        },
        "& .tenant-list-box .tenant .info span": Object {
          "color": "gray",
          "fontSize": "14px",
        },
        "& .tenant-list-box .tenant-list": Object {
          "height": "calc(100% - 80px)",
          "overflowX": "hidden",
        },
        "& .tenant-list-box .upload-button": Object {
          "alignItems": "center",
          "bottom": 0,
          "display": "flex",
          "justifyContent": "center",
          "left": 0,
          "padding": "10px 0",
          "position": "sticky",
          "right": 0,
        },
        "& .tenant-list-box .upload-button .MuiGrid-root": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        },
        "& .tenant-list-box .upload-button button": Object {
          "background": "#2b6fec",
          "borderRadius": "25px",
          "color": "white",
          "fontWeight": 600,
          "padding": "12px 50px",
        },
        "& .top-bar": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "borderBottom": "2px solid #e2e2ef",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "padding": "10px 20px",
          "zIndex": "9999",
        },
        "& .top-bar .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "10px",
          "justifyContent": "center",
        },
        "& .top-bar .left-icon span": Object {
          "lineHeight": "18px",
        },
        "& .top-bar .right-icon": Object {
          "alignItems": "center",
          "display": "flex",
        },
        "& .top-bar .right-icon img": Object {
          "cursor": "pointer",
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
        "height": "100vh",
        "overflowY": "hidden",
      },
    }
  }
  id="AddEditExpense"
  navigation={
    Object {
      "getParam": [MockFunction] {
        "calls": Array [
          Array [
            "id",
          ],
          Array [
            "id",
          ],
          Array [
            "id",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "goBack": [MockFunction],
      "navigate": [MockFunction] {
        "calls": Array [
          Array [
            "MyExpenseList",
          ],
          Array [
            "UnitExpenseList",
            Object {
              "id": "",
            },
          ],
          Array [
            "ExpenseDetail",
            Object {
              "id": "12",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
  t={[Function]}
>
  <Loader
    loading={false}
  >
    <WithStyles(ForwardRef(Backdrop))
      onClick={[Function]}
      open={false}
      style={
        Object {
          "color": "#ffffff",
          "zIndex": 9999,
        }
      }
    >
      <ForwardRef(Backdrop)
        classes={
          Object {
            "invisible": "MuiBackdrop-invisible",
            "root": "MuiBackdrop-root",
          }
        }
        onClick={[Function]}
        open={false}
        style={
          Object {
            "color": "#ffffff",
            "zIndex": 9999,
          }
        }
      >
        <ForwardRef(Fade)
          in={false}
          onClick={[Function]}
          style={
            Object {
              "color": "#ffffff",
              "zIndex": 9999,
            }
          }
        >
          <Transition
            appear={true}
            enter={true}
            exit={true}
            in={false}
            mountOnEnter={false}
            onClick={[Function]}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={
              Object {
                "enter": 225,
                "exit": 195,
              }
            }
            unmountOnExit={false}
          >
            <div
              aria-hidden={true}
              className="MuiBackdrop-root"
              onClick={[Function]}
              style={
                Object {
                  "color": "#ffffff",
                  "opacity": 0,
                  "visibility": "hidden",
                  "zIndex": 9999,
                }
              }
            >
              <WithStyles(ForwardRef(CircularProgress))
                style={
                  Object {
                    "color": "#2c6fed",
                  }
                }
              >
                <ForwardRef(CircularProgress)
                  classes={
                    Object {
                      "circle": "MuiCircularProgress-circle",
                      "circleDeterminate": "MuiCircularProgress-circleDeterminate",
                      "circleDisableShrink": "MuiCircularProgress-circleDisableShrink",
                      "circleIndeterminate": "MuiCircularProgress-circleIndeterminate",
                      "circleStatic": "MuiCircularProgress-circleStatic",
                      "colorPrimary": "MuiCircularProgress-colorPrimary",
                      "colorSecondary": "MuiCircularProgress-colorSecondary",
                      "determinate": "MuiCircularProgress-determinate",
                      "indeterminate": "MuiCircularProgress-indeterminate",
                      "root": "MuiCircularProgress-root",
                      "static": "MuiCircularProgress-static",
                      "svg": "MuiCircularProgress-svg",
                    }
                  }
                  style={
                    Object {
                      "color": "#2c6fed",
                    }
                  }
                >
                  <div
                    className="MuiCircularProgress-root MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
                    role="progressbar"
                    style={
                      Object {
                        "color": "#2c6fed",
                        "height": 40,
                        "width": 40,
                      }
                    }
                  >
                    <svg
                      className="MuiCircularProgress-svg"
                      viewBox="22 22 44 44"
                    >
                      <circle
                        className="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                        cx={44}
                        cy={44}
                        fill="none"
                        r={20.2}
                        strokeWidth={3.6}
                        style={Object {}}
                      />
                    </svg>
                  </div>
                </ForwardRef(CircularProgress)>
              </WithStyles(ForwardRef(CircularProgress))>
            </div>
          </Transition>
        </ForwardRef(Fade)>
      </ForwardRef(Backdrop)>
    </WithStyles(ForwardRef(Backdrop))>
  </Loader>
  <Styled(MuiBox)
    className={
      Object {
        "& .error": Object {
          "color": "red",
          "fontSize": "14px",
          "marginLeft": "20px",
        },
        "& .form.issue-lease-content .next-button": Object {
          "bottom": 0,
          "position": "sticky",
        },
        "& .issue-lease-content .MuiSelect-root": Object {
          "background": "#F9F9F9",
          "borderRadius": "30px",
        },
        "& .issue-lease-content .select-box": Object {
          "position": "relative",
        },
        "& .issue-lease-content .select-box .select-input": Object {
          "paddingLeft": "50px",
          "width": "100%",
        },
        "& .issue-lease-content .select-box .select-input.input": Object {
          "fontSize": "16px",
          "outline": "none",
          "padding": "18px 10px 18px 60px !important",
        },
        "& .issue-lease-content .select-box img": Object {
          "left": "15px",
          "position": "absolute",
          "top": "38px",
        },
        "& .issue-lease-content .select-input-box .input.select-input": Object {
          "padding": "12px 15px",
        },
        "& .issue-lease-content .select-input-box .input.select-input .MuiInputAdornment-positionStart": Object {
          "marginRight": "25px",
        },
        "& .issue-lease-content .select-input-box .input.select-input:after": Object {
          "border": 0,
        },
        "& .issue-lease-content .select-input-box .input.select-input:before": Object {
          "border": 0,
        },
        "& .issue-lease-content .select-input-box .select-input": Object {
          "background": "#F9F9F9",
          "border": "1px solid #F0F0F0",
          "borderRadius": "30px",
          "marginTop": "18px",
        },
        "& .issue-lease-content .select-input-box .select-input .MuiListItemIcon-root": Object {
          "minWidth": "40px",
        },
        "& .issue-lease-content .tenant-info": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "margin": "18px 0",
        },
        "& .issue-lease-content .tenant-info a": Object {
          "color": "#FC8434",
          "fontWeight": "600",
        },
        "& .issue-lease-content .tenant-info p": Object {
          "color": "black",
          "fontWeight": "600",
        },
        "& .issue-lease-content .tenant-info span": Object {
          "color": "#9C9C9C",
        },
        "& .next-button": Object {
          "alignItems": "center",
          "background": "white",
          "boxShadow": "none",
          "display": "flex",
          "justifyContent": "center",
          "marginTop": "20px",
          "padding": "10px 0",
        },
        "& .next-button button": Object {
          "background": "#2b6fec",
          "borderRadius": "25px",
          "color": "white",
          "fontWeight": 600,
          "minWidth": "300px",
          "padding": "12px 50px",
        },
        "& .page-container": Object {
          "height": "88vh",
          "overflowY": "auto",
        },
        "& .right-image": Object {
          "padding": "23px 60px",
        },
        "& .success-page": Object {
          "& p": Object {
            "textAlign": "center",
          },
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "gap": "20px",
          "height": "calc(100% - 100px)",
          "justifyContent": "center",
        },
        "& .top-bar": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "borderBottom": "2px solid #F9F9F9",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "padding": "10px 20px",
          "position": "sticky",
          "top": "0",
        },
        "& .top-bar .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        },
        "& .top-bar .right-icon img": Object {
          "marginLeft": "15px",
        },
        "& :-ms-input-placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& ::-ms-input-placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& ::placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
        "height": "100vh",
        "overflowY": "hidden",
      }
    }
  >
    <div
      className="MuiBox-root MuiBox-root-16 height overflowY & .top-bar & .top-bar .left-icon & .top-bar .right-icon img & .right-image & a & .page-container & .issue-lease-content .select-input-box .select-input & .issue-lease-content .MuiSelect-root & .issue-lease-content .select-box & .issue-lease-content .select-box img & .issue-lease-content .select-box .select-input & .issue-lease-content .select-box .select-input.input & .issue-lease-content .select-input-box .select-input .MuiListItemIcon-root & .issue-lease-content .select-input-box .input.select-input & .issue-lease-content .select-input-box .input.select-input .MuiInputAdornment-positionStart & .issue-lease-content .select-input-box .input.select-input:before & .issue-lease-content .select-input-box .input.select-input:after & .issue-lease-content .tenant-info & .issue-lease-content .tenant-info a & .issue-lease-content .tenant-info span & .issue-lease-content .tenant-info p & .success-page & .next-button & .next-button button & .error & ::placeholder & :-ms-input-placeholder & ::-ms-input-placeholder & .form.issue-lease-content .next-button"
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
      >
        <ForwardRef(Grid)
          classes={
            Object {
              "align-content-xs-center": "MuiGrid-align-content-xs-center",
              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
              "align-items-xs-center": "MuiGrid-align-items-xs-center",
              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
              "container": "MuiGrid-container",
              "direction-xs-column": "MuiGrid-direction-xs-column",
              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
              "grid-lg-1": "MuiGrid-grid-lg-1",
              "grid-lg-10": "MuiGrid-grid-lg-10",
              "grid-lg-11": "MuiGrid-grid-lg-11",
              "grid-lg-12": "MuiGrid-grid-lg-12",
              "grid-lg-2": "MuiGrid-grid-lg-2",
              "grid-lg-3": "MuiGrid-grid-lg-3",
              "grid-lg-4": "MuiGrid-grid-lg-4",
              "grid-lg-5": "MuiGrid-grid-lg-5",
              "grid-lg-6": "MuiGrid-grid-lg-6",
              "grid-lg-7": "MuiGrid-grid-lg-7",
              "grid-lg-8": "MuiGrid-grid-lg-8",
              "grid-lg-9": "MuiGrid-grid-lg-9",
              "grid-lg-auto": "MuiGrid-grid-lg-auto",
              "grid-lg-true": "MuiGrid-grid-lg-true",
              "grid-md-1": "MuiGrid-grid-md-1",
              "grid-md-10": "MuiGrid-grid-md-10",
              "grid-md-11": "MuiGrid-grid-md-11",
              "grid-md-12": "MuiGrid-grid-md-12",
              "grid-md-2": "MuiGrid-grid-md-2",
              "grid-md-3": "MuiGrid-grid-md-3",
              "grid-md-4": "MuiGrid-grid-md-4",
              "grid-md-5": "MuiGrid-grid-md-5",
              "grid-md-6": "MuiGrid-grid-md-6",
              "grid-md-7": "MuiGrid-grid-md-7",
              "grid-md-8": "MuiGrid-grid-md-8",
              "grid-md-9": "MuiGrid-grid-md-9",
              "grid-md-auto": "MuiGrid-grid-md-auto",
              "grid-md-true": "MuiGrid-grid-md-true",
              "grid-sm-1": "MuiGrid-grid-sm-1",
              "grid-sm-10": "MuiGrid-grid-sm-10",
              "grid-sm-11": "MuiGrid-grid-sm-11",
              "grid-sm-12": "MuiGrid-grid-sm-12",
              "grid-sm-2": "MuiGrid-grid-sm-2",
              "grid-sm-3": "MuiGrid-grid-sm-3",
              "grid-sm-4": "MuiGrid-grid-sm-4",
              "grid-sm-5": "MuiGrid-grid-sm-5",
              "grid-sm-6": "MuiGrid-grid-sm-6",
              "grid-sm-7": "MuiGrid-grid-sm-7",
              "grid-sm-8": "MuiGrid-grid-sm-8",
              "grid-sm-9": "MuiGrid-grid-sm-9",
              "grid-sm-auto": "MuiGrid-grid-sm-auto",
              "grid-sm-true": "MuiGrid-grid-sm-true",
              "grid-xl-1": "MuiGrid-grid-xl-1",
              "grid-xl-10": "MuiGrid-grid-xl-10",
              "grid-xl-11": "MuiGrid-grid-xl-11",
              "grid-xl-12": "MuiGrid-grid-xl-12",
              "grid-xl-2": "MuiGrid-grid-xl-2",
              "grid-xl-3": "MuiGrid-grid-xl-3",
              "grid-xl-4": "MuiGrid-grid-xl-4",
              "grid-xl-5": "MuiGrid-grid-xl-5",
              "grid-xl-6": "MuiGrid-grid-xl-6",
              "grid-xl-7": "MuiGrid-grid-xl-7",
              "grid-xl-8": "MuiGrid-grid-xl-8",
              "grid-xl-9": "MuiGrid-grid-xl-9",
              "grid-xl-auto": "MuiGrid-grid-xl-auto",
              "grid-xl-true": "MuiGrid-grid-xl-true",
              "grid-xs-1": "MuiGrid-grid-xs-1",
              "grid-xs-10": "MuiGrid-grid-xs-10",
              "grid-xs-11": "MuiGrid-grid-xs-11",
              "grid-xs-12": "MuiGrid-grid-xs-12",
              "grid-xs-2": "MuiGrid-grid-xs-2",
              "grid-xs-3": "MuiGrid-grid-xs-3",
              "grid-xs-4": "MuiGrid-grid-xs-4",
              "grid-xs-5": "MuiGrid-grid-xs-5",
              "grid-xs-6": "MuiGrid-grid-xs-6",
              "grid-xs-7": "MuiGrid-grid-xs-7",
              "grid-xs-8": "MuiGrid-grid-xs-8",
              "grid-xs-9": "MuiGrid-grid-xs-9",
              "grid-xs-auto": "MuiGrid-grid-xs-auto",
              "grid-xs-true": "MuiGrid-grid-xs-true",
              "item": "MuiGrid-item",
              "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
              "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
              "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
              "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
              "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
              "root": "MuiGrid-root",
              "spacing-xs-1": "MuiGrid-spacing-xs-1",
              "spacing-xs-10": "MuiGrid-spacing-xs-10",
              "spacing-xs-2": "MuiGrid-spacing-xs-2",
              "spacing-xs-3": "MuiGrid-spacing-xs-3",
              "spacing-xs-4": "MuiGrid-spacing-xs-4",
              "spacing-xs-5": "MuiGrid-spacing-xs-5",
              "spacing-xs-6": "MuiGrid-spacing-xs-6",
              "spacing-xs-7": "MuiGrid-spacing-xs-7",
              "spacing-xs-8": "MuiGrid-spacing-xs-8",
              "spacing-xs-9": "MuiGrid-spacing-xs-9",
              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
              "zeroMinWidth": "MuiGrid-zeroMinWidth",
            }
          }
          container={true}
        >
          <div
            className="MuiGrid-root MuiGrid-container"
          >
            <WithStyles(ForwardRef(Grid))
              item={true}
              md={7}
              xs={12}
            >
              <ForwardRef(Grid)
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={7}
                xs={12}
              >
                <div
                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-7"
                >
                  <Styled(MuiBox)>
                    <div
                      className="MuiBox-root MuiBox-root-17"
                    >
                      <Styled(MuiBox)
                        className="top-bar"
                        display={
                          Object {
                            "md": "flex",
                            "xs": "flex",
                          }
                        }
                      >
                        <div
                          className="MuiBox-root MuiBox-root-18 top-bar"
                        >
                          <Styled(MuiBox)
                            className="left-icon"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-19 left-icon"
                            >
                              <WithStyles(ForwardRef(IconButton))
                                onClick={[Function]}
                              >
                                <ForwardRef(IconButton)
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  onClick={[Function]}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    centerRipple={true}
                                    className="MuiIconButton-root"
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="MuiButtonBase-root MuiIconButton-root"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(KeyboardBackspaceIcon)>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(KeyboardBackspaceIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                              <span />
                            </div>
                          </Styled(MuiBox)>
                        </div>
                      </Styled(MuiBox)>
                      <WithStyles(ForwardRef(Container))
                        className="page-container"
                      >
                        <ForwardRef(Container)
                          className="page-container"
                          classes={
                            Object {
                              "disableGutters": "MuiContainer-disableGutters",
                              "fixed": "MuiContainer-fixed",
                              "maxWidthLg": "MuiContainer-maxWidthLg",
                              "maxWidthMd": "MuiContainer-maxWidthMd",
                              "maxWidthSm": "MuiContainer-maxWidthSm",
                              "maxWidthXl": "MuiContainer-maxWidthXl",
                              "maxWidthXs": "MuiContainer-maxWidthXs",
                              "root": "MuiContainer-root",
                            }
                          }
                        >
                          <div
                            className="MuiContainer-root page-container MuiContainer-maxWidthLg"
                          >
                            <Styled(MuiBox)
                              className="issue-lease-content form"
                            >
                              <div
                                className="MuiBox-root MuiBox-root-20 issue-lease-content form"
                              >
                                <Formik
                                  enableReinitialize={true}
                                  initialValues={
                                    Object {
                                      "building": "",
                                      "category": "",
                                      "expenseAmount": "",
                                      "expenseDate": "",
                                      "issueTitle": "",
                                      "resolvedBy": "",
                                      "summary": "",
                                      "unit": "",
                                    }
                                  }
                                  onSubmit={[Function]}
                                  validationSchema={
                                    ObjectSchema {
                                      "_blacklist": RefSet {
                                        "list": Set {},
                                        "refs": Map {},
                                      },
                                      "_conditions": Array [],
                                      "_defaultDefault": [Function],
                                      "_deps": Array [],
                                      "_excludedEdges": Array [],
                                      "_exclusive": Object {},
                                      "_mutate": undefined,
                                      "_nodes": Array [
                                        "summary",
                                        "resolvedBy",
                                        "unit",
                                        "building",
                                        "category",
                                        "issueTitle",
                                        "expenseAmount",
                                        "expenseDate",
                                      ],
                                      "_options": Object {
                                        "abortEarly": true,
                                        "recursive": true,
                                      },
                                      "_type": "object",
                                      "_typeError": [Function],
                                      "_whitelist": RefSet {
                                        "list": Set {},
                                        "refs": Map {},
                                      },
                                      "fields": Object {
                                        "building": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "category": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "expenseAmount": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "expenseDate": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "issueTitle": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "resolvedBy": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "summary": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "unit": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                      },
                                      "tests": Array [],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                      "type": "object",
                                    }
                                  }
                                >
                                  <Form
                                    onSubmit={[Function]}
                                    translate="true"
                                  >
                                    <form
                                      action="#"
                                      onReset={[Function]}
                                      onSubmit={[Function]}
                                      translate="true"
                                    >
                                      <Styled(MuiBox)
                                        className="select-input-box"
                                      >
                                        <div
                                          className="MuiBox-root MuiBox-root-21 select-input-box"
                                        >
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="expenseDate"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  placeholder=""
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/ExpenseTracking/assets/calender.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="expenseDate"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    placeholder=""
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/ExpenseTracking/assets/calender.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="expenseDate"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      placeholder=""
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/ExpenseTracking/assets/calender.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="expenseDate"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        placeholder=""
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/ExpenseTracking/assets/calender.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/ExpenseTracking/assets/calender.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="expenseDate"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="expenseAmount"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/ExpenseTracking/assets/expense-amount.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="expenseAmount"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/ExpenseTracking/assets/expense-amount.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="expenseAmount"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/ExpenseTracking/assets/expense-amount.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="expenseAmount"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        placeholder=""
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/ExpenseTracking/assets/expense-amount.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/ExpenseTracking/assets/expense-amount.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="expenseAmount"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="issueTitle"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/ExpenseTracking/assets/issue.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="issueTitle"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/ExpenseTracking/assets/issue.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="issueTitle"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/ExpenseTracking/assets/issue.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="issueTitle"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        placeholder=""
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/ExpenseTracking/assets/issue.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/ExpenseTracking/assets/issue.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="issueTitle"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <Styled(MuiBox)
                                                  className="select-box"
                                                >
                                                  <div
                                                    className="MuiBox-root MuiBox-root-22 select-box"
                                                  >
                                                    <WithStyles(ForwardRef(Select))
                                                      className="select-input"
                                                      displayEmpty={true}
                                                      input={<WithStyles(ForwardRef(OutlinedInput)) />}
                                                      name="category"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      value=""
                                                      variant="filled"
                                                    >
                                                      <ForwardRef(Select)
                                                        className="select-input"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          }
                                                        }
                                                        displayEmpty={true}
                                                        input={<WithStyles(ForwardRef(OutlinedInput)) />}
                                                        name="category"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        value=""
                                                        variant="filled"
                                                      >
                                                        <WithStyles(ForwardRef(OutlinedInput))
                                                          className="select-input"
                                                          inputComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "IconComponent": [Function],
                                                                "MenuProps": [Function],
                                                                "SelectDisplayProps": [Function],
                                                                "aria-label": [Function],
                                                                "autoFocus": [Function],
                                                                "autoWidth": [Function],
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "defaultValue": [Function],
                                                                "disabled": [Function],
                                                                "displayEmpty": [Function],
                                                                "inputRef": [Function],
                                                                "labelId": [Function],
                                                                "multiple": [Function],
                                                                "name": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onClose": [Function],
                                                                "onFocus": [Function],
                                                                "onOpen": [Function],
                                                                "open": [Function],
                                                                "readOnly": [Function],
                                                                "renderValue": [Function],
                                                                "tabIndex": [Function],
                                                                "type": [Function],
                                                                "value": [Function],
                                                                "variant": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          inputProps={
                                                            Object {
                                                              "IconComponent": Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              },
                                                              "MenuProps": undefined,
                                                              "SelectDisplayProps": Object {
                                                                "id": undefined,
                                                              },
                                                              "autoWidth": false,
                                                              "children": Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  disabled={true}
                                                                  value=""
                                                                >
                                                                  
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                Array [],
                                                              ],
                                                              "classes": Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              },
                                                              "displayEmpty": true,
                                                              "labelId": undefined,
                                                              "multiple": false,
                                                              "onClose": undefined,
                                                              "onOpen": undefined,
                                                              "open": undefined,
                                                              "renderValue": undefined,
                                                              "type": undefined,
                                                              "variant": "filled",
                                                            }
                                                          }
                                                          name="category"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          value=""
                                                        >
                                                          <ForwardRef(OutlinedInput)
                                                            className="select-input"
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "input": "MuiOutlinedInput-input",
                                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                                "multiline": "MuiOutlinedInput-multiline",
                                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                "root": "MuiOutlinedInput-root",
                                                              }
                                                            }
                                                            inputComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": [Function],
                                                                  "SelectDisplayProps": [Function],
                                                                  "aria-label": [Function],
                                                                  "autoFocus": [Function],
                                                                  "autoWidth": [Function],
                                                                  "children": [Function],
                                                                  "className": [Function],
                                                                  "classes": [Function],
                                                                  "defaultValue": [Function],
                                                                  "disabled": [Function],
                                                                  "displayEmpty": [Function],
                                                                  "inputRef": [Function],
                                                                  "labelId": [Function],
                                                                  "multiple": [Function],
                                                                  "name": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onClose": [Function],
                                                                  "onFocus": [Function],
                                                                  "onOpen": [Function],
                                                                  "open": [Function],
                                                                  "readOnly": [Function],
                                                                  "renderValue": [Function],
                                                                  "tabIndex": [Function],
                                                                  "type": [Function],
                                                                  "value": [Function],
                                                                  "variant": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": Object {
                                                                  "$$typeof": Symbol(react.memo),
                                                                  "compare": null,
                                                                  "type": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "render": [Function],
                                                                  },
                                                                },
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": undefined,
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    disabled={true}
                                                                    value=""
                                                                  >
                                                                    
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  Array [],
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "filled": "MuiSelect-filled",
                                                                  "icon": "MuiSelect-icon",
                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                  "nativeInput": "MuiSelect-nativeInput",
                                                                  "outlined": "MuiSelect-outlined",
                                                                  "root": "MuiSelect-root",
                                                                  "select": "MuiSelect-select",
                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                },
                                                                "displayEmpty": true,
                                                                "labelId": undefined,
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "filled",
                                                              }
                                                            }
                                                            name="category"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <WithStyles(ForwardRef(InputBase))
                                                              className="select-input"
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": null,
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={false}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": undefined,
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      disabled={true}
                                                                      value=""
                                                                    >
                                                                      
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    Array [],
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": true,
                                                                  "labelId": undefined,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "filled",
                                                                }
                                                              }
                                                              multiline={false}
                                                              name="category"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              renderSuffix={[Function]}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <ForwardRef(InputBase)
                                                                className="select-input"
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "formControl": "MuiInputBase-formControl",
                                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={false}
                                                                inputComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "propTypes": Object {
                                                                      "IconComponent": [Function],
                                                                      "MenuProps": [Function],
                                                                      "SelectDisplayProps": [Function],
                                                                      "aria-label": [Function],
                                                                      "autoFocus": [Function],
                                                                      "autoWidth": [Function],
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "classes": [Function],
                                                                      "defaultValue": [Function],
                                                                      "disabled": [Function],
                                                                      "displayEmpty": [Function],
                                                                      "inputRef": [Function],
                                                                      "labelId": [Function],
                                                                      "multiple": [Function],
                                                                      "name": [Function],
                                                                      "onBlur": [Function],
                                                                      "onChange": [Function],
                                                                      "onClose": [Function],
                                                                      "onFocus": [Function],
                                                                      "onOpen": [Function],
                                                                      "open": [Function],
                                                                      "readOnly": [Function],
                                                                      "renderValue": [Function],
                                                                      "tabIndex": [Function],
                                                                      "type": [Function],
                                                                      "value": [Function],
                                                                      "variant": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                inputProps={
                                                                  Object {
                                                                    "IconComponent": Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    },
                                                                    "MenuProps": undefined,
                                                                    "SelectDisplayProps": Object {
                                                                      "id": undefined,
                                                                    },
                                                                    "autoWidth": false,
                                                                    "children": Array [
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        disabled={true}
                                                                        value=""
                                                                      >
                                                                        
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      Array [],
                                                                    ],
                                                                    "classes": Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    },
                                                                    "displayEmpty": true,
                                                                    "labelId": undefined,
                                                                    "multiple": false,
                                                                    "onClose": undefined,
                                                                    "onOpen": undefined,
                                                                    "open": undefined,
                                                                    "renderValue": undefined,
                                                                    "type": undefined,
                                                                    "variant": "filled",
                                                                  }
                                                                }
                                                                multiline={false}
                                                                name="category"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="MuiInputBase-root MuiOutlinedInput-root select-input MuiInputBase-formControl"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(SelectInput)
                                                                    IconComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.memo),
                                                                        "compare": null,
                                                                        "type": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "render": [Function],
                                                                        },
                                                                      }
                                                                    }
                                                                    SelectDisplayProps={
                                                                      Object {
                                                                        "id": undefined,
                                                                      }
                                                                    }
                                                                    aria-invalid={false}
                                                                    autoWidth={false}
                                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "filled": "MuiSelect-filled",
                                                                        "icon": "MuiSelect-icon",
                                                                        "iconFilled": "MuiSelect-iconFilled",
                                                                        "iconOpen": "MuiSelect-iconOpen",
                                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                                        "nativeInput": "MuiSelect-nativeInput",
                                                                        "outlined": "MuiSelect-outlined",
                                                                        "root": "MuiSelect-root",
                                                                        "select": "MuiSelect-select",
                                                                        "selectMenu": "MuiSelect-selectMenu",
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    displayEmpty={true}
                                                                    inputRef={[Function]}
                                                                    multiple={false}
                                                                    name="category"
                                                                    onAnimationStart={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    value=""
                                                                    variant="filled"
                                                                  >
                                                                    <div
                                                                      aria-haspopup="listbox"
                                                                      aria-labelledby="mui-component-select-category"
                                                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                      id="mui-component-select-category"
                                                                      onBlur={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      <span
                                                                        dangerouslySetInnerHTML={
                                                                          Object {
                                                                            "__html": "&#8203;",
                                                                          }
                                                                        }
                                                                      />
                                                                    </div>
                                                                    <input
                                                                      aria-hidden={true}
                                                                      className="MuiSelect-nativeInput"
                                                                      name="category"
                                                                      onAnimationStart={[Function]}
                                                                      onChange={[Function]}
                                                                      required={false}
                                                                      tabIndex={-1}
                                                                      value=""
                                                                    />
                                                                    <ForwardRef(ArrowDropDownIcon)
                                                                      className="MuiSelect-icon MuiSelect-iconFilled"
                                                                    >
                                                                      <WithStyles(ForwardRef(SvgIcon))
                                                                        className="MuiSelect-icon MuiSelect-iconFilled"
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          className="MuiSelect-icon MuiSelect-iconFilled"
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconFilled"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M7 10l5 5 5-5z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(ArrowDropDownIcon)>
                                                                    <WithStyles(ForwardRef(Menu))
                                                                      MenuListProps={
                                                                        Object {
                                                                          "aria-labelledby": undefined,
                                                                          "disableListWrap": true,
                                                                          "role": "listbox",
                                                                        }
                                                                      }
                                                                      PaperProps={
                                                                        Object {
                                                                          "style": Object {
                                                                            "minWidth": undefined,
                                                                          },
                                                                        }
                                                                      }
                                                                      anchorEl={
                                                                        <div
                                                                          aria-haspopup="listbox"
                                                                          aria-labelledby="mui-component-select-category"
                                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                          id="mui-component-select-category"
                                                                          role="button"
                                                                          tabindex="0"
                                                                        >
                                                                          <span>
                                                                            ​
                                                                          </span>
                                                                        </div>
                                                                      }
                                                                      id="menu-category"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    >
                                                                      <ForwardRef(Menu)
                                                                        MenuListProps={
                                                                          Object {
                                                                            "aria-labelledby": undefined,
                                                                            "disableListWrap": true,
                                                                            "role": "listbox",
                                                                          }
                                                                        }
                                                                        PaperProps={
                                                                          Object {
                                                                            "style": Object {
                                                                              "minWidth": undefined,
                                                                            },
                                                                          }
                                                                        }
                                                                        anchorEl={
                                                                          <div
                                                                            aria-haspopup="listbox"
                                                                            aria-labelledby="mui-component-select-category"
                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                            id="mui-component-select-category"
                                                                            role="button"
                                                                            tabindex="0"
                                                                          >
                                                                            <span>
                                                                              ​
                                                                            </span>
                                                                          </div>
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "list": "MuiMenu-list",
                                                                            "paper": "MuiMenu-paper",
                                                                          }
                                                                        }
                                                                        id="menu-category"
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                      >
                                                                        <WithStyles(ForwardRef(Popover))
                                                                          PaperProps={
                                                                            Object {
                                                                              "classes": Object {
                                                                                "root": "MuiMenu-paper",
                                                                              },
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          TransitionProps={
                                                                            Object {
                                                                              "onEntering": [Function],
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              aria-labelledby="mui-component-select-category"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                              id="mui-component-select-category"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              <span>
                                                                                ​
                                                                              </span>
                                                                            </div>
                                                                          }
                                                                          anchorOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          getContentAnchorEl={[Function]}
                                                                          id="menu-category"
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          transformOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          transitionDuration="auto"
                                                                        >
                                                                          <ForwardRef(Popover)
                                                                            PaperProps={
                                                                              Object {
                                                                                "classes": Object {
                                                                                  "root": "MuiMenu-paper",
                                                                                },
                                                                                "style": Object {
                                                                                  "minWidth": undefined,
                                                                                },
                                                                              }
                                                                            }
                                                                            TransitionProps={
                                                                              Object {
                                                                                "onEntering": [Function],
                                                                              }
                                                                            }
                                                                            anchorEl={
                                                                              <div
                                                                                aria-haspopup="listbox"
                                                                                aria-labelledby="mui-component-select-category"
                                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                                id="mui-component-select-category"
                                                                                role="button"
                                                                                tabindex="0"
                                                                              >
                                                                                <span>
                                                                                  ​
                                                                                </span>
                                                                              </div>
                                                                            }
                                                                            anchorOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "paper": "MuiPopover-paper",
                                                                                "root": "MuiPopover-root",
                                                                              }
                                                                            }
                                                                            getContentAnchorEl={[Function]}
                                                                            id="menu-category"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                            transformOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            transitionDuration="auto"
                                                                          >
                                                                            <ForwardRef(Modal)
                                                                              BackdropProps={
                                                                                Object {
                                                                                  "invisible": true,
                                                                                }
                                                                              }
                                                                              className="MuiPopover-root"
                                                                              container={<body />}
                                                                              id="menu-category"
                                                                              onClose={[Function]}
                                                                              open={false}
                                                                            />
                                                                          </ForwardRef(Popover)>
                                                                        </WithStyles(ForwardRef(Popover))>
                                                                      </ForwardRef(Menu)>
                                                                    </WithStyles(ForwardRef(Menu))>
                                                                  </ForwardRef(SelectInput)>
                                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                                    className="MuiOutlinedInput-notchedOutline"
                                                                    labelWidth={0}
                                                                    notched={false}
                                                                  >
                                                                    <ForwardRef(NotchedOutline)
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      classes={
                                                                        Object {
                                                                          "legend": "PrivateNotchedOutline-legend-9",
                                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-10",
                                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-11",
                                                                          "root": "PrivateNotchedOutline-root-8",
                                                                        }
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={false}
                                                                    >
                                                                      <fieldset
                                                                        aria-hidden={true}
                                                                        className="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                                                        style={
                                                                          Object {
                                                                            "paddingLeft": 8,
                                                                          }
                                                                        }
                                                                      >
                                                                        <legend
                                                                          className="PrivateNotchedOutline-legend-9"
                                                                          style={
                                                                            Object {
                                                                              "width": 0.01,
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            dangerouslySetInnerHTML={
                                                                              Object {
                                                                                "__html": "&#8203;",
                                                                              }
                                                                            }
                                                                          />
                                                                        </legend>
                                                                      </fieldset>
                                                                    </ForwardRef(NotchedOutline)>
                                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                                </div>
                                                              </ForwardRef(InputBase)>
                                                            </WithStyles(ForwardRef(InputBase))>
                                                          </ForwardRef(OutlinedInput)>
                                                        </WithStyles(ForwardRef(OutlinedInput))>
                                                      </ForwardRef(Select)>
                                                    </WithStyles(ForwardRef(Select))>
                                                    <img
                                                      alt=""
                                                      src={
                                                        Object {
                                                          "testUri": "../../../packages/blocks/ExpenseTracking/assets/category.png",
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </Styled(MuiBox)>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <Styled(MuiBox)
                                                  className="select-box"
                                                >
                                                  <div
                                                    className="MuiBox-root MuiBox-root-23 select-box"
                                                  >
                                                    <WithStyles(ForwardRef(Select))
                                                      className="select-input"
                                                      displayEmpty={true}
                                                      input={<WithStyles(ForwardRef(OutlinedInput)) />}
                                                      name="building"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      value=""
                                                      variant="filled"
                                                    >
                                                      <ForwardRef(Select)
                                                        className="select-input"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          }
                                                        }
                                                        displayEmpty={true}
                                                        input={<WithStyles(ForwardRef(OutlinedInput)) />}
                                                        name="building"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        value=""
                                                        variant="filled"
                                                      >
                                                        <WithStyles(ForwardRef(OutlinedInput))
                                                          className="select-input"
                                                          inputComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "IconComponent": [Function],
                                                                "MenuProps": [Function],
                                                                "SelectDisplayProps": [Function],
                                                                "aria-label": [Function],
                                                                "autoFocus": [Function],
                                                                "autoWidth": [Function],
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "defaultValue": [Function],
                                                                "disabled": [Function],
                                                                "displayEmpty": [Function],
                                                                "inputRef": [Function],
                                                                "labelId": [Function],
                                                                "multiple": [Function],
                                                                "name": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onClose": [Function],
                                                                "onFocus": [Function],
                                                                "onOpen": [Function],
                                                                "open": [Function],
                                                                "readOnly": [Function],
                                                                "renderValue": [Function],
                                                                "tabIndex": [Function],
                                                                "type": [Function],
                                                                "value": [Function],
                                                                "variant": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          inputProps={
                                                            Object {
                                                              "IconComponent": Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              },
                                                              "MenuProps": undefined,
                                                              "SelectDisplayProps": Object {
                                                                "id": undefined,
                                                              },
                                                              "autoWidth": false,
                                                              "children": Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  disabled={true}
                                                                  value=""
                                                                >
                                                                  
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                Array [],
                                                              ],
                                                              "classes": Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              },
                                                              "displayEmpty": true,
                                                              "labelId": undefined,
                                                              "multiple": false,
                                                              "onClose": undefined,
                                                              "onOpen": undefined,
                                                              "open": undefined,
                                                              "renderValue": undefined,
                                                              "type": undefined,
                                                              "variant": "filled",
                                                            }
                                                          }
                                                          name="building"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          value=""
                                                        >
                                                          <ForwardRef(OutlinedInput)
                                                            className="select-input"
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "input": "MuiOutlinedInput-input",
                                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                                "multiline": "MuiOutlinedInput-multiline",
                                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                "root": "MuiOutlinedInput-root",
                                                              }
                                                            }
                                                            inputComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": [Function],
                                                                  "SelectDisplayProps": [Function],
                                                                  "aria-label": [Function],
                                                                  "autoFocus": [Function],
                                                                  "autoWidth": [Function],
                                                                  "children": [Function],
                                                                  "className": [Function],
                                                                  "classes": [Function],
                                                                  "defaultValue": [Function],
                                                                  "disabled": [Function],
                                                                  "displayEmpty": [Function],
                                                                  "inputRef": [Function],
                                                                  "labelId": [Function],
                                                                  "multiple": [Function],
                                                                  "name": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onClose": [Function],
                                                                  "onFocus": [Function],
                                                                  "onOpen": [Function],
                                                                  "open": [Function],
                                                                  "readOnly": [Function],
                                                                  "renderValue": [Function],
                                                                  "tabIndex": [Function],
                                                                  "type": [Function],
                                                                  "value": [Function],
                                                                  "variant": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": Object {
                                                                  "$$typeof": Symbol(react.memo),
                                                                  "compare": null,
                                                                  "type": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "render": [Function],
                                                                  },
                                                                },
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": undefined,
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    disabled={true}
                                                                    value=""
                                                                  >
                                                                    
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  Array [],
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "filled": "MuiSelect-filled",
                                                                  "icon": "MuiSelect-icon",
                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                  "nativeInput": "MuiSelect-nativeInput",
                                                                  "outlined": "MuiSelect-outlined",
                                                                  "root": "MuiSelect-root",
                                                                  "select": "MuiSelect-select",
                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                },
                                                                "displayEmpty": true,
                                                                "labelId": undefined,
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "filled",
                                                              }
                                                            }
                                                            name="building"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <WithStyles(ForwardRef(InputBase))
                                                              className="select-input"
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": null,
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={false}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": undefined,
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      disabled={true}
                                                                      value=""
                                                                    >
                                                                      
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    Array [],
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": true,
                                                                  "labelId": undefined,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "filled",
                                                                }
                                                              }
                                                              multiline={false}
                                                              name="building"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              renderSuffix={[Function]}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <ForwardRef(InputBase)
                                                                className="select-input"
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "formControl": "MuiInputBase-formControl",
                                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={false}
                                                                inputComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "propTypes": Object {
                                                                      "IconComponent": [Function],
                                                                      "MenuProps": [Function],
                                                                      "SelectDisplayProps": [Function],
                                                                      "aria-label": [Function],
                                                                      "autoFocus": [Function],
                                                                      "autoWidth": [Function],
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "classes": [Function],
                                                                      "defaultValue": [Function],
                                                                      "disabled": [Function],
                                                                      "displayEmpty": [Function],
                                                                      "inputRef": [Function],
                                                                      "labelId": [Function],
                                                                      "multiple": [Function],
                                                                      "name": [Function],
                                                                      "onBlur": [Function],
                                                                      "onChange": [Function],
                                                                      "onClose": [Function],
                                                                      "onFocus": [Function],
                                                                      "onOpen": [Function],
                                                                      "open": [Function],
                                                                      "readOnly": [Function],
                                                                      "renderValue": [Function],
                                                                      "tabIndex": [Function],
                                                                      "type": [Function],
                                                                      "value": [Function],
                                                                      "variant": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                inputProps={
                                                                  Object {
                                                                    "IconComponent": Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    },
                                                                    "MenuProps": undefined,
                                                                    "SelectDisplayProps": Object {
                                                                      "id": undefined,
                                                                    },
                                                                    "autoWidth": false,
                                                                    "children": Array [
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        disabled={true}
                                                                        value=""
                                                                      >
                                                                        
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      Array [],
                                                                    ],
                                                                    "classes": Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    },
                                                                    "displayEmpty": true,
                                                                    "labelId": undefined,
                                                                    "multiple": false,
                                                                    "onClose": undefined,
                                                                    "onOpen": undefined,
                                                                    "open": undefined,
                                                                    "renderValue": undefined,
                                                                    "type": undefined,
                                                                    "variant": "filled",
                                                                  }
                                                                }
                                                                multiline={false}
                                                                name="building"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="MuiInputBase-root MuiOutlinedInput-root select-input MuiInputBase-formControl"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(SelectInput)
                                                                    IconComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.memo),
                                                                        "compare": null,
                                                                        "type": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "render": [Function],
                                                                        },
                                                                      }
                                                                    }
                                                                    SelectDisplayProps={
                                                                      Object {
                                                                        "id": undefined,
                                                                      }
                                                                    }
                                                                    aria-invalid={false}
                                                                    autoWidth={false}
                                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "filled": "MuiSelect-filled",
                                                                        "icon": "MuiSelect-icon",
                                                                        "iconFilled": "MuiSelect-iconFilled",
                                                                        "iconOpen": "MuiSelect-iconOpen",
                                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                                        "nativeInput": "MuiSelect-nativeInput",
                                                                        "outlined": "MuiSelect-outlined",
                                                                        "root": "MuiSelect-root",
                                                                        "select": "MuiSelect-select",
                                                                        "selectMenu": "MuiSelect-selectMenu",
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    displayEmpty={true}
                                                                    inputRef={[Function]}
                                                                    multiple={false}
                                                                    name="building"
                                                                    onAnimationStart={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    value=""
                                                                    variant="filled"
                                                                  >
                                                                    <div
                                                                      aria-haspopup="listbox"
                                                                      aria-labelledby="mui-component-select-building"
                                                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                      id="mui-component-select-building"
                                                                      onBlur={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      <span
                                                                        dangerouslySetInnerHTML={
                                                                          Object {
                                                                            "__html": "&#8203;",
                                                                          }
                                                                        }
                                                                      />
                                                                    </div>
                                                                    <input
                                                                      aria-hidden={true}
                                                                      className="MuiSelect-nativeInput"
                                                                      name="building"
                                                                      onAnimationStart={[Function]}
                                                                      onChange={[Function]}
                                                                      required={false}
                                                                      tabIndex={-1}
                                                                      value=""
                                                                    />
                                                                    <ForwardRef(ArrowDropDownIcon)
                                                                      className="MuiSelect-icon MuiSelect-iconFilled"
                                                                    >
                                                                      <WithStyles(ForwardRef(SvgIcon))
                                                                        className="MuiSelect-icon MuiSelect-iconFilled"
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          className="MuiSelect-icon MuiSelect-iconFilled"
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconFilled"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M7 10l5 5 5-5z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(ArrowDropDownIcon)>
                                                                    <WithStyles(ForwardRef(Menu))
                                                                      MenuListProps={
                                                                        Object {
                                                                          "aria-labelledby": undefined,
                                                                          "disableListWrap": true,
                                                                          "role": "listbox",
                                                                        }
                                                                      }
                                                                      PaperProps={
                                                                        Object {
                                                                          "style": Object {
                                                                            "minWidth": undefined,
                                                                          },
                                                                        }
                                                                      }
                                                                      anchorEl={
                                                                        <div
                                                                          aria-haspopup="listbox"
                                                                          aria-labelledby="mui-component-select-building"
                                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                          id="mui-component-select-building"
                                                                          role="button"
                                                                          tabindex="0"
                                                                        >
                                                                          <span>
                                                                            ​
                                                                          </span>
                                                                        </div>
                                                                      }
                                                                      id="menu-building"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    >
                                                                      <ForwardRef(Menu)
                                                                        MenuListProps={
                                                                          Object {
                                                                            "aria-labelledby": undefined,
                                                                            "disableListWrap": true,
                                                                            "role": "listbox",
                                                                          }
                                                                        }
                                                                        PaperProps={
                                                                          Object {
                                                                            "style": Object {
                                                                              "minWidth": undefined,
                                                                            },
                                                                          }
                                                                        }
                                                                        anchorEl={
                                                                          <div
                                                                            aria-haspopup="listbox"
                                                                            aria-labelledby="mui-component-select-building"
                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                            id="mui-component-select-building"
                                                                            role="button"
                                                                            tabindex="0"
                                                                          >
                                                                            <span>
                                                                              ​
                                                                            </span>
                                                                          </div>
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "list": "MuiMenu-list",
                                                                            "paper": "MuiMenu-paper",
                                                                          }
                                                                        }
                                                                        id="menu-building"
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                      >
                                                                        <WithStyles(ForwardRef(Popover))
                                                                          PaperProps={
                                                                            Object {
                                                                              "classes": Object {
                                                                                "root": "MuiMenu-paper",
                                                                              },
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          TransitionProps={
                                                                            Object {
                                                                              "onEntering": [Function],
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              aria-labelledby="mui-component-select-building"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                              id="mui-component-select-building"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              <span>
                                                                                ​
                                                                              </span>
                                                                            </div>
                                                                          }
                                                                          anchorOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          getContentAnchorEl={[Function]}
                                                                          id="menu-building"
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          transformOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          transitionDuration="auto"
                                                                        >
                                                                          <ForwardRef(Popover)
                                                                            PaperProps={
                                                                              Object {
                                                                                "classes": Object {
                                                                                  "root": "MuiMenu-paper",
                                                                                },
                                                                                "style": Object {
                                                                                  "minWidth": undefined,
                                                                                },
                                                                              }
                                                                            }
                                                                            TransitionProps={
                                                                              Object {
                                                                                "onEntering": [Function],
                                                                              }
                                                                            }
                                                                            anchorEl={
                                                                              <div
                                                                                aria-haspopup="listbox"
                                                                                aria-labelledby="mui-component-select-building"
                                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                                id="mui-component-select-building"
                                                                                role="button"
                                                                                tabindex="0"
                                                                              >
                                                                                <span>
                                                                                  ​
                                                                                </span>
                                                                              </div>
                                                                            }
                                                                            anchorOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "paper": "MuiPopover-paper",
                                                                                "root": "MuiPopover-root",
                                                                              }
                                                                            }
                                                                            getContentAnchorEl={[Function]}
                                                                            id="menu-building"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                            transformOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            transitionDuration="auto"
                                                                          >
                                                                            <ForwardRef(Modal)
                                                                              BackdropProps={
                                                                                Object {
                                                                                  "invisible": true,
                                                                                }
                                                                              }
                                                                              className="MuiPopover-root"
                                                                              container={<body />}
                                                                              id="menu-building"
                                                                              onClose={[Function]}
                                                                              open={false}
                                                                            />
                                                                          </ForwardRef(Popover)>
                                                                        </WithStyles(ForwardRef(Popover))>
                                                                      </ForwardRef(Menu)>
                                                                    </WithStyles(ForwardRef(Menu))>
                                                                  </ForwardRef(SelectInput)>
                                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                                    className="MuiOutlinedInput-notchedOutline"
                                                                    labelWidth={0}
                                                                    notched={false}
                                                                  >
                                                                    <ForwardRef(NotchedOutline)
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      classes={
                                                                        Object {
                                                                          "legend": "PrivateNotchedOutline-legend-9",
                                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-10",
                                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-11",
                                                                          "root": "PrivateNotchedOutline-root-8",
                                                                        }
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={false}
                                                                    >
                                                                      <fieldset
                                                                        aria-hidden={true}
                                                                        className="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                                                        style={
                                                                          Object {
                                                                            "paddingLeft": 8,
                                                                          }
                                                                        }
                                                                      >
                                                                        <legend
                                                                          className="PrivateNotchedOutline-legend-9"
                                                                          style={
                                                                            Object {
                                                                              "width": 0.01,
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            dangerouslySetInnerHTML={
                                                                              Object {
                                                                                "__html": "&#8203;",
                                                                              }
                                                                            }
                                                                          />
                                                                        </legend>
                                                                      </fieldset>
                                                                    </ForwardRef(NotchedOutline)>
                                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                                </div>
                                                              </ForwardRef(InputBase)>
                                                            </WithStyles(ForwardRef(InputBase))>
                                                          </ForwardRef(OutlinedInput)>
                                                        </WithStyles(ForwardRef(OutlinedInput))>
                                                      </ForwardRef(Select)>
                                                    </WithStyles(ForwardRef(Select))>
                                                    <img
                                                      alt=""
                                                      src={
                                                        Object {
                                                          "testUri": "../../../packages/blocks/ExpenseTracking/assets/building.png",
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </Styled(MuiBox)>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <Styled(MuiBox)
                                                  className="select-box"
                                                >
                                                  <div
                                                    className="MuiBox-root MuiBox-root-24 select-box"
                                                  >
                                                    <WithStyles(ForwardRef(Select))
                                                      className="select-input"
                                                      displayEmpty={true}
                                                      input={<WithStyles(ForwardRef(OutlinedInput)) />}
                                                      name="unit"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      value=""
                                                      variant="filled"
                                                    >
                                                      <ForwardRef(Select)
                                                        className="select-input"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          }
                                                        }
                                                        displayEmpty={true}
                                                        input={<WithStyles(ForwardRef(OutlinedInput)) />}
                                                        name="unit"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        value=""
                                                        variant="filled"
                                                      >
                                                        <WithStyles(ForwardRef(OutlinedInput))
                                                          className="select-input"
                                                          inputComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "IconComponent": [Function],
                                                                "MenuProps": [Function],
                                                                "SelectDisplayProps": [Function],
                                                                "aria-label": [Function],
                                                                "autoFocus": [Function],
                                                                "autoWidth": [Function],
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "defaultValue": [Function],
                                                                "disabled": [Function],
                                                                "displayEmpty": [Function],
                                                                "inputRef": [Function],
                                                                "labelId": [Function],
                                                                "multiple": [Function],
                                                                "name": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onClose": [Function],
                                                                "onFocus": [Function],
                                                                "onOpen": [Function],
                                                                "open": [Function],
                                                                "readOnly": [Function],
                                                                "renderValue": [Function],
                                                                "tabIndex": [Function],
                                                                "type": [Function],
                                                                "value": [Function],
                                                                "variant": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          inputProps={
                                                            Object {
                                                              "IconComponent": Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              },
                                                              "MenuProps": undefined,
                                                              "SelectDisplayProps": Object {
                                                                "id": undefined,
                                                              },
                                                              "autoWidth": false,
                                                              "children": Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  disabled={true}
                                                                  value=""
                                                                >
                                                                  
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                Array [],
                                                              ],
                                                              "classes": Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              },
                                                              "displayEmpty": true,
                                                              "labelId": undefined,
                                                              "multiple": false,
                                                              "onClose": undefined,
                                                              "onOpen": undefined,
                                                              "open": undefined,
                                                              "renderValue": undefined,
                                                              "type": undefined,
                                                              "variant": "filled",
                                                            }
                                                          }
                                                          name="unit"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          value=""
                                                        >
                                                          <ForwardRef(OutlinedInput)
                                                            className="select-input"
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "input": "MuiOutlinedInput-input",
                                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                                "multiline": "MuiOutlinedInput-multiline",
                                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                "root": "MuiOutlinedInput-root",
                                                              }
                                                            }
                                                            inputComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": [Function],
                                                                  "SelectDisplayProps": [Function],
                                                                  "aria-label": [Function],
                                                                  "autoFocus": [Function],
                                                                  "autoWidth": [Function],
                                                                  "children": [Function],
                                                                  "className": [Function],
                                                                  "classes": [Function],
                                                                  "defaultValue": [Function],
                                                                  "disabled": [Function],
                                                                  "displayEmpty": [Function],
                                                                  "inputRef": [Function],
                                                                  "labelId": [Function],
                                                                  "multiple": [Function],
                                                                  "name": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onClose": [Function],
                                                                  "onFocus": [Function],
                                                                  "onOpen": [Function],
                                                                  "open": [Function],
                                                                  "readOnly": [Function],
                                                                  "renderValue": [Function],
                                                                  "tabIndex": [Function],
                                                                  "type": [Function],
                                                                  "value": [Function],
                                                                  "variant": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": Object {
                                                                  "$$typeof": Symbol(react.memo),
                                                                  "compare": null,
                                                                  "type": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "render": [Function],
                                                                  },
                                                                },
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": undefined,
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    disabled={true}
                                                                    value=""
                                                                  >
                                                                    
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  Array [],
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "filled": "MuiSelect-filled",
                                                                  "icon": "MuiSelect-icon",
                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                  "nativeInput": "MuiSelect-nativeInput",
                                                                  "outlined": "MuiSelect-outlined",
                                                                  "root": "MuiSelect-root",
                                                                  "select": "MuiSelect-select",
                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                },
                                                                "displayEmpty": true,
                                                                "labelId": undefined,
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "filled",
                                                              }
                                                            }
                                                            name="unit"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <WithStyles(ForwardRef(InputBase))
                                                              className="select-input"
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": null,
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={false}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": undefined,
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      disabled={true}
                                                                      value=""
                                                                    >
                                                                      
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    Array [],
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": true,
                                                                  "labelId": undefined,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "filled",
                                                                }
                                                              }
                                                              multiline={false}
                                                              name="unit"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              renderSuffix={[Function]}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <ForwardRef(InputBase)
                                                                className="select-input"
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "formControl": "MuiInputBase-formControl",
                                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={false}
                                                                inputComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "propTypes": Object {
                                                                      "IconComponent": [Function],
                                                                      "MenuProps": [Function],
                                                                      "SelectDisplayProps": [Function],
                                                                      "aria-label": [Function],
                                                                      "autoFocus": [Function],
                                                                      "autoWidth": [Function],
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "classes": [Function],
                                                                      "defaultValue": [Function],
                                                                      "disabled": [Function],
                                                                      "displayEmpty": [Function],
                                                                      "inputRef": [Function],
                                                                      "labelId": [Function],
                                                                      "multiple": [Function],
                                                                      "name": [Function],
                                                                      "onBlur": [Function],
                                                                      "onChange": [Function],
                                                                      "onClose": [Function],
                                                                      "onFocus": [Function],
                                                                      "onOpen": [Function],
                                                                      "open": [Function],
                                                                      "readOnly": [Function],
                                                                      "renderValue": [Function],
                                                                      "tabIndex": [Function],
                                                                      "type": [Function],
                                                                      "value": [Function],
                                                                      "variant": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                inputProps={
                                                                  Object {
                                                                    "IconComponent": Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    },
                                                                    "MenuProps": undefined,
                                                                    "SelectDisplayProps": Object {
                                                                      "id": undefined,
                                                                    },
                                                                    "autoWidth": false,
                                                                    "children": Array [
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        disabled={true}
                                                                        value=""
                                                                      >
                                                                        
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      Array [],
                                                                    ],
                                                                    "classes": Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    },
                                                                    "displayEmpty": true,
                                                                    "labelId": undefined,
                                                                    "multiple": false,
                                                                    "onClose": undefined,
                                                                    "onOpen": undefined,
                                                                    "open": undefined,
                                                                    "renderValue": undefined,
                                                                    "type": undefined,
                                                                    "variant": "filled",
                                                                  }
                                                                }
                                                                multiline={false}
                                                                name="unit"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="MuiInputBase-root MuiOutlinedInput-root select-input MuiInputBase-formControl"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(SelectInput)
                                                                    IconComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.memo),
                                                                        "compare": null,
                                                                        "type": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "render": [Function],
                                                                        },
                                                                      }
                                                                    }
                                                                    SelectDisplayProps={
                                                                      Object {
                                                                        "id": undefined,
                                                                      }
                                                                    }
                                                                    aria-invalid={false}
                                                                    autoWidth={false}
                                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "filled": "MuiSelect-filled",
                                                                        "icon": "MuiSelect-icon",
                                                                        "iconFilled": "MuiSelect-iconFilled",
                                                                        "iconOpen": "MuiSelect-iconOpen",
                                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                                        "nativeInput": "MuiSelect-nativeInput",
                                                                        "outlined": "MuiSelect-outlined",
                                                                        "root": "MuiSelect-root",
                                                                        "select": "MuiSelect-select",
                                                                        "selectMenu": "MuiSelect-selectMenu",
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    displayEmpty={true}
                                                                    inputRef={[Function]}
                                                                    multiple={false}
                                                                    name="unit"
                                                                    onAnimationStart={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    value=""
                                                                    variant="filled"
                                                                  >
                                                                    <div
                                                                      aria-haspopup="listbox"
                                                                      aria-labelledby="mui-component-select-unit"
                                                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                      id="mui-component-select-unit"
                                                                      onBlur={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      <span
                                                                        dangerouslySetInnerHTML={
                                                                          Object {
                                                                            "__html": "&#8203;",
                                                                          }
                                                                        }
                                                                      />
                                                                    </div>
                                                                    <input
                                                                      aria-hidden={true}
                                                                      className="MuiSelect-nativeInput"
                                                                      name="unit"
                                                                      onAnimationStart={[Function]}
                                                                      onChange={[Function]}
                                                                      required={false}
                                                                      tabIndex={-1}
                                                                      value=""
                                                                    />
                                                                    <ForwardRef(ArrowDropDownIcon)
                                                                      className="MuiSelect-icon MuiSelect-iconFilled"
                                                                    >
                                                                      <WithStyles(ForwardRef(SvgIcon))
                                                                        className="MuiSelect-icon MuiSelect-iconFilled"
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          className="MuiSelect-icon MuiSelect-iconFilled"
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconFilled"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M7 10l5 5 5-5z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(ArrowDropDownIcon)>
                                                                    <WithStyles(ForwardRef(Menu))
                                                                      MenuListProps={
                                                                        Object {
                                                                          "aria-labelledby": undefined,
                                                                          "disableListWrap": true,
                                                                          "role": "listbox",
                                                                        }
                                                                      }
                                                                      PaperProps={
                                                                        Object {
                                                                          "style": Object {
                                                                            "minWidth": undefined,
                                                                          },
                                                                        }
                                                                      }
                                                                      anchorEl={
                                                                        <div
                                                                          aria-haspopup="listbox"
                                                                          aria-labelledby="mui-component-select-unit"
                                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                          id="mui-component-select-unit"
                                                                          role="button"
                                                                          tabindex="0"
                                                                        >
                                                                          <span>
                                                                            ​
                                                                          </span>
                                                                        </div>
                                                                      }
                                                                      id="menu-unit"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    >
                                                                      <ForwardRef(Menu)
                                                                        MenuListProps={
                                                                          Object {
                                                                            "aria-labelledby": undefined,
                                                                            "disableListWrap": true,
                                                                            "role": "listbox",
                                                                          }
                                                                        }
                                                                        PaperProps={
                                                                          Object {
                                                                            "style": Object {
                                                                              "minWidth": undefined,
                                                                            },
                                                                          }
                                                                        }
                                                                        anchorEl={
                                                                          <div
                                                                            aria-haspopup="listbox"
                                                                            aria-labelledby="mui-component-select-unit"
                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                            id="mui-component-select-unit"
                                                                            role="button"
                                                                            tabindex="0"
                                                                          >
                                                                            <span>
                                                                              ​
                                                                            </span>
                                                                          </div>
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "list": "MuiMenu-list",
                                                                            "paper": "MuiMenu-paper",
                                                                          }
                                                                        }
                                                                        id="menu-unit"
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                      >
                                                                        <WithStyles(ForwardRef(Popover))
                                                                          PaperProps={
                                                                            Object {
                                                                              "classes": Object {
                                                                                "root": "MuiMenu-paper",
                                                                              },
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          TransitionProps={
                                                                            Object {
                                                                              "onEntering": [Function],
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              aria-labelledby="mui-component-select-unit"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                              id="mui-component-select-unit"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              <span>
                                                                                ​
                                                                              </span>
                                                                            </div>
                                                                          }
                                                                          anchorOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          getContentAnchorEl={[Function]}
                                                                          id="menu-unit"
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          transformOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          transitionDuration="auto"
                                                                        >
                                                                          <ForwardRef(Popover)
                                                                            PaperProps={
                                                                              Object {
                                                                                "classes": Object {
                                                                                  "root": "MuiMenu-paper",
                                                                                },
                                                                                "style": Object {
                                                                                  "minWidth": undefined,
                                                                                },
                                                                              }
                                                                            }
                                                                            TransitionProps={
                                                                              Object {
                                                                                "onEntering": [Function],
                                                                              }
                                                                            }
                                                                            anchorEl={
                                                                              <div
                                                                                aria-haspopup="listbox"
                                                                                aria-labelledby="mui-component-select-unit"
                                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                                id="mui-component-select-unit"
                                                                                role="button"
                                                                                tabindex="0"
                                                                              >
                                                                                <span>
                                                                                  ​
                                                                                </span>
                                                                              </div>
                                                                            }
                                                                            anchorOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "paper": "MuiPopover-paper",
                                                                                "root": "MuiPopover-root",
                                                                              }
                                                                            }
                                                                            getContentAnchorEl={[Function]}
                                                                            id="menu-unit"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                            transformOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            transitionDuration="auto"
                                                                          >
                                                                            <ForwardRef(Modal)
                                                                              BackdropProps={
                                                                                Object {
                                                                                  "invisible": true,
                                                                                }
                                                                              }
                                                                              className="MuiPopover-root"
                                                                              container={<body />}
                                                                              id="menu-unit"
                                                                              onClose={[Function]}
                                                                              open={false}
                                                                            />
                                                                          </ForwardRef(Popover)>
                                                                        </WithStyles(ForwardRef(Popover))>
                                                                      </ForwardRef(Menu)>
                                                                    </WithStyles(ForwardRef(Menu))>
                                                                  </ForwardRef(SelectInput)>
                                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                                    className="MuiOutlinedInput-notchedOutline"
                                                                    labelWidth={0}
                                                                    notched={false}
                                                                  >
                                                                    <ForwardRef(NotchedOutline)
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      classes={
                                                                        Object {
                                                                          "legend": "PrivateNotchedOutline-legend-9",
                                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-10",
                                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-11",
                                                                          "root": "PrivateNotchedOutline-root-8",
                                                                        }
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={false}
                                                                    >
                                                                      <fieldset
                                                                        aria-hidden={true}
                                                                        className="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                                                        style={
                                                                          Object {
                                                                            "paddingLeft": 8,
                                                                          }
                                                                        }
                                                                      >
                                                                        <legend
                                                                          className="PrivateNotchedOutline-legend-9"
                                                                          style={
                                                                            Object {
                                                                              "width": 0.01,
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            dangerouslySetInnerHTML={
                                                                              Object {
                                                                                "__html": "&#8203;",
                                                                              }
                                                                            }
                                                                          />
                                                                        </legend>
                                                                      </fieldset>
                                                                    </ForwardRef(NotchedOutline)>
                                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                                </div>
                                                              </ForwardRef(InputBase)>
                                                            </WithStyles(ForwardRef(InputBase))>
                                                          </ForwardRef(OutlinedInput)>
                                                        </WithStyles(ForwardRef(OutlinedInput))>
                                                      </ForwardRef(Select)>
                                                    </WithStyles(ForwardRef(Select))>
                                                    <img
                                                      alt=""
                                                      src={
                                                        Object {
                                                          "testUri": "../../../packages/blocks/ExpenseTracking/assets/unit.png",
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </Styled(MuiBox)>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="resolvedBy"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/ExpenseTracking/assets/resolved-by.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="resolvedBy"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/ExpenseTracking/assets/resolved-by.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="resolvedBy"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/ExpenseTracking/assets/resolved-by.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="resolvedBy"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        placeholder=""
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/ExpenseTracking/assets/resolved-by.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/ExpenseTracking/assets/resolved-by.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="resolvedBy"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="summary"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/ExpenseTracking/assets/summary.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="summary"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/ExpenseTracking/assets/summary.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="summary"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/ExpenseTracking/assets/summary.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="summary"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        placeholder=""
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/ExpenseTracking/assets/summary.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/ExpenseTracking/assets/summary.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="summary"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <Styled(MuiBox)
                                            className="next-button"
                                          >
                                            <div
                                              className="MuiBox-root MuiBox-root-25 next-button"
                                            >
                                              <WithStyles(ForwardRef(Button))
                                                type="submit"
                                              >
                                                <ForwardRef(Button)
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit",
                                                      "contained": "MuiButton-contained",
                                                      "containedPrimary": "MuiButton-containedPrimary",
                                                      "containedSecondary": "MuiButton-containedSecondary",
                                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                      "disableElevation": "MuiButton-disableElevation",
                                                      "disabled": "Mui-disabled",
                                                      "endIcon": "MuiButton-endIcon",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "fullWidth": "MuiButton-fullWidth",
                                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                      "label": "MuiButton-label",
                                                      "outlined": "MuiButton-outlined",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                      "root": "MuiButton-root",
                                                      "sizeLarge": "MuiButton-sizeLarge",
                                                      "sizeSmall": "MuiButton-sizeSmall",
                                                      "startIcon": "MuiButton-startIcon",
                                                      "text": "MuiButton-text",
                                                      "textPrimary": "MuiButton-textPrimary",
                                                      "textSecondary": "MuiButton-textSecondary",
                                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                                    }
                                                  }
                                                  type="submit"
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiButton-root MuiButton-text"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    type="submit"
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiButton-root MuiButton-text"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="button"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      type="submit"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root MuiButton-root MuiButton-text"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={0}
                                                        type="submit"
                                                      >
                                                        <span
                                                          className="MuiButton-label"
                                                        />
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </button>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(Button)>
                                              </WithStyles(ForwardRef(Button))>
                                            </div>
                                          </Styled(MuiBox)>
                                        </div>
                                      </Styled(MuiBox)>
                                    </form>
                                  </Form>
                                </Formik>
                              </div>
                            </Styled(MuiBox)>
                          </div>
                        </ForwardRef(Container)>
                      </WithStyles(ForwardRef(Container))>
                    </div>
                  </Styled(MuiBox)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
            <WithStyles(ForwardRef(Grid))
              item={true}
              md={5}
              xs={12}
            >
              <ForwardRef(Grid)
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={5}
                xs={12}
              >
                <div
                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-5"
                >
                  <SidebarImageComponent>
                    <Styled(MuiBox)
                      className="right-block right-image"
                      display={
                        Object {
                          "md": "flex",
                          "xs": "none",
                        }
                      }
                    >
                      <div
                        className="MuiBox-root MuiBox-root-26 right-block right-image"
                      >
                        <img
                          alt=""
                          className="building-logo"
                        />
                      </div>
                    </Styled(MuiBox)>
                  </SidebarImageComponent>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
          </div>
        </ForwardRef(Grid)>
      </WithStyles(ForwardRef(Grid))>
    </div>
  </Styled(MuiBox)>
</AddEditExpense>
`;

exports[`AddEditExpense User navigates to AddEditExpense 1`] = `
<AddEditExpense
  classes={
    Object {
      "addEditExpense": Object {
        "& .error": Object {
          "color": "red",
          "fontSize": "14px",
          "marginLeft": "20px",
        },
        "& .form.issue-lease-content .next-button": Object {
          "bottom": 0,
          "position": "sticky",
        },
        "& .issue-lease-content .MuiSelect-root": Object {
          "background": "#F9F9F9",
          "borderRadius": "30px",
        },
        "& .issue-lease-content .select-box": Object {
          "position": "relative",
        },
        "& .issue-lease-content .select-box .select-input": Object {
          "paddingLeft": "50px",
          "width": "100%",
        },
        "& .issue-lease-content .select-box .select-input.input": Object {
          "fontSize": "16px",
          "outline": "none",
          "padding": "18px 10px 18px 60px !important",
        },
        "& .issue-lease-content .select-box img": Object {
          "left": "15px",
          "position": "absolute",
          "top": "38px",
        },
        "& .issue-lease-content .select-input-box .input.select-input": Object {
          "padding": "12px 15px",
        },
        "& .issue-lease-content .select-input-box .input.select-input .MuiInputAdornment-positionStart": Object {
          "marginRight": "25px",
        },
        "& .issue-lease-content .select-input-box .input.select-input:after": Object {
          "border": 0,
        },
        "& .issue-lease-content .select-input-box .input.select-input:before": Object {
          "border": 0,
        },
        "& .issue-lease-content .select-input-box .select-input": Object {
          "background": "#F9F9F9",
          "border": "1px solid #F0F0F0",
          "borderRadius": "30px",
          "marginTop": "18px",
        },
        "& .issue-lease-content .select-input-box .select-input .MuiListItemIcon-root": Object {
          "minWidth": "40px",
        },
        "& .issue-lease-content .tenant-info": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "margin": "18px 0",
        },
        "& .issue-lease-content .tenant-info a": Object {
          "color": "#FC8434",
          "fontWeight": "600",
        },
        "& .issue-lease-content .tenant-info p": Object {
          "color": "black",
          "fontWeight": "600",
        },
        "& .issue-lease-content .tenant-info span": Object {
          "color": "#9C9C9C",
        },
        "& .next-button": Object {
          "alignItems": "center",
          "background": "white",
          "boxShadow": "none",
          "display": "flex",
          "justifyContent": "center",
          "marginTop": "20px",
          "padding": "10px 0",
        },
        "& .next-button button": Object {
          "background": "#2b6fec",
          "borderRadius": "25px",
          "color": "white",
          "fontWeight": 600,
          "minWidth": "300px",
          "padding": "12px 50px",
        },
        "& .page-container": Object {
          "height": "88vh",
          "overflowY": "auto",
        },
        "& .right-image": Object {
          "padding": "23px 60px",
        },
        "& .success-page": Object {
          "& p": Object {
            "textAlign": "center",
          },
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "gap": "20px",
          "height": "calc(100% - 100px)",
          "justifyContent": "center",
        },
        "& .top-bar": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "borderBottom": "2px solid #F9F9F9",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "padding": "10px 20px",
          "position": "sticky",
          "top": "0",
        },
        "& .top-bar .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        },
        "& .top-bar .right-icon img": Object {
          "marginLeft": "15px",
        },
        "& :-ms-input-placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& ::-ms-input-placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& ::placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
        "height": "100vh",
        "overflowY": "hidden",
      },
      "myExpenseList": Object {
        "& .right-image": Object {
          "padding": "25px 60px",
        },
        "& .tenant-list-box": Object {
          "height": "88vh",
          "marginTop": "15px",
          "overflow": "hidden",
          "position": "relative",
        },
        "& .tenant-list-box .tenant": Object {
          "borderRadius": "8px",
          "boxShadow": "none",
          "padding": "20px",
        },
        "& .tenant-list-box .tenant .expense-details p": Object {
          "fontWeight": 600,
        },
        "& .tenant-list-box .tenant .header": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
        },
        "& .tenant-list-box .tenant .info p": Object {
          "color": "black",
        },
        "& .tenant-list-box .tenant .info span": Object {
          "color": "gray",
          "fontSize": "14px",
        },
        "& .tenant-list-box .tenant-list": Object {
          "height": "calc(100% - 80px)",
          "overflowX": "hidden",
        },
        "& .tenant-list-box .upload-button": Object {
          "alignItems": "center",
          "bottom": 0,
          "display": "flex",
          "justifyContent": "center",
          "left": 0,
          "padding": "10px 0",
          "position": "sticky",
          "right": 0,
        },
        "& .tenant-list-box .upload-button .MuiGrid-root": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        },
        "& .tenant-list-box .upload-button button": Object {
          "background": "#2b6fec",
          "borderRadius": "25px",
          "color": "white",
          "fontWeight": 600,
          "padding": "12px 50px",
        },
        "& .top-bar": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "borderBottom": "2px solid #e2e2ef",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "padding": "10px 20px",
          "zIndex": "9999",
        },
        "& .top-bar .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "10px",
          "justifyContent": "center",
        },
        "& .top-bar .left-icon span": Object {
          "lineHeight": "18px",
        },
        "& .top-bar .right-icon": Object {
          "alignItems": "center",
          "display": "flex",
        },
        "& .top-bar .right-icon img": Object {
          "cursor": "pointer",
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
        "height": "100vh",
        "overflowY": "hidden",
      },
    }
  }
  id="AddEditExpense"
  navigation={
    Object {
      "getParam": [MockFunction] {
        "calls": Array [
          Array [
            "id",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "goBack": [MockFunction],
      "navigate": [MockFunction],
    }
  }
  t={[Function]}
>
  <Loader
    loading={false}
  >
    <WithStyles(ForwardRef(Backdrop))
      onClick={[Function]}
      open={false}
      style={
        Object {
          "color": "#ffffff",
          "zIndex": 9999,
        }
      }
    >
      <ForwardRef(Backdrop)
        classes={
          Object {
            "invisible": "MuiBackdrop-invisible",
            "root": "MuiBackdrop-root",
          }
        }
        onClick={[Function]}
        open={false}
        style={
          Object {
            "color": "#ffffff",
            "zIndex": 9999,
          }
        }
      >
        <ForwardRef(Fade)
          in={false}
          onClick={[Function]}
          style={
            Object {
              "color": "#ffffff",
              "zIndex": 9999,
            }
          }
        >
          <Transition
            appear={true}
            enter={true}
            exit={true}
            in={false}
            mountOnEnter={false}
            onClick={[Function]}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={
              Object {
                "enter": 225,
                "exit": 195,
              }
            }
            unmountOnExit={false}
          >
            <div
              aria-hidden={true}
              className="MuiBackdrop-root"
              onClick={[Function]}
              style={
                Object {
                  "color": "#ffffff",
                  "opacity": 0,
                  "visibility": "hidden",
                  "zIndex": 9999,
                }
              }
            >
              <WithStyles(ForwardRef(CircularProgress))
                style={
                  Object {
                    "color": "#2c6fed",
                  }
                }
              >
                <ForwardRef(CircularProgress)
                  classes={
                    Object {
                      "circle": "MuiCircularProgress-circle",
                      "circleDeterminate": "MuiCircularProgress-circleDeterminate",
                      "circleDisableShrink": "MuiCircularProgress-circleDisableShrink",
                      "circleIndeterminate": "MuiCircularProgress-circleIndeterminate",
                      "circleStatic": "MuiCircularProgress-circleStatic",
                      "colorPrimary": "MuiCircularProgress-colorPrimary",
                      "colorSecondary": "MuiCircularProgress-colorSecondary",
                      "determinate": "MuiCircularProgress-determinate",
                      "indeterminate": "MuiCircularProgress-indeterminate",
                      "root": "MuiCircularProgress-root",
                      "static": "MuiCircularProgress-static",
                      "svg": "MuiCircularProgress-svg",
                    }
                  }
                  style={
                    Object {
                      "color": "#2c6fed",
                    }
                  }
                >
                  <div
                    className="MuiCircularProgress-root MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
                    role="progressbar"
                    style={
                      Object {
                        "color": "#2c6fed",
                        "height": 40,
                        "width": 40,
                      }
                    }
                  >
                    <svg
                      className="MuiCircularProgress-svg"
                      viewBox="22 22 44 44"
                    >
                      <circle
                        className="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                        cx={44}
                        cy={44}
                        fill="none"
                        r={20.2}
                        strokeWidth={3.6}
                        style={Object {}}
                      />
                    </svg>
                  </div>
                </ForwardRef(CircularProgress)>
              </WithStyles(ForwardRef(CircularProgress))>
            </div>
          </Transition>
        </ForwardRef(Fade)>
      </ForwardRef(Backdrop)>
    </WithStyles(ForwardRef(Backdrop))>
  </Loader>
  <Styled(MuiBox)
    className={
      Object {
        "& .error": Object {
          "color": "red",
          "fontSize": "14px",
          "marginLeft": "20px",
        },
        "& .form.issue-lease-content .next-button": Object {
          "bottom": 0,
          "position": "sticky",
        },
        "& .issue-lease-content .MuiSelect-root": Object {
          "background": "#F9F9F9",
          "borderRadius": "30px",
        },
        "& .issue-lease-content .select-box": Object {
          "position": "relative",
        },
        "& .issue-lease-content .select-box .select-input": Object {
          "paddingLeft": "50px",
          "width": "100%",
        },
        "& .issue-lease-content .select-box .select-input.input": Object {
          "fontSize": "16px",
          "outline": "none",
          "padding": "18px 10px 18px 60px !important",
        },
        "& .issue-lease-content .select-box img": Object {
          "left": "15px",
          "position": "absolute",
          "top": "38px",
        },
        "& .issue-lease-content .select-input-box .input.select-input": Object {
          "padding": "12px 15px",
        },
        "& .issue-lease-content .select-input-box .input.select-input .MuiInputAdornment-positionStart": Object {
          "marginRight": "25px",
        },
        "& .issue-lease-content .select-input-box .input.select-input:after": Object {
          "border": 0,
        },
        "& .issue-lease-content .select-input-box .input.select-input:before": Object {
          "border": 0,
        },
        "& .issue-lease-content .select-input-box .select-input": Object {
          "background": "#F9F9F9",
          "border": "1px solid #F0F0F0",
          "borderRadius": "30px",
          "marginTop": "18px",
        },
        "& .issue-lease-content .select-input-box .select-input .MuiListItemIcon-root": Object {
          "minWidth": "40px",
        },
        "& .issue-lease-content .tenant-info": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "margin": "18px 0",
        },
        "& .issue-lease-content .tenant-info a": Object {
          "color": "#FC8434",
          "fontWeight": "600",
        },
        "& .issue-lease-content .tenant-info p": Object {
          "color": "black",
          "fontWeight": "600",
        },
        "& .issue-lease-content .tenant-info span": Object {
          "color": "#9C9C9C",
        },
        "& .next-button": Object {
          "alignItems": "center",
          "background": "white",
          "boxShadow": "none",
          "display": "flex",
          "justifyContent": "center",
          "marginTop": "20px",
          "padding": "10px 0",
        },
        "& .next-button button": Object {
          "background": "#2b6fec",
          "borderRadius": "25px",
          "color": "white",
          "fontWeight": 600,
          "minWidth": "300px",
          "padding": "12px 50px",
        },
        "& .page-container": Object {
          "height": "88vh",
          "overflowY": "auto",
        },
        "& .right-image": Object {
          "padding": "23px 60px",
        },
        "& .success-page": Object {
          "& p": Object {
            "textAlign": "center",
          },
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "gap": "20px",
          "height": "calc(100% - 100px)",
          "justifyContent": "center",
        },
        "& .top-bar": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "borderBottom": "2px solid #F9F9F9",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "padding": "10px 20px",
          "position": "sticky",
          "top": "0",
        },
        "& .top-bar .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        },
        "& .top-bar .right-icon img": Object {
          "marginLeft": "15px",
        },
        "& :-ms-input-placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& ::-ms-input-placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& ::placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
        "height": "100vh",
        "overflowY": "hidden",
      }
    }
  >
    <div
      className="MuiBox-root MuiBox-root-1 height overflowY & .top-bar & .top-bar .left-icon & .top-bar .right-icon img & .right-image & a & .page-container & .issue-lease-content .select-input-box .select-input & .issue-lease-content .MuiSelect-root & .issue-lease-content .select-box & .issue-lease-content .select-box img & .issue-lease-content .select-box .select-input & .issue-lease-content .select-box .select-input.input & .issue-lease-content .select-input-box .select-input .MuiListItemIcon-root & .issue-lease-content .select-input-box .input.select-input & .issue-lease-content .select-input-box .input.select-input .MuiInputAdornment-positionStart & .issue-lease-content .select-input-box .input.select-input:before & .issue-lease-content .select-input-box .input.select-input:after & .issue-lease-content .tenant-info & .issue-lease-content .tenant-info a & .issue-lease-content .tenant-info span & .issue-lease-content .tenant-info p & .success-page & .next-button & .next-button button & .error & ::placeholder & :-ms-input-placeholder & ::-ms-input-placeholder & .form.issue-lease-content .next-button"
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
      >
        <ForwardRef(Grid)
          classes={
            Object {
              "align-content-xs-center": "MuiGrid-align-content-xs-center",
              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
              "align-items-xs-center": "MuiGrid-align-items-xs-center",
              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
              "container": "MuiGrid-container",
              "direction-xs-column": "MuiGrid-direction-xs-column",
              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
              "grid-lg-1": "MuiGrid-grid-lg-1",
              "grid-lg-10": "MuiGrid-grid-lg-10",
              "grid-lg-11": "MuiGrid-grid-lg-11",
              "grid-lg-12": "MuiGrid-grid-lg-12",
              "grid-lg-2": "MuiGrid-grid-lg-2",
              "grid-lg-3": "MuiGrid-grid-lg-3",
              "grid-lg-4": "MuiGrid-grid-lg-4",
              "grid-lg-5": "MuiGrid-grid-lg-5",
              "grid-lg-6": "MuiGrid-grid-lg-6",
              "grid-lg-7": "MuiGrid-grid-lg-7",
              "grid-lg-8": "MuiGrid-grid-lg-8",
              "grid-lg-9": "MuiGrid-grid-lg-9",
              "grid-lg-auto": "MuiGrid-grid-lg-auto",
              "grid-lg-true": "MuiGrid-grid-lg-true",
              "grid-md-1": "MuiGrid-grid-md-1",
              "grid-md-10": "MuiGrid-grid-md-10",
              "grid-md-11": "MuiGrid-grid-md-11",
              "grid-md-12": "MuiGrid-grid-md-12",
              "grid-md-2": "MuiGrid-grid-md-2",
              "grid-md-3": "MuiGrid-grid-md-3",
              "grid-md-4": "MuiGrid-grid-md-4",
              "grid-md-5": "MuiGrid-grid-md-5",
              "grid-md-6": "MuiGrid-grid-md-6",
              "grid-md-7": "MuiGrid-grid-md-7",
              "grid-md-8": "MuiGrid-grid-md-8",
              "grid-md-9": "MuiGrid-grid-md-9",
              "grid-md-auto": "MuiGrid-grid-md-auto",
              "grid-md-true": "MuiGrid-grid-md-true",
              "grid-sm-1": "MuiGrid-grid-sm-1",
              "grid-sm-10": "MuiGrid-grid-sm-10",
              "grid-sm-11": "MuiGrid-grid-sm-11",
              "grid-sm-12": "MuiGrid-grid-sm-12",
              "grid-sm-2": "MuiGrid-grid-sm-2",
              "grid-sm-3": "MuiGrid-grid-sm-3",
              "grid-sm-4": "MuiGrid-grid-sm-4",
              "grid-sm-5": "MuiGrid-grid-sm-5",
              "grid-sm-6": "MuiGrid-grid-sm-6",
              "grid-sm-7": "MuiGrid-grid-sm-7",
              "grid-sm-8": "MuiGrid-grid-sm-8",
              "grid-sm-9": "MuiGrid-grid-sm-9",
              "grid-sm-auto": "MuiGrid-grid-sm-auto",
              "grid-sm-true": "MuiGrid-grid-sm-true",
              "grid-xl-1": "MuiGrid-grid-xl-1",
              "grid-xl-10": "MuiGrid-grid-xl-10",
              "grid-xl-11": "MuiGrid-grid-xl-11",
              "grid-xl-12": "MuiGrid-grid-xl-12",
              "grid-xl-2": "MuiGrid-grid-xl-2",
              "grid-xl-3": "MuiGrid-grid-xl-3",
              "grid-xl-4": "MuiGrid-grid-xl-4",
              "grid-xl-5": "MuiGrid-grid-xl-5",
              "grid-xl-6": "MuiGrid-grid-xl-6",
              "grid-xl-7": "MuiGrid-grid-xl-7",
              "grid-xl-8": "MuiGrid-grid-xl-8",
              "grid-xl-9": "MuiGrid-grid-xl-9",
              "grid-xl-auto": "MuiGrid-grid-xl-auto",
              "grid-xl-true": "MuiGrid-grid-xl-true",
              "grid-xs-1": "MuiGrid-grid-xs-1",
              "grid-xs-10": "MuiGrid-grid-xs-10",
              "grid-xs-11": "MuiGrid-grid-xs-11",
              "grid-xs-12": "MuiGrid-grid-xs-12",
              "grid-xs-2": "MuiGrid-grid-xs-2",
              "grid-xs-3": "MuiGrid-grid-xs-3",
              "grid-xs-4": "MuiGrid-grid-xs-4",
              "grid-xs-5": "MuiGrid-grid-xs-5",
              "grid-xs-6": "MuiGrid-grid-xs-6",
              "grid-xs-7": "MuiGrid-grid-xs-7",
              "grid-xs-8": "MuiGrid-grid-xs-8",
              "grid-xs-9": "MuiGrid-grid-xs-9",
              "grid-xs-auto": "MuiGrid-grid-xs-auto",
              "grid-xs-true": "MuiGrid-grid-xs-true",
              "item": "MuiGrid-item",
              "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
              "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
              "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
              "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
              "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
              "root": "MuiGrid-root",
              "spacing-xs-1": "MuiGrid-spacing-xs-1",
              "spacing-xs-10": "MuiGrid-spacing-xs-10",
              "spacing-xs-2": "MuiGrid-spacing-xs-2",
              "spacing-xs-3": "MuiGrid-spacing-xs-3",
              "spacing-xs-4": "MuiGrid-spacing-xs-4",
              "spacing-xs-5": "MuiGrid-spacing-xs-5",
              "spacing-xs-6": "MuiGrid-spacing-xs-6",
              "spacing-xs-7": "MuiGrid-spacing-xs-7",
              "spacing-xs-8": "MuiGrid-spacing-xs-8",
              "spacing-xs-9": "MuiGrid-spacing-xs-9",
              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
              "zeroMinWidth": "MuiGrid-zeroMinWidth",
            }
          }
          container={true}
        >
          <div
            className="MuiGrid-root MuiGrid-container"
          >
            <WithStyles(ForwardRef(Grid))
              item={true}
              md={7}
              xs={12}
            >
              <ForwardRef(Grid)
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={7}
                xs={12}
              >
                <div
                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-7"
                >
                  <Styled(MuiBox)>
                    <div
                      className="MuiBox-root MuiBox-root-2"
                    >
                      <Styled(MuiBox)
                        className="top-bar"
                        display={
                          Object {
                            "md": "flex",
                            "xs": "flex",
                          }
                        }
                      >
                        <div
                          className="MuiBox-root MuiBox-root-3 top-bar"
                        >
                          <Styled(MuiBox)
                            className="left-icon"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-4 left-icon"
                            >
                              <WithStyles(ForwardRef(IconButton))
                                onClick={[Function]}
                              >
                                <ForwardRef(IconButton)
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  onClick={[Function]}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    centerRipple={true}
                                    className="MuiIconButton-root"
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <button
                                        className="MuiButtonBase-root MuiIconButton-root"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(KeyboardBackspaceIcon)>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(KeyboardBackspaceIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                              <span />
                            </div>
                          </Styled(MuiBox)>
                        </div>
                      </Styled(MuiBox)>
                      <WithStyles(ForwardRef(Container))
                        className="page-container"
                      >
                        <ForwardRef(Container)
                          className="page-container"
                          classes={
                            Object {
                              "disableGutters": "MuiContainer-disableGutters",
                              "fixed": "MuiContainer-fixed",
                              "maxWidthLg": "MuiContainer-maxWidthLg",
                              "maxWidthMd": "MuiContainer-maxWidthMd",
                              "maxWidthSm": "MuiContainer-maxWidthSm",
                              "maxWidthXl": "MuiContainer-maxWidthXl",
                              "maxWidthXs": "MuiContainer-maxWidthXs",
                              "root": "MuiContainer-root",
                            }
                          }
                        >
                          <div
                            className="MuiContainer-root page-container MuiContainer-maxWidthLg"
                          >
                            <Styled(MuiBox)
                              className="issue-lease-content form"
                            >
                              <div
                                className="MuiBox-root MuiBox-root-5 issue-lease-content form"
                              >
                                <Formik
                                  enableReinitialize={true}
                                  initialValues={
                                    Object {
                                      "building": "",
                                      "category": "",
                                      "expenseAmount": "",
                                      "expenseDate": "",
                                      "issueTitle": "",
                                      "resolvedBy": "",
                                      "summary": "",
                                      "unit": "",
                                    }
                                  }
                                  onSubmit={[Function]}
                                  validationSchema={
                                    ObjectSchema {
                                      "_blacklist": RefSet {
                                        "list": Set {},
                                        "refs": Map {},
                                      },
                                      "_conditions": Array [],
                                      "_defaultDefault": [Function],
                                      "_deps": Array [],
                                      "_excludedEdges": Array [],
                                      "_exclusive": Object {},
                                      "_mutate": undefined,
                                      "_nodes": Array [
                                        "summary",
                                        "resolvedBy",
                                        "unit",
                                        "building",
                                        "category",
                                        "issueTitle",
                                        "expenseAmount",
                                        "expenseDate",
                                      ],
                                      "_options": Object {
                                        "abortEarly": true,
                                        "recursive": true,
                                      },
                                      "_type": "object",
                                      "_typeError": [Function],
                                      "_whitelist": RefSet {
                                        "list": Set {},
                                        "refs": Map {},
                                      },
                                      "fields": Object {
                                        "building": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "category": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "expenseAmount": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "expenseDate": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "issueTitle": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "resolvedBy": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "summary": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "unit": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                      },
                                      "tests": Array [],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                      "type": "object",
                                    }
                                  }
                                >
                                  <Form
                                    onSubmit={[Function]}
                                    translate="true"
                                  >
                                    <form
                                      action="#"
                                      onReset={[Function]}
                                      onSubmit={[Function]}
                                      translate="true"
                                    >
                                      <Styled(MuiBox)
                                        className="select-input-box"
                                      >
                                        <div
                                          className="MuiBox-root MuiBox-root-6 select-input-box"
                                        >
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="expenseDate"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  placeholder=""
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/ExpenseTracking/assets/calender.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="expenseDate"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    placeholder=""
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/ExpenseTracking/assets/calender.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="expenseDate"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      placeholder=""
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/ExpenseTracking/assets/calender.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="expenseDate"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        placeholder=""
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/ExpenseTracking/assets/calender.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/ExpenseTracking/assets/calender.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="expenseDate"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="expenseAmount"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/ExpenseTracking/assets/expense-amount.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="expenseAmount"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/ExpenseTracking/assets/expense-amount.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="expenseAmount"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/ExpenseTracking/assets/expense-amount.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="expenseAmount"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        placeholder=""
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/ExpenseTracking/assets/expense-amount.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/ExpenseTracking/assets/expense-amount.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="expenseAmount"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="issueTitle"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/ExpenseTracking/assets/issue.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="issueTitle"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/ExpenseTracking/assets/issue.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="issueTitle"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/ExpenseTracking/assets/issue.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="issueTitle"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        placeholder=""
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/ExpenseTracking/assets/issue.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/ExpenseTracking/assets/issue.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="issueTitle"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <Styled(MuiBox)
                                                  className="select-box"
                                                >
                                                  <div
                                                    className="MuiBox-root MuiBox-root-7 select-box"
                                                  >
                                                    <WithStyles(ForwardRef(Select))
                                                      className="select-input"
                                                      displayEmpty={true}
                                                      input={<WithStyles(ForwardRef(OutlinedInput)) />}
                                                      name="category"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      value=""
                                                      variant="filled"
                                                    >
                                                      <ForwardRef(Select)
                                                        className="select-input"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          }
                                                        }
                                                        displayEmpty={true}
                                                        input={<WithStyles(ForwardRef(OutlinedInput)) />}
                                                        name="category"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        value=""
                                                        variant="filled"
                                                      >
                                                        <WithStyles(ForwardRef(OutlinedInput))
                                                          className="select-input"
                                                          inputComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "IconComponent": [Function],
                                                                "MenuProps": [Function],
                                                                "SelectDisplayProps": [Function],
                                                                "aria-label": [Function],
                                                                "autoFocus": [Function],
                                                                "autoWidth": [Function],
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "defaultValue": [Function],
                                                                "disabled": [Function],
                                                                "displayEmpty": [Function],
                                                                "inputRef": [Function],
                                                                "labelId": [Function],
                                                                "multiple": [Function],
                                                                "name": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onClose": [Function],
                                                                "onFocus": [Function],
                                                                "onOpen": [Function],
                                                                "open": [Function],
                                                                "readOnly": [Function],
                                                                "renderValue": [Function],
                                                                "tabIndex": [Function],
                                                                "type": [Function],
                                                                "value": [Function],
                                                                "variant": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          inputProps={
                                                            Object {
                                                              "IconComponent": Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              },
                                                              "MenuProps": undefined,
                                                              "SelectDisplayProps": Object {
                                                                "id": undefined,
                                                              },
                                                              "autoWidth": false,
                                                              "children": Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  disabled={true}
                                                                  value=""
                                                                >
                                                                  
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                Array [],
                                                              ],
                                                              "classes": Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              },
                                                              "displayEmpty": true,
                                                              "labelId": undefined,
                                                              "multiple": false,
                                                              "onClose": undefined,
                                                              "onOpen": undefined,
                                                              "open": undefined,
                                                              "renderValue": undefined,
                                                              "type": undefined,
                                                              "variant": "filled",
                                                            }
                                                          }
                                                          name="category"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          value=""
                                                        >
                                                          <ForwardRef(OutlinedInput)
                                                            className="select-input"
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "input": "MuiOutlinedInput-input",
                                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                                "multiline": "MuiOutlinedInput-multiline",
                                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                "root": "MuiOutlinedInput-root",
                                                              }
                                                            }
                                                            inputComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": [Function],
                                                                  "SelectDisplayProps": [Function],
                                                                  "aria-label": [Function],
                                                                  "autoFocus": [Function],
                                                                  "autoWidth": [Function],
                                                                  "children": [Function],
                                                                  "className": [Function],
                                                                  "classes": [Function],
                                                                  "defaultValue": [Function],
                                                                  "disabled": [Function],
                                                                  "displayEmpty": [Function],
                                                                  "inputRef": [Function],
                                                                  "labelId": [Function],
                                                                  "multiple": [Function],
                                                                  "name": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onClose": [Function],
                                                                  "onFocus": [Function],
                                                                  "onOpen": [Function],
                                                                  "open": [Function],
                                                                  "readOnly": [Function],
                                                                  "renderValue": [Function],
                                                                  "tabIndex": [Function],
                                                                  "type": [Function],
                                                                  "value": [Function],
                                                                  "variant": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": Object {
                                                                  "$$typeof": Symbol(react.memo),
                                                                  "compare": null,
                                                                  "type": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "render": [Function],
                                                                  },
                                                                },
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": undefined,
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    disabled={true}
                                                                    value=""
                                                                  >
                                                                    
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  Array [],
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "filled": "MuiSelect-filled",
                                                                  "icon": "MuiSelect-icon",
                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                  "nativeInput": "MuiSelect-nativeInput",
                                                                  "outlined": "MuiSelect-outlined",
                                                                  "root": "MuiSelect-root",
                                                                  "select": "MuiSelect-select",
                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                },
                                                                "displayEmpty": true,
                                                                "labelId": undefined,
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "filled",
                                                              }
                                                            }
                                                            name="category"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <WithStyles(ForwardRef(InputBase))
                                                              className="select-input"
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": null,
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={false}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": undefined,
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      disabled={true}
                                                                      value=""
                                                                    >
                                                                      
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    Array [],
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": true,
                                                                  "labelId": undefined,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "filled",
                                                                }
                                                              }
                                                              multiline={false}
                                                              name="category"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              renderSuffix={[Function]}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <ForwardRef(InputBase)
                                                                className="select-input"
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "formControl": "MuiInputBase-formControl",
                                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={false}
                                                                inputComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "propTypes": Object {
                                                                      "IconComponent": [Function],
                                                                      "MenuProps": [Function],
                                                                      "SelectDisplayProps": [Function],
                                                                      "aria-label": [Function],
                                                                      "autoFocus": [Function],
                                                                      "autoWidth": [Function],
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "classes": [Function],
                                                                      "defaultValue": [Function],
                                                                      "disabled": [Function],
                                                                      "displayEmpty": [Function],
                                                                      "inputRef": [Function],
                                                                      "labelId": [Function],
                                                                      "multiple": [Function],
                                                                      "name": [Function],
                                                                      "onBlur": [Function],
                                                                      "onChange": [Function],
                                                                      "onClose": [Function],
                                                                      "onFocus": [Function],
                                                                      "onOpen": [Function],
                                                                      "open": [Function],
                                                                      "readOnly": [Function],
                                                                      "renderValue": [Function],
                                                                      "tabIndex": [Function],
                                                                      "type": [Function],
                                                                      "value": [Function],
                                                                      "variant": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                inputProps={
                                                                  Object {
                                                                    "IconComponent": Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    },
                                                                    "MenuProps": undefined,
                                                                    "SelectDisplayProps": Object {
                                                                      "id": undefined,
                                                                    },
                                                                    "autoWidth": false,
                                                                    "children": Array [
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        disabled={true}
                                                                        value=""
                                                                      >
                                                                        
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      Array [],
                                                                    ],
                                                                    "classes": Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    },
                                                                    "displayEmpty": true,
                                                                    "labelId": undefined,
                                                                    "multiple": false,
                                                                    "onClose": undefined,
                                                                    "onOpen": undefined,
                                                                    "open": undefined,
                                                                    "renderValue": undefined,
                                                                    "type": undefined,
                                                                    "variant": "filled",
                                                                  }
                                                                }
                                                                multiline={false}
                                                                name="category"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="MuiInputBase-root MuiOutlinedInput-root select-input MuiInputBase-formControl"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(SelectInput)
                                                                    IconComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.memo),
                                                                        "compare": null,
                                                                        "type": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "render": [Function],
                                                                        },
                                                                      }
                                                                    }
                                                                    SelectDisplayProps={
                                                                      Object {
                                                                        "id": undefined,
                                                                      }
                                                                    }
                                                                    aria-invalid={false}
                                                                    autoWidth={false}
                                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "filled": "MuiSelect-filled",
                                                                        "icon": "MuiSelect-icon",
                                                                        "iconFilled": "MuiSelect-iconFilled",
                                                                        "iconOpen": "MuiSelect-iconOpen",
                                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                                        "nativeInput": "MuiSelect-nativeInput",
                                                                        "outlined": "MuiSelect-outlined",
                                                                        "root": "MuiSelect-root",
                                                                        "select": "MuiSelect-select",
                                                                        "selectMenu": "MuiSelect-selectMenu",
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    displayEmpty={true}
                                                                    inputRef={[Function]}
                                                                    multiple={false}
                                                                    name="category"
                                                                    onAnimationStart={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    value=""
                                                                    variant="filled"
                                                                  >
                                                                    <div
                                                                      aria-haspopup="listbox"
                                                                      aria-labelledby="mui-component-select-category"
                                                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                      id="mui-component-select-category"
                                                                      onBlur={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      <span
                                                                        dangerouslySetInnerHTML={
                                                                          Object {
                                                                            "__html": "&#8203;",
                                                                          }
                                                                        }
                                                                      />
                                                                    </div>
                                                                    <input
                                                                      aria-hidden={true}
                                                                      className="MuiSelect-nativeInput"
                                                                      name="category"
                                                                      onAnimationStart={[Function]}
                                                                      onChange={[Function]}
                                                                      required={false}
                                                                      tabIndex={-1}
                                                                      value=""
                                                                    />
                                                                    <ForwardRef(ArrowDropDownIcon)
                                                                      className="MuiSelect-icon MuiSelect-iconFilled"
                                                                    >
                                                                      <WithStyles(ForwardRef(SvgIcon))
                                                                        className="MuiSelect-icon MuiSelect-iconFilled"
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          className="MuiSelect-icon MuiSelect-iconFilled"
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconFilled"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M7 10l5 5 5-5z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(ArrowDropDownIcon)>
                                                                    <WithStyles(ForwardRef(Menu))
                                                                      MenuListProps={
                                                                        Object {
                                                                          "aria-labelledby": undefined,
                                                                          "disableListWrap": true,
                                                                          "role": "listbox",
                                                                        }
                                                                      }
                                                                      PaperProps={
                                                                        Object {
                                                                          "style": Object {
                                                                            "minWidth": undefined,
                                                                          },
                                                                        }
                                                                      }
                                                                      anchorEl={
                                                                        <div
                                                                          aria-haspopup="listbox"
                                                                          aria-labelledby="mui-component-select-category"
                                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                          id="mui-component-select-category"
                                                                          role="button"
                                                                          tabindex="0"
                                                                        >
                                                                          <span>
                                                                            ​
                                                                          </span>
                                                                        </div>
                                                                      }
                                                                      id="menu-category"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    >
                                                                      <ForwardRef(Menu)
                                                                        MenuListProps={
                                                                          Object {
                                                                            "aria-labelledby": undefined,
                                                                            "disableListWrap": true,
                                                                            "role": "listbox",
                                                                          }
                                                                        }
                                                                        PaperProps={
                                                                          Object {
                                                                            "style": Object {
                                                                              "minWidth": undefined,
                                                                            },
                                                                          }
                                                                        }
                                                                        anchorEl={
                                                                          <div
                                                                            aria-haspopup="listbox"
                                                                            aria-labelledby="mui-component-select-category"
                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                            id="mui-component-select-category"
                                                                            role="button"
                                                                            tabindex="0"
                                                                          >
                                                                            <span>
                                                                              ​
                                                                            </span>
                                                                          </div>
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "list": "MuiMenu-list",
                                                                            "paper": "MuiMenu-paper",
                                                                          }
                                                                        }
                                                                        id="menu-category"
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                      >
                                                                        <WithStyles(ForwardRef(Popover))
                                                                          PaperProps={
                                                                            Object {
                                                                              "classes": Object {
                                                                                "root": "MuiMenu-paper",
                                                                              },
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          TransitionProps={
                                                                            Object {
                                                                              "onEntering": [Function],
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              aria-labelledby="mui-component-select-category"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                              id="mui-component-select-category"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              <span>
                                                                                ​
                                                                              </span>
                                                                            </div>
                                                                          }
                                                                          anchorOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          getContentAnchorEl={[Function]}
                                                                          id="menu-category"
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          transformOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          transitionDuration="auto"
                                                                        >
                                                                          <ForwardRef(Popover)
                                                                            PaperProps={
                                                                              Object {
                                                                                "classes": Object {
                                                                                  "root": "MuiMenu-paper",
                                                                                },
                                                                                "style": Object {
                                                                                  "minWidth": undefined,
                                                                                },
                                                                              }
                                                                            }
                                                                            TransitionProps={
                                                                              Object {
                                                                                "onEntering": [Function],
                                                                              }
                                                                            }
                                                                            anchorEl={
                                                                              <div
                                                                                aria-haspopup="listbox"
                                                                                aria-labelledby="mui-component-select-category"
                                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                                id="mui-component-select-category"
                                                                                role="button"
                                                                                tabindex="0"
                                                                              >
                                                                                <span>
                                                                                  ​
                                                                                </span>
                                                                              </div>
                                                                            }
                                                                            anchorOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "paper": "MuiPopover-paper",
                                                                                "root": "MuiPopover-root",
                                                                              }
                                                                            }
                                                                            getContentAnchorEl={[Function]}
                                                                            id="menu-category"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                            transformOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            transitionDuration="auto"
                                                                          >
                                                                            <ForwardRef(Modal)
                                                                              BackdropProps={
                                                                                Object {
                                                                                  "invisible": true,
                                                                                }
                                                                              }
                                                                              className="MuiPopover-root"
                                                                              container={<body />}
                                                                              id="menu-category"
                                                                              onClose={[Function]}
                                                                              open={false}
                                                                            />
                                                                          </ForwardRef(Popover)>
                                                                        </WithStyles(ForwardRef(Popover))>
                                                                      </ForwardRef(Menu)>
                                                                    </WithStyles(ForwardRef(Menu))>
                                                                  </ForwardRef(SelectInput)>
                                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                                    className="MuiOutlinedInput-notchedOutline"
                                                                    labelWidth={0}
                                                                    notched={false}
                                                                  >
                                                                    <ForwardRef(NotchedOutline)
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      classes={
                                                                        Object {
                                                                          "legend": "PrivateNotchedOutline-legend-9",
                                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-10",
                                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-11",
                                                                          "root": "PrivateNotchedOutline-root-8",
                                                                        }
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={false}
                                                                    >
                                                                      <fieldset
                                                                        aria-hidden={true}
                                                                        className="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                                                        style={
                                                                          Object {
                                                                            "paddingLeft": 8,
                                                                          }
                                                                        }
                                                                      >
                                                                        <legend
                                                                          className="PrivateNotchedOutline-legend-9"
                                                                          style={
                                                                            Object {
                                                                              "width": 0.01,
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            dangerouslySetInnerHTML={
                                                                              Object {
                                                                                "__html": "&#8203;",
                                                                              }
                                                                            }
                                                                          />
                                                                        </legend>
                                                                      </fieldset>
                                                                    </ForwardRef(NotchedOutline)>
                                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                                </div>
                                                              </ForwardRef(InputBase)>
                                                            </WithStyles(ForwardRef(InputBase))>
                                                          </ForwardRef(OutlinedInput)>
                                                        </WithStyles(ForwardRef(OutlinedInput))>
                                                      </ForwardRef(Select)>
                                                    </WithStyles(ForwardRef(Select))>
                                                    <img
                                                      alt=""
                                                      src={
                                                        Object {
                                                          "testUri": "../../../packages/blocks/ExpenseTracking/assets/category.png",
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </Styled(MuiBox)>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <Styled(MuiBox)
                                                  className="select-box"
                                                >
                                                  <div
                                                    className="MuiBox-root MuiBox-root-12 select-box"
                                                  >
                                                    <WithStyles(ForwardRef(Select))
                                                      className="select-input"
                                                      displayEmpty={true}
                                                      input={<WithStyles(ForwardRef(OutlinedInput)) />}
                                                      name="building"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      value=""
                                                      variant="filled"
                                                    >
                                                      <ForwardRef(Select)
                                                        className="select-input"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          }
                                                        }
                                                        displayEmpty={true}
                                                        input={<WithStyles(ForwardRef(OutlinedInput)) />}
                                                        name="building"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        value=""
                                                        variant="filled"
                                                      >
                                                        <WithStyles(ForwardRef(OutlinedInput))
                                                          className="select-input"
                                                          inputComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "IconComponent": [Function],
                                                                "MenuProps": [Function],
                                                                "SelectDisplayProps": [Function],
                                                                "aria-label": [Function],
                                                                "autoFocus": [Function],
                                                                "autoWidth": [Function],
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "defaultValue": [Function],
                                                                "disabled": [Function],
                                                                "displayEmpty": [Function],
                                                                "inputRef": [Function],
                                                                "labelId": [Function],
                                                                "multiple": [Function],
                                                                "name": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onClose": [Function],
                                                                "onFocus": [Function],
                                                                "onOpen": [Function],
                                                                "open": [Function],
                                                                "readOnly": [Function],
                                                                "renderValue": [Function],
                                                                "tabIndex": [Function],
                                                                "type": [Function],
                                                                "value": [Function],
                                                                "variant": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          inputProps={
                                                            Object {
                                                              "IconComponent": Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              },
                                                              "MenuProps": undefined,
                                                              "SelectDisplayProps": Object {
                                                                "id": undefined,
                                                              },
                                                              "autoWidth": false,
                                                              "children": Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  disabled={true}
                                                                  value=""
                                                                >
                                                                  
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                Array [],
                                                              ],
                                                              "classes": Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              },
                                                              "displayEmpty": true,
                                                              "labelId": undefined,
                                                              "multiple": false,
                                                              "onClose": undefined,
                                                              "onOpen": undefined,
                                                              "open": undefined,
                                                              "renderValue": undefined,
                                                              "type": undefined,
                                                              "variant": "filled",
                                                            }
                                                          }
                                                          name="building"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          value=""
                                                        >
                                                          <ForwardRef(OutlinedInput)
                                                            className="select-input"
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "input": "MuiOutlinedInput-input",
                                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                                "multiline": "MuiOutlinedInput-multiline",
                                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                "root": "MuiOutlinedInput-root",
                                                              }
                                                            }
                                                            inputComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": [Function],
                                                                  "SelectDisplayProps": [Function],
                                                                  "aria-label": [Function],
                                                                  "autoFocus": [Function],
                                                                  "autoWidth": [Function],
                                                                  "children": [Function],
                                                                  "className": [Function],
                                                                  "classes": [Function],
                                                                  "defaultValue": [Function],
                                                                  "disabled": [Function],
                                                                  "displayEmpty": [Function],
                                                                  "inputRef": [Function],
                                                                  "labelId": [Function],
                                                                  "multiple": [Function],
                                                                  "name": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onClose": [Function],
                                                                  "onFocus": [Function],
                                                                  "onOpen": [Function],
                                                                  "open": [Function],
                                                                  "readOnly": [Function],
                                                                  "renderValue": [Function],
                                                                  "tabIndex": [Function],
                                                                  "type": [Function],
                                                                  "value": [Function],
                                                                  "variant": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": Object {
                                                                  "$$typeof": Symbol(react.memo),
                                                                  "compare": null,
                                                                  "type": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "render": [Function],
                                                                  },
                                                                },
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": undefined,
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    disabled={true}
                                                                    value=""
                                                                  >
                                                                    
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  Array [],
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "filled": "MuiSelect-filled",
                                                                  "icon": "MuiSelect-icon",
                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                  "nativeInput": "MuiSelect-nativeInput",
                                                                  "outlined": "MuiSelect-outlined",
                                                                  "root": "MuiSelect-root",
                                                                  "select": "MuiSelect-select",
                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                },
                                                                "displayEmpty": true,
                                                                "labelId": undefined,
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "filled",
                                                              }
                                                            }
                                                            name="building"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <WithStyles(ForwardRef(InputBase))
                                                              className="select-input"
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": null,
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={false}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": undefined,
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      disabled={true}
                                                                      value=""
                                                                    >
                                                                      
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    Array [],
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": true,
                                                                  "labelId": undefined,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "filled",
                                                                }
                                                              }
                                                              multiline={false}
                                                              name="building"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              renderSuffix={[Function]}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <ForwardRef(InputBase)
                                                                className="select-input"
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "formControl": "MuiInputBase-formControl",
                                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={false}
                                                                inputComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "propTypes": Object {
                                                                      "IconComponent": [Function],
                                                                      "MenuProps": [Function],
                                                                      "SelectDisplayProps": [Function],
                                                                      "aria-label": [Function],
                                                                      "autoFocus": [Function],
                                                                      "autoWidth": [Function],
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "classes": [Function],
                                                                      "defaultValue": [Function],
                                                                      "disabled": [Function],
                                                                      "displayEmpty": [Function],
                                                                      "inputRef": [Function],
                                                                      "labelId": [Function],
                                                                      "multiple": [Function],
                                                                      "name": [Function],
                                                                      "onBlur": [Function],
                                                                      "onChange": [Function],
                                                                      "onClose": [Function],
                                                                      "onFocus": [Function],
                                                                      "onOpen": [Function],
                                                                      "open": [Function],
                                                                      "readOnly": [Function],
                                                                      "renderValue": [Function],
                                                                      "tabIndex": [Function],
                                                                      "type": [Function],
                                                                      "value": [Function],
                                                                      "variant": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                inputProps={
                                                                  Object {
                                                                    "IconComponent": Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    },
                                                                    "MenuProps": undefined,
                                                                    "SelectDisplayProps": Object {
                                                                      "id": undefined,
                                                                    },
                                                                    "autoWidth": false,
                                                                    "children": Array [
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        disabled={true}
                                                                        value=""
                                                                      >
                                                                        
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      Array [],
                                                                    ],
                                                                    "classes": Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    },
                                                                    "displayEmpty": true,
                                                                    "labelId": undefined,
                                                                    "multiple": false,
                                                                    "onClose": undefined,
                                                                    "onOpen": undefined,
                                                                    "open": undefined,
                                                                    "renderValue": undefined,
                                                                    "type": undefined,
                                                                    "variant": "filled",
                                                                  }
                                                                }
                                                                multiline={false}
                                                                name="building"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="MuiInputBase-root MuiOutlinedInput-root select-input MuiInputBase-formControl"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(SelectInput)
                                                                    IconComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.memo),
                                                                        "compare": null,
                                                                        "type": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "render": [Function],
                                                                        },
                                                                      }
                                                                    }
                                                                    SelectDisplayProps={
                                                                      Object {
                                                                        "id": undefined,
                                                                      }
                                                                    }
                                                                    aria-invalid={false}
                                                                    autoWidth={false}
                                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "filled": "MuiSelect-filled",
                                                                        "icon": "MuiSelect-icon",
                                                                        "iconFilled": "MuiSelect-iconFilled",
                                                                        "iconOpen": "MuiSelect-iconOpen",
                                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                                        "nativeInput": "MuiSelect-nativeInput",
                                                                        "outlined": "MuiSelect-outlined",
                                                                        "root": "MuiSelect-root",
                                                                        "select": "MuiSelect-select",
                                                                        "selectMenu": "MuiSelect-selectMenu",
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    displayEmpty={true}
                                                                    inputRef={[Function]}
                                                                    multiple={false}
                                                                    name="building"
                                                                    onAnimationStart={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    value=""
                                                                    variant="filled"
                                                                  >
                                                                    <div
                                                                      aria-haspopup="listbox"
                                                                      aria-labelledby="mui-component-select-building"
                                                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                      id="mui-component-select-building"
                                                                      onBlur={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      <span
                                                                        dangerouslySetInnerHTML={
                                                                          Object {
                                                                            "__html": "&#8203;",
                                                                          }
                                                                        }
                                                                      />
                                                                    </div>
                                                                    <input
                                                                      aria-hidden={true}
                                                                      className="MuiSelect-nativeInput"
                                                                      name="building"
                                                                      onAnimationStart={[Function]}
                                                                      onChange={[Function]}
                                                                      required={false}
                                                                      tabIndex={-1}
                                                                      value=""
                                                                    />
                                                                    <ForwardRef(ArrowDropDownIcon)
                                                                      className="MuiSelect-icon MuiSelect-iconFilled"
                                                                    >
                                                                      <WithStyles(ForwardRef(SvgIcon))
                                                                        className="MuiSelect-icon MuiSelect-iconFilled"
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          className="MuiSelect-icon MuiSelect-iconFilled"
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconFilled"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M7 10l5 5 5-5z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(ArrowDropDownIcon)>
                                                                    <WithStyles(ForwardRef(Menu))
                                                                      MenuListProps={
                                                                        Object {
                                                                          "aria-labelledby": undefined,
                                                                          "disableListWrap": true,
                                                                          "role": "listbox",
                                                                        }
                                                                      }
                                                                      PaperProps={
                                                                        Object {
                                                                          "style": Object {
                                                                            "minWidth": undefined,
                                                                          },
                                                                        }
                                                                      }
                                                                      anchorEl={
                                                                        <div
                                                                          aria-haspopup="listbox"
                                                                          aria-labelledby="mui-component-select-building"
                                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                          id="mui-component-select-building"
                                                                          role="button"
                                                                          tabindex="0"
                                                                        >
                                                                          <span>
                                                                            ​
                                                                          </span>
                                                                        </div>
                                                                      }
                                                                      id="menu-building"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    >
                                                                      <ForwardRef(Menu)
                                                                        MenuListProps={
                                                                          Object {
                                                                            "aria-labelledby": undefined,
                                                                            "disableListWrap": true,
                                                                            "role": "listbox",
                                                                          }
                                                                        }
                                                                        PaperProps={
                                                                          Object {
                                                                            "style": Object {
                                                                              "minWidth": undefined,
                                                                            },
                                                                          }
                                                                        }
                                                                        anchorEl={
                                                                          <div
                                                                            aria-haspopup="listbox"
                                                                            aria-labelledby="mui-component-select-building"
                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                            id="mui-component-select-building"
                                                                            role="button"
                                                                            tabindex="0"
                                                                          >
                                                                            <span>
                                                                              ​
                                                                            </span>
                                                                          </div>
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "list": "MuiMenu-list",
                                                                            "paper": "MuiMenu-paper",
                                                                          }
                                                                        }
                                                                        id="menu-building"
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                      >
                                                                        <WithStyles(ForwardRef(Popover))
                                                                          PaperProps={
                                                                            Object {
                                                                              "classes": Object {
                                                                                "root": "MuiMenu-paper",
                                                                              },
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          TransitionProps={
                                                                            Object {
                                                                              "onEntering": [Function],
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              aria-labelledby="mui-component-select-building"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                              id="mui-component-select-building"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              <span>
                                                                                ​
                                                                              </span>
                                                                            </div>
                                                                          }
                                                                          anchorOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          getContentAnchorEl={[Function]}
                                                                          id="menu-building"
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          transformOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          transitionDuration="auto"
                                                                        >
                                                                          <ForwardRef(Popover)
                                                                            PaperProps={
                                                                              Object {
                                                                                "classes": Object {
                                                                                  "root": "MuiMenu-paper",
                                                                                },
                                                                                "style": Object {
                                                                                  "minWidth": undefined,
                                                                                },
                                                                              }
                                                                            }
                                                                            TransitionProps={
                                                                              Object {
                                                                                "onEntering": [Function],
                                                                              }
                                                                            }
                                                                            anchorEl={
                                                                              <div
                                                                                aria-haspopup="listbox"
                                                                                aria-labelledby="mui-component-select-building"
                                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                                id="mui-component-select-building"
                                                                                role="button"
                                                                                tabindex="0"
                                                                              >
                                                                                <span>
                                                                                  ​
                                                                                </span>
                                                                              </div>
                                                                            }
                                                                            anchorOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "paper": "MuiPopover-paper",
                                                                                "root": "MuiPopover-root",
                                                                              }
                                                                            }
                                                                            getContentAnchorEl={[Function]}
                                                                            id="menu-building"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                            transformOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            transitionDuration="auto"
                                                                          >
                                                                            <ForwardRef(Modal)
                                                                              BackdropProps={
                                                                                Object {
                                                                                  "invisible": true,
                                                                                }
                                                                              }
                                                                              className="MuiPopover-root"
                                                                              container={<body />}
                                                                              id="menu-building"
                                                                              onClose={[Function]}
                                                                              open={false}
                                                                            />
                                                                          </ForwardRef(Popover)>
                                                                        </WithStyles(ForwardRef(Popover))>
                                                                      </ForwardRef(Menu)>
                                                                    </WithStyles(ForwardRef(Menu))>
                                                                  </ForwardRef(SelectInput)>
                                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                                    className="MuiOutlinedInput-notchedOutline"
                                                                    labelWidth={0}
                                                                    notched={false}
                                                                  >
                                                                    <ForwardRef(NotchedOutline)
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      classes={
                                                                        Object {
                                                                          "legend": "PrivateNotchedOutline-legend-9",
                                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-10",
                                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-11",
                                                                          "root": "PrivateNotchedOutline-root-8",
                                                                        }
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={false}
                                                                    >
                                                                      <fieldset
                                                                        aria-hidden={true}
                                                                        className="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                                                        style={
                                                                          Object {
                                                                            "paddingLeft": 8,
                                                                          }
                                                                        }
                                                                      >
                                                                        <legend
                                                                          className="PrivateNotchedOutline-legend-9"
                                                                          style={
                                                                            Object {
                                                                              "width": 0.01,
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            dangerouslySetInnerHTML={
                                                                              Object {
                                                                                "__html": "&#8203;",
                                                                              }
                                                                            }
                                                                          />
                                                                        </legend>
                                                                      </fieldset>
                                                                    </ForwardRef(NotchedOutline)>
                                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                                </div>
                                                              </ForwardRef(InputBase)>
                                                            </WithStyles(ForwardRef(InputBase))>
                                                          </ForwardRef(OutlinedInput)>
                                                        </WithStyles(ForwardRef(OutlinedInput))>
                                                      </ForwardRef(Select)>
                                                    </WithStyles(ForwardRef(Select))>
                                                    <img
                                                      alt=""
                                                      src={
                                                        Object {
                                                          "testUri": "../../../packages/blocks/ExpenseTracking/assets/building.png",
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </Styled(MuiBox)>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <Styled(MuiBox)
                                                  className="select-box"
                                                >
                                                  <div
                                                    className="MuiBox-root MuiBox-root-13 select-box"
                                                  >
                                                    <WithStyles(ForwardRef(Select))
                                                      className="select-input"
                                                      displayEmpty={true}
                                                      input={<WithStyles(ForwardRef(OutlinedInput)) />}
                                                      name="unit"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      value=""
                                                      variant="filled"
                                                    >
                                                      <ForwardRef(Select)
                                                        className="select-input"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          }
                                                        }
                                                        displayEmpty={true}
                                                        input={<WithStyles(ForwardRef(OutlinedInput)) />}
                                                        name="unit"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        value=""
                                                        variant="filled"
                                                      >
                                                        <WithStyles(ForwardRef(OutlinedInput))
                                                          className="select-input"
                                                          inputComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "IconComponent": [Function],
                                                                "MenuProps": [Function],
                                                                "SelectDisplayProps": [Function],
                                                                "aria-label": [Function],
                                                                "autoFocus": [Function],
                                                                "autoWidth": [Function],
                                                                "children": [Function],
                                                                "className": [Function],
                                                                "classes": [Function],
                                                                "defaultValue": [Function],
                                                                "disabled": [Function],
                                                                "displayEmpty": [Function],
                                                                "inputRef": [Function],
                                                                "labelId": [Function],
                                                                "multiple": [Function],
                                                                "name": [Function],
                                                                "onBlur": [Function],
                                                                "onChange": [Function],
                                                                "onClose": [Function],
                                                                "onFocus": [Function],
                                                                "onOpen": [Function],
                                                                "open": [Function],
                                                                "readOnly": [Function],
                                                                "renderValue": [Function],
                                                                "tabIndex": [Function],
                                                                "type": [Function],
                                                                "value": [Function],
                                                                "variant": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          inputProps={
                                                            Object {
                                                              "IconComponent": Object {
                                                                "$$typeof": Symbol(react.memo),
                                                                "compare": null,
                                                                "type": Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "render": [Function],
                                                                },
                                                              },
                                                              "MenuProps": undefined,
                                                              "SelectDisplayProps": Object {
                                                                "id": undefined,
                                                              },
                                                              "autoWidth": false,
                                                              "children": Array [
                                                                <WithStyles(ForwardRef(MenuItem))
                                                                  disabled={true}
                                                                  value=""
                                                                >
                                                                  
                                                                </WithStyles(ForwardRef(MenuItem))>,
                                                                Array [],
                                                              ],
                                                              "classes": Object {
                                                                "disabled": "Mui-disabled",
                                                                "filled": "MuiSelect-filled",
                                                                "icon": "MuiSelect-icon",
                                                                "iconFilled": "MuiSelect-iconFilled",
                                                                "iconOpen": "MuiSelect-iconOpen",
                                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                                "nativeInput": "MuiSelect-nativeInput",
                                                                "outlined": "MuiSelect-outlined",
                                                                "root": "MuiSelect-root",
                                                                "select": "MuiSelect-select",
                                                                "selectMenu": "MuiSelect-selectMenu",
                                                              },
                                                              "displayEmpty": true,
                                                              "labelId": undefined,
                                                              "multiple": false,
                                                              "onClose": undefined,
                                                              "onOpen": undefined,
                                                              "open": undefined,
                                                              "renderValue": undefined,
                                                              "type": undefined,
                                                              "variant": "filled",
                                                            }
                                                          }
                                                          name="unit"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          value=""
                                                        >
                                                          <ForwardRef(OutlinedInput)
                                                            className="select-input"
                                                            classes={
                                                              Object {
                                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "error": "Mui-error",
                                                                "focused": "Mui-focused",
                                                                "input": "MuiOutlinedInput-input",
                                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                                "multiline": "MuiOutlinedInput-multiline",
                                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                "root": "MuiOutlinedInput-root",
                                                              }
                                                            }
                                                            inputComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "propTypes": Object {
                                                                  "IconComponent": [Function],
                                                                  "MenuProps": [Function],
                                                                  "SelectDisplayProps": [Function],
                                                                  "aria-label": [Function],
                                                                  "autoFocus": [Function],
                                                                  "autoWidth": [Function],
                                                                  "children": [Function],
                                                                  "className": [Function],
                                                                  "classes": [Function],
                                                                  "defaultValue": [Function],
                                                                  "disabled": [Function],
                                                                  "displayEmpty": [Function],
                                                                  "inputRef": [Function],
                                                                  "labelId": [Function],
                                                                  "multiple": [Function],
                                                                  "name": [Function],
                                                                  "onBlur": [Function],
                                                                  "onChange": [Function],
                                                                  "onClose": [Function],
                                                                  "onFocus": [Function],
                                                                  "onOpen": [Function],
                                                                  "open": [Function],
                                                                  "readOnly": [Function],
                                                                  "renderValue": [Function],
                                                                  "tabIndex": [Function],
                                                                  "type": [Function],
                                                                  "value": [Function],
                                                                  "variant": [Function],
                                                                },
                                                                "render": [Function],
                                                              }
                                                            }
                                                            inputProps={
                                                              Object {
                                                                "IconComponent": Object {
                                                                  "$$typeof": Symbol(react.memo),
                                                                  "compare": null,
                                                                  "type": Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "render": [Function],
                                                                  },
                                                                },
                                                                "MenuProps": undefined,
                                                                "SelectDisplayProps": Object {
                                                                  "id": undefined,
                                                                },
                                                                "autoWidth": false,
                                                                "children": Array [
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    disabled={true}
                                                                    value=""
                                                                  >
                                                                    
                                                                  </WithStyles(ForwardRef(MenuItem))>,
                                                                  Array [],
                                                                ],
                                                                "classes": Object {
                                                                  "disabled": "Mui-disabled",
                                                                  "filled": "MuiSelect-filled",
                                                                  "icon": "MuiSelect-icon",
                                                                  "iconFilled": "MuiSelect-iconFilled",
                                                                  "iconOpen": "MuiSelect-iconOpen",
                                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                                  "nativeInput": "MuiSelect-nativeInput",
                                                                  "outlined": "MuiSelect-outlined",
                                                                  "root": "MuiSelect-root",
                                                                  "select": "MuiSelect-select",
                                                                  "selectMenu": "MuiSelect-selectMenu",
                                                                },
                                                                "displayEmpty": true,
                                                                "labelId": undefined,
                                                                "multiple": false,
                                                                "onClose": undefined,
                                                                "onOpen": undefined,
                                                                "open": undefined,
                                                                "renderValue": undefined,
                                                                "type": undefined,
                                                                "variant": "filled",
                                                              }
                                                            }
                                                            name="unit"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            value=""
                                                          >
                                                            <WithStyles(ForwardRef(InputBase))
                                                              className="select-input"
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": null,
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={false}
                                                              inputComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "propTypes": Object {
                                                                    "IconComponent": [Function],
                                                                    "MenuProps": [Function],
                                                                    "SelectDisplayProps": [Function],
                                                                    "aria-label": [Function],
                                                                    "autoFocus": [Function],
                                                                    "autoWidth": [Function],
                                                                    "children": [Function],
                                                                    "className": [Function],
                                                                    "classes": [Function],
                                                                    "defaultValue": [Function],
                                                                    "disabled": [Function],
                                                                    "displayEmpty": [Function],
                                                                    "inputRef": [Function],
                                                                    "labelId": [Function],
                                                                    "multiple": [Function],
                                                                    "name": [Function],
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onClose": [Function],
                                                                    "onFocus": [Function],
                                                                    "onOpen": [Function],
                                                                    "open": [Function],
                                                                    "readOnly": [Function],
                                                                    "renderValue": [Function],
                                                                    "tabIndex": [Function],
                                                                    "type": [Function],
                                                                    "value": [Function],
                                                                    "variant": [Function],
                                                                  },
                                                                  "render": [Function],
                                                                }
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "IconComponent": Object {
                                                                    "$$typeof": Symbol(react.memo),
                                                                    "compare": null,
                                                                    "type": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "render": [Function],
                                                                    },
                                                                  },
                                                                  "MenuProps": undefined,
                                                                  "SelectDisplayProps": Object {
                                                                    "id": undefined,
                                                                  },
                                                                  "autoWidth": false,
                                                                  "children": Array [
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      disabled={true}
                                                                      value=""
                                                                    >
                                                                      
                                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                                    Array [],
                                                                  ],
                                                                  "classes": Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "filled": "MuiSelect-filled",
                                                                    "icon": "MuiSelect-icon",
                                                                    "iconFilled": "MuiSelect-iconFilled",
                                                                    "iconOpen": "MuiSelect-iconOpen",
                                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                                    "nativeInput": "MuiSelect-nativeInput",
                                                                    "outlined": "MuiSelect-outlined",
                                                                    "root": "MuiSelect-root",
                                                                    "select": "MuiSelect-select",
                                                                    "selectMenu": "MuiSelect-selectMenu",
                                                                  },
                                                                  "displayEmpty": true,
                                                                  "labelId": undefined,
                                                                  "multiple": false,
                                                                  "onClose": undefined,
                                                                  "onOpen": undefined,
                                                                  "open": undefined,
                                                                  "renderValue": undefined,
                                                                  "type": undefined,
                                                                  "variant": "filled",
                                                                }
                                                              }
                                                              multiline={false}
                                                              name="unit"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              renderSuffix={[Function]}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <ForwardRef(InputBase)
                                                                className="select-input"
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                    "error": "Mui-error Mui-error",
                                                                    "focused": "Mui-focused Mui-focused",
                                                                    "formControl": "MuiInputBase-formControl",
                                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={false}
                                                                inputComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "propTypes": Object {
                                                                      "IconComponent": [Function],
                                                                      "MenuProps": [Function],
                                                                      "SelectDisplayProps": [Function],
                                                                      "aria-label": [Function],
                                                                      "autoFocus": [Function],
                                                                      "autoWidth": [Function],
                                                                      "children": [Function],
                                                                      "className": [Function],
                                                                      "classes": [Function],
                                                                      "defaultValue": [Function],
                                                                      "disabled": [Function],
                                                                      "displayEmpty": [Function],
                                                                      "inputRef": [Function],
                                                                      "labelId": [Function],
                                                                      "multiple": [Function],
                                                                      "name": [Function],
                                                                      "onBlur": [Function],
                                                                      "onChange": [Function],
                                                                      "onClose": [Function],
                                                                      "onFocus": [Function],
                                                                      "onOpen": [Function],
                                                                      "open": [Function],
                                                                      "readOnly": [Function],
                                                                      "renderValue": [Function],
                                                                      "tabIndex": [Function],
                                                                      "type": [Function],
                                                                      "value": [Function],
                                                                      "variant": [Function],
                                                                    },
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                inputProps={
                                                                  Object {
                                                                    "IconComponent": Object {
                                                                      "$$typeof": Symbol(react.memo),
                                                                      "compare": null,
                                                                      "type": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "render": [Function],
                                                                      },
                                                                    },
                                                                    "MenuProps": undefined,
                                                                    "SelectDisplayProps": Object {
                                                                      "id": undefined,
                                                                    },
                                                                    "autoWidth": false,
                                                                    "children": Array [
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        disabled={true}
                                                                        value=""
                                                                      >
                                                                        
                                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                                      Array [],
                                                                    ],
                                                                    "classes": Object {
                                                                      "disabled": "Mui-disabled",
                                                                      "filled": "MuiSelect-filled",
                                                                      "icon": "MuiSelect-icon",
                                                                      "iconFilled": "MuiSelect-iconFilled",
                                                                      "iconOpen": "MuiSelect-iconOpen",
                                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                                      "nativeInput": "MuiSelect-nativeInput",
                                                                      "outlined": "MuiSelect-outlined",
                                                                      "root": "MuiSelect-root",
                                                                      "select": "MuiSelect-select",
                                                                      "selectMenu": "MuiSelect-selectMenu",
                                                                    },
                                                                    "displayEmpty": true,
                                                                    "labelId": undefined,
                                                                    "multiple": false,
                                                                    "onClose": undefined,
                                                                    "onOpen": undefined,
                                                                    "open": undefined,
                                                                    "renderValue": undefined,
                                                                    "type": undefined,
                                                                    "variant": "filled",
                                                                  }
                                                                }
                                                                multiline={false}
                                                                name="unit"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <div
                                                                  className="MuiInputBase-root MuiOutlinedInput-root select-input MuiInputBase-formControl"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(SelectInput)
                                                                    IconComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.memo),
                                                                        "compare": null,
                                                                        "type": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "render": [Function],
                                                                        },
                                                                      }
                                                                    }
                                                                    SelectDisplayProps={
                                                                      Object {
                                                                        "id": undefined,
                                                                      }
                                                                    }
                                                                    aria-invalid={false}
                                                                    autoWidth={false}
                                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "filled": "MuiSelect-filled",
                                                                        "icon": "MuiSelect-icon",
                                                                        "iconFilled": "MuiSelect-iconFilled",
                                                                        "iconOpen": "MuiSelect-iconOpen",
                                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                                        "nativeInput": "MuiSelect-nativeInput",
                                                                        "outlined": "MuiSelect-outlined",
                                                                        "root": "MuiSelect-root",
                                                                        "select": "MuiSelect-select",
                                                                        "selectMenu": "MuiSelect-selectMenu",
                                                                      }
                                                                    }
                                                                    disabled={false}
                                                                    displayEmpty={true}
                                                                    inputRef={[Function]}
                                                                    multiple={false}
                                                                    name="unit"
                                                                    onAnimationStart={[Function]}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    value=""
                                                                    variant="filled"
                                                                  >
                                                                    <div
                                                                      aria-haspopup="listbox"
                                                                      aria-labelledby="mui-component-select-unit"
                                                                      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                      id="mui-component-select-unit"
                                                                      onBlur={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      <span
                                                                        dangerouslySetInnerHTML={
                                                                          Object {
                                                                            "__html": "&#8203;",
                                                                          }
                                                                        }
                                                                      />
                                                                    </div>
                                                                    <input
                                                                      aria-hidden={true}
                                                                      className="MuiSelect-nativeInput"
                                                                      name="unit"
                                                                      onAnimationStart={[Function]}
                                                                      onChange={[Function]}
                                                                      required={false}
                                                                      tabIndex={-1}
                                                                      value=""
                                                                    />
                                                                    <ForwardRef(ArrowDropDownIcon)
                                                                      className="MuiSelect-icon MuiSelect-iconFilled"
                                                                    >
                                                                      <WithStyles(ForwardRef(SvgIcon))
                                                                        className="MuiSelect-icon MuiSelect-iconFilled"
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          className="MuiSelect-icon MuiSelect-iconFilled"
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconFilled"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M7 10l5 5 5-5z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(ArrowDropDownIcon)>
                                                                    <WithStyles(ForwardRef(Menu))
                                                                      MenuListProps={
                                                                        Object {
                                                                          "aria-labelledby": undefined,
                                                                          "disableListWrap": true,
                                                                          "role": "listbox",
                                                                        }
                                                                      }
                                                                      PaperProps={
                                                                        Object {
                                                                          "style": Object {
                                                                            "minWidth": undefined,
                                                                          },
                                                                        }
                                                                      }
                                                                      anchorEl={
                                                                        <div
                                                                          aria-haspopup="listbox"
                                                                          aria-labelledby="mui-component-select-unit"
                                                                          class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                          id="mui-component-select-unit"
                                                                          role="button"
                                                                          tabindex="0"
                                                                        >
                                                                          <span>
                                                                            ​
                                                                          </span>
                                                                        </div>
                                                                      }
                                                                      id="menu-unit"
                                                                      onClose={[Function]}
                                                                      open={false}
                                                                    >
                                                                      <ForwardRef(Menu)
                                                                        MenuListProps={
                                                                          Object {
                                                                            "aria-labelledby": undefined,
                                                                            "disableListWrap": true,
                                                                            "role": "listbox",
                                                                          }
                                                                        }
                                                                        PaperProps={
                                                                          Object {
                                                                            "style": Object {
                                                                              "minWidth": undefined,
                                                                            },
                                                                          }
                                                                        }
                                                                        anchorEl={
                                                                          <div
                                                                            aria-haspopup="listbox"
                                                                            aria-labelledby="mui-component-select-unit"
                                                                            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                            id="mui-component-select-unit"
                                                                            role="button"
                                                                            tabindex="0"
                                                                          >
                                                                            <span>
                                                                              ​
                                                                            </span>
                                                                          </div>
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "list": "MuiMenu-list",
                                                                            "paper": "MuiMenu-paper",
                                                                          }
                                                                        }
                                                                        id="menu-unit"
                                                                        onClose={[Function]}
                                                                        open={false}
                                                                      >
                                                                        <WithStyles(ForwardRef(Popover))
                                                                          PaperProps={
                                                                            Object {
                                                                              "classes": Object {
                                                                                "root": "MuiMenu-paper",
                                                                              },
                                                                              "style": Object {
                                                                                "minWidth": undefined,
                                                                              },
                                                                            }
                                                                          }
                                                                          TransitionProps={
                                                                            Object {
                                                                              "onEntering": [Function],
                                                                            }
                                                                          }
                                                                          anchorEl={
                                                                            <div
                                                                              aria-haspopup="listbox"
                                                                              aria-labelledby="mui-component-select-unit"
                                                                              class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                              id="mui-component-select-unit"
                                                                              role="button"
                                                                              tabindex="0"
                                                                            >
                                                                              <span>
                                                                                ​
                                                                              </span>
                                                                            </div>
                                                                          }
                                                                          anchorOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          getContentAnchorEl={[Function]}
                                                                          id="menu-unit"
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          transformOrigin={
                                                                            Object {
                                                                              "horizontal": "left",
                                                                              "vertical": "top",
                                                                            }
                                                                          }
                                                                          transitionDuration="auto"
                                                                        >
                                                                          <ForwardRef(Popover)
                                                                            PaperProps={
                                                                              Object {
                                                                                "classes": Object {
                                                                                  "root": "MuiMenu-paper",
                                                                                },
                                                                                "style": Object {
                                                                                  "minWidth": undefined,
                                                                                },
                                                                              }
                                                                            }
                                                                            TransitionProps={
                                                                              Object {
                                                                                "onEntering": [Function],
                                                                              }
                                                                            }
                                                                            anchorEl={
                                                                              <div
                                                                                aria-haspopup="listbox"
                                                                                aria-labelledby="mui-component-select-unit"
                                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-filled MuiInputBase-input MuiOutlinedInput-input"
                                                                                id="mui-component-select-unit"
                                                                                role="button"
                                                                                tabindex="0"
                                                                              >
                                                                                <span>
                                                                                  ​
                                                                                </span>
                                                                              </div>
                                                                            }
                                                                            anchorOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "paper": "MuiPopover-paper",
                                                                                "root": "MuiPopover-root",
                                                                              }
                                                                            }
                                                                            getContentAnchorEl={[Function]}
                                                                            id="menu-unit"
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                            transformOrigin={
                                                                              Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                                            }
                                                                            transitionDuration="auto"
                                                                          >
                                                                            <ForwardRef(Modal)
                                                                              BackdropProps={
                                                                                Object {
                                                                                  "invisible": true,
                                                                                }
                                                                              }
                                                                              className="MuiPopover-root"
                                                                              container={<body />}
                                                                              id="menu-unit"
                                                                              onClose={[Function]}
                                                                              open={false}
                                                                            />
                                                                          </ForwardRef(Popover)>
                                                                        </WithStyles(ForwardRef(Popover))>
                                                                      </ForwardRef(Menu)>
                                                                    </WithStyles(ForwardRef(Menu))>
                                                                  </ForwardRef(SelectInput)>
                                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                                    className="MuiOutlinedInput-notchedOutline"
                                                                    labelWidth={0}
                                                                    notched={false}
                                                                  >
                                                                    <ForwardRef(NotchedOutline)
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      classes={
                                                                        Object {
                                                                          "legend": "PrivateNotchedOutline-legend-9",
                                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-10",
                                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-11",
                                                                          "root": "PrivateNotchedOutline-root-8",
                                                                        }
                                                                      }
                                                                      labelWidth={0}
                                                                      notched={false}
                                                                    >
                                                                      <fieldset
                                                                        aria-hidden={true}
                                                                        className="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                                                        style={
                                                                          Object {
                                                                            "paddingLeft": 8,
                                                                          }
                                                                        }
                                                                      >
                                                                        <legend
                                                                          className="PrivateNotchedOutline-legend-9"
                                                                          style={
                                                                            Object {
                                                                              "width": 0.01,
                                                                            }
                                                                          }
                                                                        >
                                                                          <span
                                                                            dangerouslySetInnerHTML={
                                                                              Object {
                                                                                "__html": "&#8203;",
                                                                              }
                                                                            }
                                                                          />
                                                                        </legend>
                                                                      </fieldset>
                                                                    </ForwardRef(NotchedOutline)>
                                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                                </div>
                                                              </ForwardRef(InputBase)>
                                                            </WithStyles(ForwardRef(InputBase))>
                                                          </ForwardRef(OutlinedInput)>
                                                        </WithStyles(ForwardRef(OutlinedInput))>
                                                      </ForwardRef(Select)>
                                                    </WithStyles(ForwardRef(Select))>
                                                    <img
                                                      alt=""
                                                      src={
                                                        Object {
                                                          "testUri": "../../../packages/blocks/ExpenseTracking/assets/unit.png",
                                                        }
                                                      }
                                                    />
                                                  </div>
                                                </Styled(MuiBox)>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="resolvedBy"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/ExpenseTracking/assets/resolved-by.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="resolvedBy"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/ExpenseTracking/assets/resolved-by.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="resolvedBy"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/ExpenseTracking/assets/resolved-by.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="resolvedBy"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        placeholder=""
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/ExpenseTracking/assets/resolved-by.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/ExpenseTracking/assets/resolved-by.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="resolvedBy"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="summary"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/ExpenseTracking/assets/summary.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="summary"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/ExpenseTracking/assets/summary.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="summary"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/ExpenseTracking/assets/summary.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="summary"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        placeholder=""
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/ExpenseTracking/assets/summary.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/ExpenseTracking/assets/summary.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="summary"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <Styled(MuiBox)
                                            className="next-button"
                                          >
                                            <div
                                              className="MuiBox-root MuiBox-root-14 next-button"
                                            >
                                              <WithStyles(ForwardRef(Button))
                                                type="submit"
                                              >
                                                <ForwardRef(Button)
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit",
                                                      "contained": "MuiButton-contained",
                                                      "containedPrimary": "MuiButton-containedPrimary",
                                                      "containedSecondary": "MuiButton-containedSecondary",
                                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                      "disableElevation": "MuiButton-disableElevation",
                                                      "disabled": "Mui-disabled",
                                                      "endIcon": "MuiButton-endIcon",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "fullWidth": "MuiButton-fullWidth",
                                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                      "label": "MuiButton-label",
                                                      "outlined": "MuiButton-outlined",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                      "root": "MuiButton-root",
                                                      "sizeLarge": "MuiButton-sizeLarge",
                                                      "sizeSmall": "MuiButton-sizeSmall",
                                                      "startIcon": "MuiButton-startIcon",
                                                      "text": "MuiButton-text",
                                                      "textPrimary": "MuiButton-textPrimary",
                                                      "textSecondary": "MuiButton-textSecondary",
                                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                                    }
                                                  }
                                                  type="submit"
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiButton-root MuiButton-text"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    type="submit"
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiButton-root MuiButton-text"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="button"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      type="submit"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root MuiButton-root MuiButton-text"
                                                        disabled={false}
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={0}
                                                        type="submit"
                                                      >
                                                        <span
                                                          className="MuiButton-label"
                                                        />
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </button>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(Button)>
                                              </WithStyles(ForwardRef(Button))>
                                            </div>
                                          </Styled(MuiBox)>
                                        </div>
                                      </Styled(MuiBox)>
                                    </form>
                                  </Form>
                                </Formik>
                              </div>
                            </Styled(MuiBox)>
                          </div>
                        </ForwardRef(Container)>
                      </WithStyles(ForwardRef(Container))>
                    </div>
                  </Styled(MuiBox)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
            <WithStyles(ForwardRef(Grid))
              item={true}
              md={5}
              xs={12}
            >
              <ForwardRef(Grid)
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={5}
                xs={12}
              >
                <div
                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-5"
                >
                  <SidebarImageComponent>
                    <Styled(MuiBox)
                      className="right-block right-image"
                      display={
                        Object {
                          "md": "flex",
                          "xs": "none",
                        }
                      }
                    >
                      <div
                        className="MuiBox-root MuiBox-root-15 right-block right-image"
                      >
                        <img
                          alt=""
                          className="building-logo"
                        />
                      </div>
                    </Styled(MuiBox)>
                  </SidebarImageComponent>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
          </div>
        </ForwardRef(Grid)>
      </WithStyles(ForwardRef(Grid))>
    </div>
  </Styled(MuiBox)>
</AddEditExpense>
`;
