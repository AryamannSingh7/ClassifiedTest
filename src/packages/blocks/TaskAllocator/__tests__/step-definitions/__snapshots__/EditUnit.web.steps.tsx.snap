// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditUnit User navigates to EditUnit 1`] = `
<EditMyUnit
  classes={
    Object {
      "myUnitList": Object {
        "& .right-image": Object {
          "padding": "25px 60px",
        },
        "& .tenant-list-box": Object {
          "height": "88vh",
          "marginTop": "15px",
          "overflow": "hidden",
          "position": "relative",
        },
        "& .tenant-list-box .tenant": Object {
          "borderRadius": "8px",
          "boxShadow": "none",
          "padding": "12px",
        },
        "& .tenant-list-box .tenant .city": Object {
          "color": "lightslategrey",
        },
        "& .tenant-list-box .tenant .header": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
        },
        "& .tenant-list-box .tenant .header h4": Object {
          "cursor": "pointer",
        },
        "& .tenant-list-box .tenant .info": Object {
          "marginTop": "10px",
        },
        "& .tenant-list-box .tenant .info button": Object {
          "background": "#ffeadc",
          "borderRadius": "25px",
          "color": "#FC8434",
          "display": "block",
          "fontWeight": 600,
          "marginTop": "5px",
          "padding": "8px 20px",
        },
        "& .tenant-list-box .tenant .info button span": Object {
          "color": "#FC8434",
          "textTransform": "capitalize",
        },
        "& .tenant-list-box .tenant .info button.Empty": Object {
          "&  span": Object {
            "color": "#606060",
          },
          "background": "#d6d6d6",
        },
        "& .tenant-list-box .tenant .info button.Pending": Object {
          "&  span": Object {
            "color": "#ED5656",
          },
          "background": "#ffd7d7",
        },
        "& .tenant-list-box .tenant .info button.Rented": Object {
          "&  span": Object {
            "color": "#1EC65B",
          },
          "background": "#dbffe8",
        },
        "& .tenant-list-box .tenant .info span.header": Object {
          "color": "black",
          "fontSize": "16px",
        },
        "& .tenant-list-box .tenant-list": Object {
          "height": "calc(100% - 70px)",
          "overflowX": "hidden",
        },
        "& .tenant-list-box .upload-button": Object {
          "alignItems": "center",
          "bottom": 0,
          "display": "flex",
          "justifyContent": "center",
          "left": 0,
          "padding": "10px 0",
          "position": "sticky",
          "right": 0,
        },
        "& .tenant-list-box .upload-button .MuiGrid-root": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        },
        "& .tenant-list-box .upload-button button": Object {
          "background": "#2b6fec",
          "borderRadius": "25px",
          "color": "white",
          "fontWeight": 600,
          "padding": "12px 50px",
        },
        "& .top-bar": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "borderBottom": "2px solid #e2e2ef",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "padding": "10px 20px",
          "zIndex": "9999",
        },
        "& .top-bar .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "10px",
          "justifyContent": "center",
        },
        "& .top-bar .left-icon span": Object {
          "lineHeight": "18px",
        },
        "& .top-bar .right-icon": Object {
          "alignItems": "center",
          "display": "flex",
        },
        "& .top-bar .right-icon img": Object {
          "cursor": "pointer",
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
      },
      "registerUnit": Object {
        "& .error": Object {
          "color": "red",
          "fontSize": "14px",
          "marginLeft": "20px",
        },
        "& .form.issue-lease-content .next-button": Object {
          "bottom": 0,
          "position": "sticky",
        },
        "& .issue-lease-content": Object {
          "& .add-rent-history-btn": Object {
            "border": "1px solid lightgrey",
            "borderRadius": "25px",
            "fontSize": "16px",
            "fontWeight": 600,
            "margin": "15px 0",
            "padding": "10px",
            "width": "100%",
          },
          "& .map-span": Object {
            "& span": Object {
              "color": "#FC8434",
            },
            "cursor": "pointer",
            "fontWeight": 600,
            "marginTop": "10px",
            "textAlign": "end",
          },
          "& .rent-history-box": Object {
            "& .heading": Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
            },
            "& .info": Object {
              "& span": Object {
                "color": "#FC8434",
                "fontWeight": 600,
              },
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "marginTop": "8px",
            },
            "& .tenant-name": Object {
              "margin": "8px 0",
            },
            "border": "1px solid lightgrey",
            "borderRadius": "8px",
            "margin": "10px 0",
            "padding": "12px 20px",
          },
          "& .type-radio-select": Object {
            "& .MuiFormControlLabel-root": Object {
              "& .Mui-checked": Object {
                "& span": Object {
                  "color": "#FC8434",
                },
              },
              "border": "1px solid lightgrey",
              "borderRadius": "25px",
              "boxSizing": "border-box",
              "fontWeight": 600,
              "margin": 0,
              "padding": "5px 10px",
              "width": "48%",
            },
            "& .non-rented.MuiFormControlLabel-root": Object {
              "& span.MuiTypography-root": Object {
                "color": "#2B6FED",
                "fontWeight": 600,
              },
            },
            "& .rented.MuiFormControlLabel-root": Object {
              "& span.MuiTypography-root": Object {
                "color": "#939292",
                "fontWeight": 600,
              },
            },
            "flexDirection": "row",
            "gap": "10px",
            "justifyContent": "space-between",
            "marginTop": "15px",
          },
        },
        "& .issue-lease-content .MuiSelect-root": Object {
          "background": "#F9F9F9",
          "borderRadius": "30px",
        },
        "& .issue-lease-content .select-box": Object {
          "position": "relative",
        },
        "& .issue-lease-content .select-box .select-input": Object {
          "paddingLeft": "50px",
          "width": "100%",
        },
        "& .issue-lease-content .select-box .select-input.input": Object {
          "fontSize": "16px",
          "outline": "none",
          "padding": "18px 10px 18px 60px !important",
        },
        "& .issue-lease-content .select-box img": Object {
          "left": "15px",
          "position": "absolute",
          "top": "38px",
        },
        "& .issue-lease-content .select-input-box .input.select-input": Object {
          "padding": "12px 15px",
        },
        "& .issue-lease-content .select-input-box .input.select-input .MuiInputAdornment-positionStart": Object {
          "marginRight": "25px",
        },
        "& .issue-lease-content .select-input-box .input.select-input:after": Object {
          "border": 0,
        },
        "& .issue-lease-content .select-input-box .input.select-input:before": Object {
          "border": 0,
        },
        "& .issue-lease-content .select-input-box .select-input": Object {
          "background": "#F9F9F9",
          "border": "1px solid #F0F0F0",
          "borderRadius": "30px",
          "marginTop": "18px",
        },
        "& .issue-lease-content .select-input-box .select-input .MuiListItemIcon-root": Object {
          "minWidth": "40px",
        },
        "& .issue-lease-content .tenant-info": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "margin": "18px 0",
        },
        "& .issue-lease-content .tenant-info a": Object {
          "color": "#FC8434",
          "fontWeight": "600",
        },
        "& .issue-lease-content .tenant-info p": Object {
          "color": "black",
          "fontWeight": "600",
        },
        "& .issue-lease-content .tenant-info span": Object {
          "color": "#9C9C9C",
        },
        "& .next-button": Object {
          "alignItems": "center",
          "background": "white",
          "boxShadow": "none",
          "display": "flex",
          "justifyContent": "center",
          "marginTop": "20px",
          "padding": "10px 0",
        },
        "& .next-button button": Object {
          "background": "#2b6fec",
          "borderRadius": "25px",
          "color": "white",
          "fontWeight": 600,
          "minWidth": "300px",
          "padding": "12px 50px",
        },
        "& .page-container": Object {
          "height": "88vh",
          "overflowY": "auto",
        },
        "& .pending-buttons": Object {
          "& .okay": Object {
            "background": "white",
            "color": "#8D8D8D",
          },
          "alignItems": "center",
          "background": "white",
          "boxShadow": "none",
          "display": "flex",
          "flexDirection": "column",
          "gap": "10px",
          "justifyContent": "center",
          "marginTop": "20px",
          "padding": "10px 0",
        },
        "& .pending-page": Object {
          "& p": Object {
            "textAlign": "center",
          },
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "gap": "20px",
          "height": "calc(100% - 160px)",
          "justifyContent": "center",
        },
        "& .right-image": Object {
          "padding": "23px 60px",
        },
        "& .success-page": Object {
          "& p": Object {
            "textAlign": "center",
          },
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "gap": "20px",
          "height": "calc(100% - 100px)",
          "justifyContent": "center",
        },
        "& .top-bar": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "borderBottom": "2px solid #F9F9F9",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "padding": "10px 20px",
          "position": "sticky",
          "top": "0",
        },
        "& .top-bar .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        },
        "& .top-bar .right-icon img": Object {
          "marginLeft": "15px",
        },
        "& :-ms-input-placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& ::-ms-input-placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& ::placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
      },
      "tenantDetails": Object {
        "& .images-box": Object {
          "& .slick-next": Object {
            "display": "none !important",
          },
          "& .slick-prev": Object {
            "display": "none !important",
          },
          "& .slick-track": Object {
            "display": "flex",
          },
          "& h4": Object {
            "marginBottom": "10px",
          },
          "& img": Object {
            "borderRadius": "8px",
            "height": "100px",
            "width": "100px",
          },
          "margin": "15px 0",
          "overflow": "hidden",
        },
        "& .rent-history-box": Object {
          "& .header": Object {
            "& span": Object {
              "cursor": "pointer",
              "fontWeight": 600,
            },
            "& span.Mui-checked": Object {
              "color": "#FC8434",
              "cursor": "pointer",
              "fontWeight": 600,
            },
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
          },
          "& .rent-history": Object {
            "& .date": Object {
              "margin": "10px 0",
            },
            "& .info": Object {
              "& span": Object {
                "color": "#FC8434",
                "fontWeight": 600,
              },
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "marginTop": "8px",
            },
            "border": "1px solid lightgrey",
            "borderRadius": "8px",
            "margin": "10px 0",
            "padding": "12px 20px",
          },
        },
        "& .rent-history-grid": Object {
          "background": "white",
          "height": "88vh",
          "overflowX": "hidden",
        },
        "& .rent-history-grid .rent-history-box": Object {
          "minHeight": "calc(100% - 78px)",
        },
        "& .right-image": Object {
          "padding": "25px 60px",
        },
        "& .tenant-detail-box": Object {
          "background": "white",
          "height": "88vh",
          "overflow": "auto",
        },
        "& .tenant-detail-box .detail": Object {
          "& .header": Object {
            "& span": Object {
              "color": "#FC8434",
              "cursor": "pointer",
              "fontWeight": 600,
            },
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
          },
          "margin": "15px 0",
        },
        "& .tenant-detail-box .detail .detail-box": Object {
          "border": "1px solid #e2e2ef",
          "borderRadius": "8px",
          "boxShadow": "none",
          "marginTop": "10px",
          "padding": "15px 20px",
        },
        "& .tenant-detail-box .detail .detail-box .info-item": Object {
          "alignItems": "flex-start",
          "display": "flex",
          "gap": "12px",
        },
        "& .tenant-detail-box .detail .detail-box .info-item .item-data": Object {
          "display": "flex",
          "flexDirection": "column",
          "gap": "6px",
        },
        "& .tenant-detail-box .detail .detail-box .info-item p": Object {
          "fontWeight": 600,
        },
        "& .tenant-detail-box .detail .detail-box .info-item p.tenant-link-text": Object {
          "color": "#FC8434",
        },
        "& .tenant-detail-box .detail .detail-box .info-item span": Object {
          "lineHeight": "14px",
        },
        "& .top-bar": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "borderBottom": "2px solid #e2e2ef",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "padding": "10px 20px",
          "zIndex": "9999",
        },
        "& .top-bar .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "10px",
          "justifyContent": "center",
        },
        "& .top-bar .left-icon span": Object {
          "lineHeight": "18px",
        },
        "& .top-bar .right-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "20px",
        },
        "& .upload-button": Object {
          "alignItems": "center",
          "background": "white",
          "bottom": 0,
          "display": "flex",
          "justifyContent": "center",
          "left": 0,
          "padding": "10px 0",
          "position": "sticky",
          "right": 0,
        },
        "& .upload-button .MuiGrid-root": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        },
        "& .upload-button button": Object {
          "alignItems": "center",
          "background": "#2b6fec",
          "borderRadius": "25px",
          "color": "white",
          "display": "flex",
          "fontWeight": 600,
          "justifyContent": "center",
          "padding": "12px 50px",
        },
        "& .view-all-text": Object {
          "color": "#FC8434",
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
      },
      "tenantProfile": Object {
        "& .profile-bottom-box": Object {
          "& .profile-item": Object {
            "& .profile-hobby-box": Object {
              "& span": Object {
                "background": "#ffddc6",
                "borderRadius": "25px",
                "color": "#FC8434",
                "fontSize": "14px",
                "fontWeight": "600",
                "padding": "6px 12px",
              },
              "alignItems": "center",
              "display": "flex",
              "flexWrap": "wrap",
              "gap": "12px",
              "justifyContent": "flex-start",
            },
            "& .profile-social-box": Object {
              "& img": Object {
                "background": "#F6F6F6",
                "borderRadius": "50%",
                "cursor": "pointer",
                "height": "15px",
                "padding": "10px",
                "width": "12px",
              },
              "alignItems": "center",
              "display": "flex",
              "flexWrap": "wrap",
              "gap": "12px",
              "justifyContent": "flex-start",
            },
            "& h4": Object {
              "marginBottom": "5px",
            },
            "margin": "15px 0",
          },
        },
        "& .profile-top-box": Object {
          "& .MuiAvatar-root": Object {
            "height": "64px",
            "marginBottom": "10px",
            "width": "64px",
          },
          "& .profile-add-info-box": Object {
            "& span": Object {
              "fontWeight": "600",
            },
            "alignItems": "center",
            "display": "flex",
            "gap": "50px",
            "justifyContent": "space-around",
          },
          "& .profile-info-box": Object {
            "& div": Object {
              "background": "#D6DBE4",
              "width": "3px",
            },
            "& img": Object {
              "cursor": "pointer",
              "height": "20px",
              "width": "20px",
            },
            "background": "#F6F6F6",
            "borderRadius": "25px",
            "display": "flex",
            "gap": "20px",
            "marginBottom": "10px",
            "marginTop": "10px",
            "padding": "15px 25px",
          },
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "justifyContent": "center",
          "margin": "15px 0",
        },
        "& .right-image": Object {
          "padding": "25px 60px",
        },
        "& .tenant-detail-box": Object {
          "background": "white",
          "height": "88vh",
          "overflow": "auto",
        },
        "& .top-bar": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "borderBottom": "2px solid #e2e2ef",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "padding": "10px 20px",
          "zIndex": "9999",
        },
        "& .top-bar .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "10px",
          "justifyContent": "center",
        },
        "& .top-bar .left-icon span": Object {
          "lineHeight": "18px",
        },
        "& .top-bar .right-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "20px",
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
      },
    }
  }
  id="EditUnit"
  navigation={
    Object {
      "getParam": [MockFunction] {
        "calls": Array [
          Array [
            "id",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "goBack": [MockFunction],
      "navigate": [MockFunction],
    }
  }
  t={[Function]}
>
  <Styled(MuiBox)
    className={
      Object {
        "& .error": Object {
          "color": "red",
          "fontSize": "14px",
          "marginLeft": "20px",
        },
        "& .form.issue-lease-content .next-button": Object {
          "bottom": 0,
          "position": "sticky",
        },
        "& .issue-lease-content": Object {
          "& .add-rent-history-btn": Object {
            "border": "1px solid lightgrey",
            "borderRadius": "25px",
            "fontSize": "16px",
            "fontWeight": 600,
            "margin": "15px 0",
            "padding": "10px",
            "width": "100%",
          },
          "& .map-span": Object {
            "& span": Object {
              "color": "#FC8434",
            },
            "cursor": "pointer",
            "fontWeight": 600,
            "marginTop": "10px",
            "textAlign": "end",
          },
          "& .rent-history-box": Object {
            "& .heading": Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
            },
            "& .info": Object {
              "& span": Object {
                "color": "#FC8434",
                "fontWeight": 600,
              },
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "marginTop": "8px",
            },
            "& .tenant-name": Object {
              "margin": "8px 0",
            },
            "border": "1px solid lightgrey",
            "borderRadius": "8px",
            "margin": "10px 0",
            "padding": "12px 20px",
          },
          "& .type-radio-select": Object {
            "& .MuiFormControlLabel-root": Object {
              "& .Mui-checked": Object {
                "& span": Object {
                  "color": "#FC8434",
                },
              },
              "border": "1px solid lightgrey",
              "borderRadius": "25px",
              "boxSizing": "border-box",
              "fontWeight": 600,
              "margin": 0,
              "padding": "5px 10px",
              "width": "48%",
            },
            "& .non-rented.MuiFormControlLabel-root": Object {
              "& span.MuiTypography-root": Object {
                "color": "#2B6FED",
                "fontWeight": 600,
              },
            },
            "& .rented.MuiFormControlLabel-root": Object {
              "& span.MuiTypography-root": Object {
                "color": "#939292",
                "fontWeight": 600,
              },
            },
            "flexDirection": "row",
            "gap": "10px",
            "justifyContent": "space-between",
            "marginTop": "15px",
          },
        },
        "& .issue-lease-content .MuiSelect-root": Object {
          "background": "#F9F9F9",
          "borderRadius": "30px",
        },
        "& .issue-lease-content .select-box": Object {
          "position": "relative",
        },
        "& .issue-lease-content .select-box .select-input": Object {
          "paddingLeft": "50px",
          "width": "100%",
        },
        "& .issue-lease-content .select-box .select-input.input": Object {
          "fontSize": "16px",
          "outline": "none",
          "padding": "18px 10px 18px 60px !important",
        },
        "& .issue-lease-content .select-box img": Object {
          "left": "15px",
          "position": "absolute",
          "top": "38px",
        },
        "& .issue-lease-content .select-input-box .input.select-input": Object {
          "padding": "12px 15px",
        },
        "& .issue-lease-content .select-input-box .input.select-input .MuiInputAdornment-positionStart": Object {
          "marginRight": "25px",
        },
        "& .issue-lease-content .select-input-box .input.select-input:after": Object {
          "border": 0,
        },
        "& .issue-lease-content .select-input-box .input.select-input:before": Object {
          "border": 0,
        },
        "& .issue-lease-content .select-input-box .select-input": Object {
          "background": "#F9F9F9",
          "border": "1px solid #F0F0F0",
          "borderRadius": "30px",
          "marginTop": "18px",
        },
        "& .issue-lease-content .select-input-box .select-input .MuiListItemIcon-root": Object {
          "minWidth": "40px",
        },
        "& .issue-lease-content .tenant-info": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "margin": "18px 0",
        },
        "& .issue-lease-content .tenant-info a": Object {
          "color": "#FC8434",
          "fontWeight": "600",
        },
        "& .issue-lease-content .tenant-info p": Object {
          "color": "black",
          "fontWeight": "600",
        },
        "& .issue-lease-content .tenant-info span": Object {
          "color": "#9C9C9C",
        },
        "& .next-button": Object {
          "alignItems": "center",
          "background": "white",
          "boxShadow": "none",
          "display": "flex",
          "justifyContent": "center",
          "marginTop": "20px",
          "padding": "10px 0",
        },
        "& .next-button button": Object {
          "background": "#2b6fec",
          "borderRadius": "25px",
          "color": "white",
          "fontWeight": 600,
          "minWidth": "300px",
          "padding": "12px 50px",
        },
        "& .page-container": Object {
          "height": "88vh",
          "overflowY": "auto",
        },
        "& .pending-buttons": Object {
          "& .okay": Object {
            "background": "white",
            "color": "#8D8D8D",
          },
          "alignItems": "center",
          "background": "white",
          "boxShadow": "none",
          "display": "flex",
          "flexDirection": "column",
          "gap": "10px",
          "justifyContent": "center",
          "marginTop": "20px",
          "padding": "10px 0",
        },
        "& .pending-page": Object {
          "& p": Object {
            "textAlign": "center",
          },
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "gap": "20px",
          "height": "calc(100% - 160px)",
          "justifyContent": "center",
        },
        "& .right-image": Object {
          "padding": "23px 60px",
        },
        "& .success-page": Object {
          "& p": Object {
            "textAlign": "center",
          },
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "gap": "20px",
          "height": "calc(100% - 100px)",
          "justifyContent": "center",
        },
        "& .top-bar": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "borderBottom": "2px solid #F9F9F9",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "padding": "10px 20px",
          "position": "sticky",
          "top": "0",
        },
        "& .top-bar .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        },
        "& .top-bar .right-icon img": Object {
          "marginLeft": "15px",
        },
        "& :-ms-input-placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& ::-ms-input-placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& ::placeholder": Object {
          "color": "black",
          "opacity": 1,
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
      }
    }
    style={
      Object {
        "background": "white",
        "height": "100vh",
        "overflowY": "hidden",
      }
    }
  >
    <div
      className="MuiBox-root MuiBox-root-1 & .top-bar & .top-bar .left-icon & .top-bar .right-icon img & .right-image & a & .page-container & .issue-lease-content .select-input-box .select-input & .issue-lease-content .MuiSelect-root & .issue-lease-content .select-box & .issue-lease-content .select-box img & .issue-lease-content .select-box .select-input & .issue-lease-content .select-box .select-input.input & .issue-lease-content .select-input-box .select-input .MuiListItemIcon-root & .issue-lease-content .select-input-box .input.select-input & .issue-lease-content .select-input-box .input.select-input .MuiInputAdornment-positionStart & .issue-lease-content .select-input-box .input.select-input:before & .issue-lease-content .select-input-box .input.select-input:after & .issue-lease-content .tenant-info & .issue-lease-content .tenant-info a & .issue-lease-content .tenant-info span & .issue-lease-content .tenant-info p & .issue-lease-content & .success-page & .pending-page & .pending-buttons & .next-button & .next-button button & .error & ::placeholder & :-ms-input-placeholder & ::-ms-input-placeholder & .form.issue-lease-content .next-button"
      style={
        Object {
          "background": "white",
          "height": "100vh",
          "overflowY": "hidden",
        }
      }
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
      >
        <ForwardRef(Grid)
          classes={
            Object {
              "align-content-xs-center": "MuiGrid-align-content-xs-center",
              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
              "align-items-xs-center": "MuiGrid-align-items-xs-center",
              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
              "container": "MuiGrid-container",
              "direction-xs-column": "MuiGrid-direction-xs-column",
              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
              "grid-lg-1": "MuiGrid-grid-lg-1",
              "grid-lg-10": "MuiGrid-grid-lg-10",
              "grid-lg-11": "MuiGrid-grid-lg-11",
              "grid-lg-12": "MuiGrid-grid-lg-12",
              "grid-lg-2": "MuiGrid-grid-lg-2",
              "grid-lg-3": "MuiGrid-grid-lg-3",
              "grid-lg-4": "MuiGrid-grid-lg-4",
              "grid-lg-5": "MuiGrid-grid-lg-5",
              "grid-lg-6": "MuiGrid-grid-lg-6",
              "grid-lg-7": "MuiGrid-grid-lg-7",
              "grid-lg-8": "MuiGrid-grid-lg-8",
              "grid-lg-9": "MuiGrid-grid-lg-9",
              "grid-lg-auto": "MuiGrid-grid-lg-auto",
              "grid-lg-true": "MuiGrid-grid-lg-true",
              "grid-md-1": "MuiGrid-grid-md-1",
              "grid-md-10": "MuiGrid-grid-md-10",
              "grid-md-11": "MuiGrid-grid-md-11",
              "grid-md-12": "MuiGrid-grid-md-12",
              "grid-md-2": "MuiGrid-grid-md-2",
              "grid-md-3": "MuiGrid-grid-md-3",
              "grid-md-4": "MuiGrid-grid-md-4",
              "grid-md-5": "MuiGrid-grid-md-5",
              "grid-md-6": "MuiGrid-grid-md-6",
              "grid-md-7": "MuiGrid-grid-md-7",
              "grid-md-8": "MuiGrid-grid-md-8",
              "grid-md-9": "MuiGrid-grid-md-9",
              "grid-md-auto": "MuiGrid-grid-md-auto",
              "grid-md-true": "MuiGrid-grid-md-true",
              "grid-sm-1": "MuiGrid-grid-sm-1",
              "grid-sm-10": "MuiGrid-grid-sm-10",
              "grid-sm-11": "MuiGrid-grid-sm-11",
              "grid-sm-12": "MuiGrid-grid-sm-12",
              "grid-sm-2": "MuiGrid-grid-sm-2",
              "grid-sm-3": "MuiGrid-grid-sm-3",
              "grid-sm-4": "MuiGrid-grid-sm-4",
              "grid-sm-5": "MuiGrid-grid-sm-5",
              "grid-sm-6": "MuiGrid-grid-sm-6",
              "grid-sm-7": "MuiGrid-grid-sm-7",
              "grid-sm-8": "MuiGrid-grid-sm-8",
              "grid-sm-9": "MuiGrid-grid-sm-9",
              "grid-sm-auto": "MuiGrid-grid-sm-auto",
              "grid-sm-true": "MuiGrid-grid-sm-true",
              "grid-xl-1": "MuiGrid-grid-xl-1",
              "grid-xl-10": "MuiGrid-grid-xl-10",
              "grid-xl-11": "MuiGrid-grid-xl-11",
              "grid-xl-12": "MuiGrid-grid-xl-12",
              "grid-xl-2": "MuiGrid-grid-xl-2",
              "grid-xl-3": "MuiGrid-grid-xl-3",
              "grid-xl-4": "MuiGrid-grid-xl-4",
              "grid-xl-5": "MuiGrid-grid-xl-5",
              "grid-xl-6": "MuiGrid-grid-xl-6",
              "grid-xl-7": "MuiGrid-grid-xl-7",
              "grid-xl-8": "MuiGrid-grid-xl-8",
              "grid-xl-9": "MuiGrid-grid-xl-9",
              "grid-xl-auto": "MuiGrid-grid-xl-auto",
              "grid-xl-true": "MuiGrid-grid-xl-true",
              "grid-xs-1": "MuiGrid-grid-xs-1",
              "grid-xs-10": "MuiGrid-grid-xs-10",
              "grid-xs-11": "MuiGrid-grid-xs-11",
              "grid-xs-12": "MuiGrid-grid-xs-12",
              "grid-xs-2": "MuiGrid-grid-xs-2",
              "grid-xs-3": "MuiGrid-grid-xs-3",
              "grid-xs-4": "MuiGrid-grid-xs-4",
              "grid-xs-5": "MuiGrid-grid-xs-5",
              "grid-xs-6": "MuiGrid-grid-xs-6",
              "grid-xs-7": "MuiGrid-grid-xs-7",
              "grid-xs-8": "MuiGrid-grid-xs-8",
              "grid-xs-9": "MuiGrid-grid-xs-9",
              "grid-xs-auto": "MuiGrid-grid-xs-auto",
              "grid-xs-true": "MuiGrid-grid-xs-true",
              "item": "MuiGrid-item",
              "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
              "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
              "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
              "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
              "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
              "root": "MuiGrid-root",
              "spacing-xs-1": "MuiGrid-spacing-xs-1",
              "spacing-xs-10": "MuiGrid-spacing-xs-10",
              "spacing-xs-2": "MuiGrid-spacing-xs-2",
              "spacing-xs-3": "MuiGrid-spacing-xs-3",
              "spacing-xs-4": "MuiGrid-spacing-xs-4",
              "spacing-xs-5": "MuiGrid-spacing-xs-5",
              "spacing-xs-6": "MuiGrid-spacing-xs-6",
              "spacing-xs-7": "MuiGrid-spacing-xs-7",
              "spacing-xs-8": "MuiGrid-spacing-xs-8",
              "spacing-xs-9": "MuiGrid-spacing-xs-9",
              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
              "zeroMinWidth": "MuiGrid-zeroMinWidth",
            }
          }
          container={true}
        >
          <div
            className="MuiGrid-root MuiGrid-container"
          >
            <WithStyles(ForwardRef(Grid))
              item={true}
              md={7}
              xs={12}
            >
              <ForwardRef(Grid)
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={7}
                xs={12}
              >
                <div
                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-7"
                >
                  <Styled(MuiBox)>
                    <div
                      className="MuiBox-root MuiBox-root-2"
                    >
                      <Styled(MuiBox)
                        className="top-bar"
                        display={
                          Object {
                            "md": "flex",
                            "xs": "flex",
                          }
                        }
                      >
                        <div
                          className="MuiBox-root MuiBox-root-3 top-bar"
                        >
                          <div
                            className="left-icon"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      className="MuiButtonBase-root MuiIconButton-root"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef(KeyboardBackspaceIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(KeyboardBackspaceIcon)>
                                      </span>
                                      <WithStyles(memo)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                            <span />
                          </div>
                        </div>
                      </Styled(MuiBox)>
                      <WithStyles(ForwardRef(Container))
                        className="page-container"
                      >
                        <ForwardRef(Container)
                          className="page-container"
                          classes={
                            Object {
                              "disableGutters": "MuiContainer-disableGutters",
                              "fixed": "MuiContainer-fixed",
                              "maxWidthLg": "MuiContainer-maxWidthLg",
                              "maxWidthMd": "MuiContainer-maxWidthMd",
                              "maxWidthSm": "MuiContainer-maxWidthSm",
                              "maxWidthXl": "MuiContainer-maxWidthXl",
                              "maxWidthXs": "MuiContainer-maxWidthXs",
                              "root": "MuiContainer-root",
                            }
                          }
                        >
                          <div
                            className="MuiContainer-root page-container MuiContainer-maxWidthLg"
                          >
                            <Styled(MuiBox)
                              className="issue-lease-content form"
                            >
                              <div
                                className="MuiBox-root MuiBox-root-4 issue-lease-content form"
                              >
                                <Formik
                                  enableReinitialize={true}
                                  initialValues={
                                    Object {
                                      "buildingId": "",
                                      "city": "",
                                      "complex": "",
                                      "config": "",
                                      "country": "",
                                      "date": "",
                                      "floorId": "",
                                      "income": "",
                                      "price": "",
                                      "region": "",
                                      "size": "",
                                      "type": "Rented",
                                      "unitId": "",
                                      "valuation": "",
                                    }
                                  }
                                  onSubmit={[Function]}
                                  validationSchema={
                                    ObjectSchema {
                                      "_blacklist": RefSet {
                                        "list": Set {},
                                        "refs": Map {},
                                      },
                                      "_conditions": Array [],
                                      "_defaultDefault": [Function],
                                      "_deps": Array [],
                                      "_excludedEdges": Array [],
                                      "_exclusive": Object {},
                                      "_mutate": undefined,
                                      "_nodes": Array [
                                        "type",
                                        "income",
                                        "valuation",
                                      ],
                                      "_options": Object {
                                        "abortEarly": true,
                                        "recursive": true,
                                      },
                                      "_type": "object",
                                      "_typeError": [Function],
                                      "_whitelist": RefSet {
                                        "list": Set {},
                                        "refs": Map {},
                                      },
                                      "fields": Object {
                                        "income": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [
                                            Condition {
                                              "fn": [Function],
                                              "refs": Array [
                                                Reference {
                                                  "getter": [Function],
                                                  "isContext": false,
                                                  "isSibling": true,
                                                  "isValue": false,
                                                  "key": "type",
                                                  "map": undefined,
                                                  "path": "type",
                                                },
                                              ],
                                            },
                                          ],
                                          "_deps": Array [
                                            "type",
                                          ],
                                          "_exclusive": Object {},
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "type": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {},
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                        "valuation": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "matches": false,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                          "type": "string",
                                        },
                                      },
                                      "tests": Array [],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                      "type": "object",
                                    }
                                  }
                                >
                                  <Form
                                    onSubmit={[Function]}
                                    translate="true"
                                  >
                                    <form
                                      action="#"
                                      onReset={[Function]}
                                      onSubmit={[Function]}
                                      translate="true"
                                    >
                                      <Styled(MuiBox)
                                        className="select-input-box"
                                      >
                                        <div
                                          className="MuiBox-root MuiBox-root-5 select-input-box"
                                        >
                                          <h4
                                            style={
                                              Object {
                                                "marginTop": "18px",
                                              }
                                            }
                                          />
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="country"
                                                  placeholder=""
                                                  readOnly={true}
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/TaskAllocator/assets/earth.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="country"
                                                    placeholder=""
                                                    readOnly={true}
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/TaskAllocator/assets/earth.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="country"
                                                      placeholder=""
                                                      readOnly={true}
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/TaskAllocator/assets/earth.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="country"
                                                        placeholder=""
                                                        readOnly={true}
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/TaskAllocator/assets/earth.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/TaskAllocator/assets/earth.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="country"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            readOnly={true}
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="region"
                                                  placeholder=""
                                                  readOnly={true}
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/TaskAllocator/assets/region.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="region"
                                                    placeholder=""
                                                    readOnly={true}
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/TaskAllocator/assets/region.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="region"
                                                      placeholder=""
                                                      readOnly={true}
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/TaskAllocator/assets/region.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="region"
                                                        placeholder=""
                                                        readOnly={true}
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/TaskAllocator/assets/region.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/TaskAllocator/assets/region.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="region"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            readOnly={true}
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="city"
                                                  placeholder=""
                                                  readOnly={true}
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/TaskAllocator/assets/city.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="city"
                                                    placeholder=""
                                                    readOnly={true}
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/TaskAllocator/assets/city.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="city"
                                                      placeholder=""
                                                      readOnly={true}
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/TaskAllocator/assets/city.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="city"
                                                        placeholder=""
                                                        readOnly={true}
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/TaskAllocator/assets/city.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/TaskAllocator/assets/city.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="city"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            readOnly={true}
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <Styled(MuiBox)
                                            className="map-span"
                                          >
                                            <div
                                              className="MuiBox-root MuiBox-root-6 map-span"
                                            >
                                              <WithStyles(ForwardRef(Link))
                                                href="https://maps.google.com/?q=,"
                                                target="_blank"
                                              >
                                                <ForwardRef(Link)
                                                  classes={
                                                    Object {
                                                      "button": "MuiLink-button",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiLink-root",
                                                      "underlineAlways": "MuiLink-underlineAlways",
                                                      "underlineHover": "MuiLink-underlineHover",
                                                      "underlineNone": "MuiLink-underlineNone",
                                                    }
                                                  }
                                                  href="https://maps.google.com/?q=,"
                                                  target="_blank"
                                                >
                                                  <WithStyles(ForwardRef(Typography))
                                                    className="MuiLink-root MuiLink-underlineHover"
                                                    color="primary"
                                                    component="a"
                                                    href="https://maps.google.com/?q=,"
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    target="_blank"
                                                    variant="inherit"
                                                  >
                                                    <ForwardRef(Typography)
                                                      className="MuiLink-root MuiLink-underlineHover"
                                                      classes={
                                                        Object {
                                                          "alignCenter": "MuiTypography-alignCenter",
                                                          "alignJustify": "MuiTypography-alignJustify",
                                                          "alignLeft": "MuiTypography-alignLeft",
                                                          "alignRight": "MuiTypography-alignRight",
                                                          "body1": "MuiTypography-body1",
                                                          "body2": "MuiTypography-body2",
                                                          "button": "MuiTypography-button",
                                                          "caption": "MuiTypography-caption",
                                                          "colorError": "MuiTypography-colorError",
                                                          "colorInherit": "MuiTypography-colorInherit",
                                                          "colorPrimary": "MuiTypography-colorPrimary",
                                                          "colorSecondary": "MuiTypography-colorSecondary",
                                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                          "displayBlock": "MuiTypography-displayBlock",
                                                          "displayInline": "MuiTypography-displayInline",
                                                          "gutterBottom": "MuiTypography-gutterBottom",
                                                          "h1": "MuiTypography-h1",
                                                          "h2": "MuiTypography-h2",
                                                          "h3": "MuiTypography-h3",
                                                          "h4": "MuiTypography-h4",
                                                          "h5": "MuiTypography-h5",
                                                          "h6": "MuiTypography-h6",
                                                          "noWrap": "MuiTypography-noWrap",
                                                          "overline": "MuiTypography-overline",
                                                          "paragraph": "MuiTypography-paragraph",
                                                          "root": "MuiTypography-root",
                                                          "srOnly": "MuiTypography-srOnly",
                                                          "subtitle1": "MuiTypography-subtitle1",
                                                          "subtitle2": "MuiTypography-subtitle2",
                                                        }
                                                      }
                                                      color="primary"
                                                      component="a"
                                                      href="https://maps.google.com/?q=,"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      target="_blank"
                                                      variant="inherit"
                                                    >
                                                      <a
                                                        className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                        href="https://maps.google.com/?q=,"
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        target="_blank"
                                                      >
                                                        <span />
                                                      </a>
                                                    </ForwardRef(Typography)>
                                                  </WithStyles(ForwardRef(Typography))>
                                                </ForwardRef(Link)>
                                              </WithStyles(ForwardRef(Link))>
                                            </div>
                                          </Styled(MuiBox)>
                                          <h4
                                            style={
                                              Object {
                                                "marginTop": "18px",
                                              }
                                            }
                                          />
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="complex"
                                                  placeholder=""
                                                  readOnly={true}
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/TaskAllocator/assets/complex.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="complex"
                                                    placeholder=""
                                                    readOnly={true}
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/TaskAllocator/assets/complex.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="complex"
                                                      placeholder=""
                                                      readOnly={true}
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/TaskAllocator/assets/complex.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="complex"
                                                        placeholder=""
                                                        readOnly={true}
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/TaskAllocator/assets/complex.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/TaskAllocator/assets/complex.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="complex"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            readOnly={true}
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="buildingId"
                                                  placeholder=""
                                                  readOnly={true}
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/TaskAllocator/assets/select-building.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="buildingId"
                                                    placeholder=""
                                                    readOnly={true}
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/TaskAllocator/assets/select-building.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="buildingId"
                                                      placeholder=""
                                                      readOnly={true}
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/TaskAllocator/assets/select-building.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="buildingId"
                                                        placeholder=""
                                                        readOnly={true}
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/TaskAllocator/assets/select-building.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/TaskAllocator/assets/select-building.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="buildingId"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            readOnly={true}
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="floorId"
                                                  placeholder=""
                                                  readOnly={true}
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/TaskAllocator/assets/floor.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="floorId"
                                                    placeholder=""
                                                    readOnly={true}
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/TaskAllocator/assets/floor.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="floorId"
                                                      placeholder=""
                                                      readOnly={true}
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/TaskAllocator/assets/floor.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="floorId"
                                                        placeholder=""
                                                        readOnly={true}
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/TaskAllocator/assets/floor.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/TaskAllocator/assets/floor.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="floorId"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            readOnly={true}
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="unitId"
                                                  placeholder=""
                                                  readOnly={true}
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/TaskAllocator/assets/cube.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="unitId"
                                                    placeholder=""
                                                    readOnly={true}
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/TaskAllocator/assets/cube.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="unitId"
                                                      placeholder=""
                                                      readOnly={true}
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/TaskAllocator/assets/cube.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="unitId"
                                                        placeholder=""
                                                        readOnly={true}
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/TaskAllocator/assets/cube.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/TaskAllocator/assets/cube.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="unitId"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            readOnly={true}
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="size"
                                                  placeholder=""
                                                  readOnly={true}
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/TaskAllocator/assets/size.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="size"
                                                    placeholder=""
                                                    readOnly={true}
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/TaskAllocator/assets/size.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="size"
                                                      placeholder=""
                                                      readOnly={true}
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/TaskAllocator/assets/size.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="size"
                                                        placeholder=""
                                                        readOnly={true}
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/TaskAllocator/assets/size.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/TaskAllocator/assets/size.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="size"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            readOnly={true}
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="config"
                                                  placeholder=""
                                                  readOnly={true}
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/TaskAllocator/assets/config.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="config"
                                                    placeholder=""
                                                    readOnly={true}
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/TaskAllocator/assets/config.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="config"
                                                      placeholder=""
                                                      readOnly={true}
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/TaskAllocator/assets/config.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="config"
                                                        placeholder=""
                                                        readOnly={true}
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/TaskAllocator/assets/config.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/TaskAllocator/assets/config.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="config"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            readOnly={true}
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(Grid))
                                            container={true}
                                            spacing={2}
                                          >
                                            <ForwardRef(Grid)
                                              classes={
                                                Object {
                                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                  "container": "MuiGrid-container",
                                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                                  "grid-md-1": "MuiGrid-grid-md-1",
                                                  "grid-md-10": "MuiGrid-grid-md-10",
                                                  "grid-md-11": "MuiGrid-grid-md-11",
                                                  "grid-md-12": "MuiGrid-grid-md-12",
                                                  "grid-md-2": "MuiGrid-grid-md-2",
                                                  "grid-md-3": "MuiGrid-grid-md-3",
                                                  "grid-md-4": "MuiGrid-grid-md-4",
                                                  "grid-md-5": "MuiGrid-grid-md-5",
                                                  "grid-md-6": "MuiGrid-grid-md-6",
                                                  "grid-md-7": "MuiGrid-grid-md-7",
                                                  "grid-md-8": "MuiGrid-grid-md-8",
                                                  "grid-md-9": "MuiGrid-grid-md-9",
                                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                                  "grid-md-true": "MuiGrid-grid-md-true",
                                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                                  "item": "MuiGrid-item",
                                                  "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                                  "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                                  "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                                  "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                                  "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                                  "root": "MuiGrid-root",
                                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                }
                                              }
                                              container={true}
                                              spacing={2}
                                            >
                                              <div
                                                className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                                              >
                                                <WithStyles(ForwardRef(Grid))
                                                  item={true}
                                                  xs={7}
                                                >
                                                  <ForwardRef(Grid)
                                                    classes={
                                                      Object {
                                                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                        "container": "MuiGrid-container",
                                                        "direction-xs-column": "MuiGrid-direction-xs-column",
                                                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                        "grid-lg-1": "MuiGrid-grid-lg-1",
                                                        "grid-lg-10": "MuiGrid-grid-lg-10",
                                                        "grid-lg-11": "MuiGrid-grid-lg-11",
                                                        "grid-lg-12": "MuiGrid-grid-lg-12",
                                                        "grid-lg-2": "MuiGrid-grid-lg-2",
                                                        "grid-lg-3": "MuiGrid-grid-lg-3",
                                                        "grid-lg-4": "MuiGrid-grid-lg-4",
                                                        "grid-lg-5": "MuiGrid-grid-lg-5",
                                                        "grid-lg-6": "MuiGrid-grid-lg-6",
                                                        "grid-lg-7": "MuiGrid-grid-lg-7",
                                                        "grid-lg-8": "MuiGrid-grid-lg-8",
                                                        "grid-lg-9": "MuiGrid-grid-lg-9",
                                                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                        "grid-lg-true": "MuiGrid-grid-lg-true",
                                                        "grid-md-1": "MuiGrid-grid-md-1",
                                                        "grid-md-10": "MuiGrid-grid-md-10",
                                                        "grid-md-11": "MuiGrid-grid-md-11",
                                                        "grid-md-12": "MuiGrid-grid-md-12",
                                                        "grid-md-2": "MuiGrid-grid-md-2",
                                                        "grid-md-3": "MuiGrid-grid-md-3",
                                                        "grid-md-4": "MuiGrid-grid-md-4",
                                                        "grid-md-5": "MuiGrid-grid-md-5",
                                                        "grid-md-6": "MuiGrid-grid-md-6",
                                                        "grid-md-7": "MuiGrid-grid-md-7",
                                                        "grid-md-8": "MuiGrid-grid-md-8",
                                                        "grid-md-9": "MuiGrid-grid-md-9",
                                                        "grid-md-auto": "MuiGrid-grid-md-auto",
                                                        "grid-md-true": "MuiGrid-grid-md-true",
                                                        "grid-sm-1": "MuiGrid-grid-sm-1",
                                                        "grid-sm-10": "MuiGrid-grid-sm-10",
                                                        "grid-sm-11": "MuiGrid-grid-sm-11",
                                                        "grid-sm-12": "MuiGrid-grid-sm-12",
                                                        "grid-sm-2": "MuiGrid-grid-sm-2",
                                                        "grid-sm-3": "MuiGrid-grid-sm-3",
                                                        "grid-sm-4": "MuiGrid-grid-sm-4",
                                                        "grid-sm-5": "MuiGrid-grid-sm-5",
                                                        "grid-sm-6": "MuiGrid-grid-sm-6",
                                                        "grid-sm-7": "MuiGrid-grid-sm-7",
                                                        "grid-sm-8": "MuiGrid-grid-sm-8",
                                                        "grid-sm-9": "MuiGrid-grid-sm-9",
                                                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                        "grid-sm-true": "MuiGrid-grid-sm-true",
                                                        "grid-xl-1": "MuiGrid-grid-xl-1",
                                                        "grid-xl-10": "MuiGrid-grid-xl-10",
                                                        "grid-xl-11": "MuiGrid-grid-xl-11",
                                                        "grid-xl-12": "MuiGrid-grid-xl-12",
                                                        "grid-xl-2": "MuiGrid-grid-xl-2",
                                                        "grid-xl-3": "MuiGrid-grid-xl-3",
                                                        "grid-xl-4": "MuiGrid-grid-xl-4",
                                                        "grid-xl-5": "MuiGrid-grid-xl-5",
                                                        "grid-xl-6": "MuiGrid-grid-xl-6",
                                                        "grid-xl-7": "MuiGrid-grid-xl-7",
                                                        "grid-xl-8": "MuiGrid-grid-xl-8",
                                                        "grid-xl-9": "MuiGrid-grid-xl-9",
                                                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                        "grid-xl-true": "MuiGrid-grid-xl-true",
                                                        "grid-xs-1": "MuiGrid-grid-xs-1",
                                                        "grid-xs-10": "MuiGrid-grid-xs-10",
                                                        "grid-xs-11": "MuiGrid-grid-xs-11",
                                                        "grid-xs-12": "MuiGrid-grid-xs-12",
                                                        "grid-xs-2": "MuiGrid-grid-xs-2",
                                                        "grid-xs-3": "MuiGrid-grid-xs-3",
                                                        "grid-xs-4": "MuiGrid-grid-xs-4",
                                                        "grid-xs-5": "MuiGrid-grid-xs-5",
                                                        "grid-xs-6": "MuiGrid-grid-xs-6",
                                                        "grid-xs-7": "MuiGrid-grid-xs-7",
                                                        "grid-xs-8": "MuiGrid-grid-xs-8",
                                                        "grid-xs-9": "MuiGrid-grid-xs-9",
                                                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                        "grid-xs-true": "MuiGrid-grid-xs-true",
                                                        "item": "MuiGrid-item",
                                                        "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                                        "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                                        "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                                        "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                                        "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                                        "root": "MuiGrid-root",
                                                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                      }
                                                    }
                                                    item={true}
                                                    xs={7}
                                                  >
                                                    <div
                                                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-7"
                                                    >
                                                      <WithStyles(ForwardRef(FormControl))
                                                        fullWidth={true}
                                                      >
                                                        <ForwardRef(FormControl)
                                                          classes={
                                                            Object {
                                                              "fullWidth": "MuiFormControl-fullWidth",
                                                              "marginDense": "MuiFormControl-marginDense",
                                                              "marginNormal": "MuiFormControl-marginNormal",
                                                              "root": "MuiFormControl-root",
                                                            }
                                                          }
                                                          fullWidth={true}
                                                        >
                                                          <div
                                                            className="MuiFormControl-root MuiFormControl-fullWidth"
                                                          >
                                                            <WithStyles(ForwardRef(Input))
                                                              className="select-input input"
                                                              name="price"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              placeholder=""
                                                              startAdornment={
                                                                <WithStyles(ForwardRef(InputAdornment))
                                                                  position="start"
                                                                >
                                                                  <img
                                                                    alt=""
                                                                    src={
                                                                      Object {
                                                                        "testUri": "../../../packages/blocks/TaskAllocator/assets/price.png",
                                                                      }
                                                                    }
                                                                  />
                                                                </WithStyles(ForwardRef(InputAdornment))>
                                                              }
                                                              value=""
                                                            >
                                                              <ForwardRef(Input)
                                                                className="select-input input"
                                                                classes={
                                                                  Object {
                                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "formControl": "MuiInput-formControl",
                                                                    "fullWidth": "MuiInput-fullWidth",
                                                                    "input": "MuiInput-input",
                                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                    "marginDense": "MuiInput-marginDense",
                                                                    "multiline": "MuiInput-multiline",
                                                                    "root": "MuiInput-root",
                                                                    "underline": "MuiInput-underline",
                                                                  }
                                                                }
                                                                name="price"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                placeholder=""
                                                                startAdornment={
                                                                  <WithStyles(ForwardRef(InputAdornment))
                                                                    position="start"
                                                                  >
                                                                    <img
                                                                      alt=""
                                                                      src={
                                                                        Object {
                                                                          "testUri": "../../../packages/blocks/TaskAllocator/assets/price.png",
                                                                        }
                                                                      }
                                                                    />
                                                                  </WithStyles(ForwardRef(InputAdornment))>
                                                                }
                                                                value=""
                                                              >
                                                                <WithStyles(ForwardRef(InputBase))
                                                                  className="select-input input"
                                                                  classes={
                                                                    Object {
                                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInput-formControl",
                                                                      "fullWidth": "MuiInput-fullWidth",
                                                                      "input": "MuiInput-input",
                                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInput-marginDense",
                                                                      "multiline": "MuiInput-multiline",
                                                                      "root": "MuiInput-root MuiInput-underline",
                                                                      "underline": null,
                                                                    }
                                                                  }
                                                                  fullWidth={false}
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="price"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  placeholder=""
                                                                  startAdornment={
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="start"
                                                                    >
                                                                      <img
                                                                        alt=""
                                                                        src={
                                                                          Object {
                                                                            "testUri": "../../../packages/blocks/TaskAllocator/assets/price.png",
                                                                          }
                                                                        }
                                                                      />
                                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                                  }
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <ForwardRef(InputBase)
                                                                    className="select-input input"
                                                                    classes={
                                                                      Object {
                                                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                                                        "adornedStart": "MuiInputBase-adornedStart",
                                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                        "disabled": "Mui-disabled Mui-disabled",
                                                                        "error": "Mui-error Mui-error",
                                                                        "focused": "Mui-focused Mui-focused",
                                                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                        "input": "MuiInputBase-input MuiInput-input",
                                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                      }
                                                                    }
                                                                    fullWidth={false}
                                                                    inputComponent="input"
                                                                    multiline={false}
                                                                    name="price"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    placeholder=""
                                                                    startAdornment={
                                                                      <WithStyles(ForwardRef(InputAdornment))
                                                                        position="start"
                                                                      >
                                                                        <img
                                                                          alt=""
                                                                          src={
                                                                            Object {
                                                                              "testUri": "../../../packages/blocks/TaskAllocator/assets/price.png",
                                                                            }
                                                                          }
                                                                        />
                                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                                    }
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <div
                                                                      className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <WithStyles(ForwardRef(InputAdornment))
                                                                        position="start"
                                                                      >
                                                                        <ForwardRef(InputAdornment)
                                                                          classes={
                                                                            Object {
                                                                              "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                              "filled": "MuiInputAdornment-filled",
                                                                              "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                              "marginDense": "MuiInputAdornment-marginDense",
                                                                              "positionEnd": "MuiInputAdornment-positionEnd",
                                                                              "positionStart": "MuiInputAdornment-positionStart",
                                                                              "root": "MuiInputAdornment-root",
                                                                            }
                                                                          }
                                                                          position="start"
                                                                        >
                                                                          <div
                                                                            className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                                          >
                                                                            <img
                                                                              alt=""
                                                                              src={
                                                                                Object {
                                                                                  "testUri": "../../../packages/blocks/TaskAllocator/assets/price.png",
                                                                                }
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </ForwardRef(InputAdornment)>
                                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                                      <input
                                                                        aria-invalid={false}
                                                                        className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                                        disabled={false}
                                                                        name="price"
                                                                        onAnimationStart={[Function]}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        placeholder=""
                                                                        required={false}
                                                                        type="text"
                                                                        value=""
                                                                      />
                                                                    </div>
                                                                  </ForwardRef(InputBase)>
                                                                </WithStyles(ForwardRef(InputBase))>
                                                              </ForwardRef(Input)>
                                                            </WithStyles(ForwardRef(Input))>
                                                          </div>
                                                        </ForwardRef(FormControl)>
                                                      </WithStyles(ForwardRef(FormControl))>
                                                    </div>
                                                  </ForwardRef(Grid)>
                                                </WithStyles(ForwardRef(Grid))>
                                                <WithStyles(ForwardRef(Grid))
                                                  item={true}
                                                  xs={5}
                                                >
                                                  <ForwardRef(Grid)
                                                    classes={
                                                      Object {
                                                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                        "container": "MuiGrid-container",
                                                        "direction-xs-column": "MuiGrid-direction-xs-column",
                                                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                        "grid-lg-1": "MuiGrid-grid-lg-1",
                                                        "grid-lg-10": "MuiGrid-grid-lg-10",
                                                        "grid-lg-11": "MuiGrid-grid-lg-11",
                                                        "grid-lg-12": "MuiGrid-grid-lg-12",
                                                        "grid-lg-2": "MuiGrid-grid-lg-2",
                                                        "grid-lg-3": "MuiGrid-grid-lg-3",
                                                        "grid-lg-4": "MuiGrid-grid-lg-4",
                                                        "grid-lg-5": "MuiGrid-grid-lg-5",
                                                        "grid-lg-6": "MuiGrid-grid-lg-6",
                                                        "grid-lg-7": "MuiGrid-grid-lg-7",
                                                        "grid-lg-8": "MuiGrid-grid-lg-8",
                                                        "grid-lg-9": "MuiGrid-grid-lg-9",
                                                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                        "grid-lg-true": "MuiGrid-grid-lg-true",
                                                        "grid-md-1": "MuiGrid-grid-md-1",
                                                        "grid-md-10": "MuiGrid-grid-md-10",
                                                        "grid-md-11": "MuiGrid-grid-md-11",
                                                        "grid-md-12": "MuiGrid-grid-md-12",
                                                        "grid-md-2": "MuiGrid-grid-md-2",
                                                        "grid-md-3": "MuiGrid-grid-md-3",
                                                        "grid-md-4": "MuiGrid-grid-md-4",
                                                        "grid-md-5": "MuiGrid-grid-md-5",
                                                        "grid-md-6": "MuiGrid-grid-md-6",
                                                        "grid-md-7": "MuiGrid-grid-md-7",
                                                        "grid-md-8": "MuiGrid-grid-md-8",
                                                        "grid-md-9": "MuiGrid-grid-md-9",
                                                        "grid-md-auto": "MuiGrid-grid-md-auto",
                                                        "grid-md-true": "MuiGrid-grid-md-true",
                                                        "grid-sm-1": "MuiGrid-grid-sm-1",
                                                        "grid-sm-10": "MuiGrid-grid-sm-10",
                                                        "grid-sm-11": "MuiGrid-grid-sm-11",
                                                        "grid-sm-12": "MuiGrid-grid-sm-12",
                                                        "grid-sm-2": "MuiGrid-grid-sm-2",
                                                        "grid-sm-3": "MuiGrid-grid-sm-3",
                                                        "grid-sm-4": "MuiGrid-grid-sm-4",
                                                        "grid-sm-5": "MuiGrid-grid-sm-5",
                                                        "grid-sm-6": "MuiGrid-grid-sm-6",
                                                        "grid-sm-7": "MuiGrid-grid-sm-7",
                                                        "grid-sm-8": "MuiGrid-grid-sm-8",
                                                        "grid-sm-9": "MuiGrid-grid-sm-9",
                                                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                        "grid-sm-true": "MuiGrid-grid-sm-true",
                                                        "grid-xl-1": "MuiGrid-grid-xl-1",
                                                        "grid-xl-10": "MuiGrid-grid-xl-10",
                                                        "grid-xl-11": "MuiGrid-grid-xl-11",
                                                        "grid-xl-12": "MuiGrid-grid-xl-12",
                                                        "grid-xl-2": "MuiGrid-grid-xl-2",
                                                        "grid-xl-3": "MuiGrid-grid-xl-3",
                                                        "grid-xl-4": "MuiGrid-grid-xl-4",
                                                        "grid-xl-5": "MuiGrid-grid-xl-5",
                                                        "grid-xl-6": "MuiGrid-grid-xl-6",
                                                        "grid-xl-7": "MuiGrid-grid-xl-7",
                                                        "grid-xl-8": "MuiGrid-grid-xl-8",
                                                        "grid-xl-9": "MuiGrid-grid-xl-9",
                                                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                        "grid-xl-true": "MuiGrid-grid-xl-true",
                                                        "grid-xs-1": "MuiGrid-grid-xs-1",
                                                        "grid-xs-10": "MuiGrid-grid-xs-10",
                                                        "grid-xs-11": "MuiGrid-grid-xs-11",
                                                        "grid-xs-12": "MuiGrid-grid-xs-12",
                                                        "grid-xs-2": "MuiGrid-grid-xs-2",
                                                        "grid-xs-3": "MuiGrid-grid-xs-3",
                                                        "grid-xs-4": "MuiGrid-grid-xs-4",
                                                        "grid-xs-5": "MuiGrid-grid-xs-5",
                                                        "grid-xs-6": "MuiGrid-grid-xs-6",
                                                        "grid-xs-7": "MuiGrid-grid-xs-7",
                                                        "grid-xs-8": "MuiGrid-grid-xs-8",
                                                        "grid-xs-9": "MuiGrid-grid-xs-9",
                                                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                        "grid-xs-true": "MuiGrid-grid-xs-true",
                                                        "item": "MuiGrid-item",
                                                        "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                                        "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                                        "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                                        "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                                        "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                                        "root": "MuiGrid-root",
                                                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                      }
                                                    }
                                                    item={true}
                                                    xs={5}
                                                  >
                                                    <div
                                                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-5"
                                                    >
                                                      <WithStyles(ForwardRef(FormControl))
                                                        fullWidth={true}
                                                      >
                                                        <ForwardRef(FormControl)
                                                          classes={
                                                            Object {
                                                              "fullWidth": "MuiFormControl-fullWidth",
                                                              "marginDense": "MuiFormControl-marginDense",
                                                              "marginNormal": "MuiFormControl-marginNormal",
                                                              "root": "MuiFormControl-root",
                                                            }
                                                          }
                                                          fullWidth={true}
                                                        >
                                                          <div
                                                            className="MuiFormControl-root MuiFormControl-fullWidth"
                                                          >
                                                            <WithStyles(ForwardRef(Input))
                                                              className="select-input input"
                                                              name="date"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              placeholder=""
                                                              startAdornment={
                                                                <WithStyles(ForwardRef(InputAdornment))
                                                                  position="start"
                                                                >
                                                                  <img
                                                                    alt=""
                                                                    src={
                                                                      Object {
                                                                        "testUri": "../../../packages/blocks/TaskAllocator/assets/calender.png",
                                                                      }
                                                                    }
                                                                  />
                                                                </WithStyles(ForwardRef(InputAdornment))>
                                                              }
                                                              type="text"
                                                              value=""
                                                            >
                                                              <ForwardRef(Input)
                                                                className="select-input input"
                                                                classes={
                                                                  Object {
                                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "formControl": "MuiInput-formControl",
                                                                    "fullWidth": "MuiInput-fullWidth",
                                                                    "input": "MuiInput-input",
                                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                    "marginDense": "MuiInput-marginDense",
                                                                    "multiline": "MuiInput-multiline",
                                                                    "root": "MuiInput-root",
                                                                    "underline": "MuiInput-underline",
                                                                  }
                                                                }
                                                                name="date"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                placeholder=""
                                                                startAdornment={
                                                                  <WithStyles(ForwardRef(InputAdornment))
                                                                    position="start"
                                                                  >
                                                                    <img
                                                                      alt=""
                                                                      src={
                                                                        Object {
                                                                          "testUri": "../../../packages/blocks/TaskAllocator/assets/calender.png",
                                                                        }
                                                                      }
                                                                    />
                                                                  </WithStyles(ForwardRef(InputAdornment))>
                                                                }
                                                                type="text"
                                                                value=""
                                                              >
                                                                <WithStyles(ForwardRef(InputBase))
                                                                  className="select-input input"
                                                                  classes={
                                                                    Object {
                                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInput-formControl",
                                                                      "fullWidth": "MuiInput-fullWidth",
                                                                      "input": "MuiInput-input",
                                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInput-marginDense",
                                                                      "multiline": "MuiInput-multiline",
                                                                      "root": "MuiInput-root MuiInput-underline",
                                                                      "underline": null,
                                                                    }
                                                                  }
                                                                  fullWidth={false}
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="date"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  placeholder=""
                                                                  startAdornment={
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="start"
                                                                    >
                                                                      <img
                                                                        alt=""
                                                                        src={
                                                                          Object {
                                                                            "testUri": "../../../packages/blocks/TaskAllocator/assets/calender.png",
                                                                          }
                                                                        }
                                                                      />
                                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                                  }
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <ForwardRef(InputBase)
                                                                    className="select-input input"
                                                                    classes={
                                                                      Object {
                                                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                                                        "adornedStart": "MuiInputBase-adornedStart",
                                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                        "disabled": "Mui-disabled Mui-disabled",
                                                                        "error": "Mui-error Mui-error",
                                                                        "focused": "Mui-focused Mui-focused",
                                                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                        "input": "MuiInputBase-input MuiInput-input",
                                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                      }
                                                                    }
                                                                    fullWidth={false}
                                                                    inputComponent="input"
                                                                    multiline={false}
                                                                    name="date"
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    placeholder=""
                                                                    startAdornment={
                                                                      <WithStyles(ForwardRef(InputAdornment))
                                                                        position="start"
                                                                      >
                                                                        <img
                                                                          alt=""
                                                                          src={
                                                                            Object {
                                                                              "testUri": "../../../packages/blocks/TaskAllocator/assets/calender.png",
                                                                            }
                                                                          }
                                                                        />
                                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                                    }
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <div
                                                                      className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <WithStyles(ForwardRef(InputAdornment))
                                                                        position="start"
                                                                      >
                                                                        <ForwardRef(InputAdornment)
                                                                          classes={
                                                                            Object {
                                                                              "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                              "filled": "MuiInputAdornment-filled",
                                                                              "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                              "marginDense": "MuiInputAdornment-marginDense",
                                                                              "positionEnd": "MuiInputAdornment-positionEnd",
                                                                              "positionStart": "MuiInputAdornment-positionStart",
                                                                              "root": "MuiInputAdornment-root",
                                                                            }
                                                                          }
                                                                          position="start"
                                                                        >
                                                                          <div
                                                                            className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                                          >
                                                                            <img
                                                                              alt=""
                                                                              src={
                                                                                Object {
                                                                                  "testUri": "../../../packages/blocks/TaskAllocator/assets/calender.png",
                                                                                }
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </ForwardRef(InputAdornment)>
                                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                                      <input
                                                                        aria-invalid={false}
                                                                        className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                                        disabled={false}
                                                                        name="date"
                                                                        onAnimationStart={[Function]}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        placeholder=""
                                                                        required={false}
                                                                        type="text"
                                                                        value=""
                                                                      />
                                                                    </div>
                                                                  </ForwardRef(InputBase)>
                                                                </WithStyles(ForwardRef(InputBase))>
                                                              </ForwardRef(Input)>
                                                            </WithStyles(ForwardRef(Input))>
                                                          </div>
                                                        </ForwardRef(FormControl)>
                                                      </WithStyles(ForwardRef(FormControl))>
                                                    </div>
                                                  </ForwardRef(Grid)>
                                                </WithStyles(ForwardRef(Grid))>
                                              </div>
                                            </ForwardRef(Grid)>
                                          </WithStyles(ForwardRef(Grid))>
                                          <h4
                                            style={
                                              Object {
                                                "marginTop": "18px",
                                              }
                                            }
                                          />
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <ForwardRef(RadioGroup)
                                                  className="type-radio-select"
                                                  name="type"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  value="Rented"
                                                >
                                                  <WithStyles(ForwardRef(FormGroup))
                                                    className="type-radio-select"
                                                    onBlur={[Function]}
                                                    role="radiogroup"
                                                  >
                                                    <ForwardRef(FormGroup)
                                                      className="type-radio-select"
                                                      classes={
                                                        Object {
                                                          "root": "MuiFormGroup-root",
                                                          "row": "MuiFormGroup-row",
                                                        }
                                                      }
                                                      onBlur={[Function]}
                                                      role="radiogroup"
                                                    >
                                                      <div
                                                        className="MuiFormGroup-root type-radio-select"
                                                        onBlur={[Function]}
                                                        role="radiogroup"
                                                      >
                                                        <WithStyles(ForwardRef(FormControlLabel))
                                                          className="rented"
                                                          control={<WithStyles(ForwardRef(Radio)) />}
                                                          label=""
                                                          value="Rented"
                                                        >
                                                          <ForwardRef(FormControlLabel)
                                                            className="rented"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "label": "MuiFormControlLabel-label",
                                                                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                                                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                                                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                                                "root": "MuiFormControlLabel-root",
                                                              }
                                                            }
                                                            control={<WithStyles(ForwardRef(Radio)) />}
                                                            label=""
                                                            value="Rented"
                                                          >
                                                            <label
                                                              className="MuiFormControlLabel-root rented"
                                                            >
                                                              <WithStyles(ForwardRef(Radio))
                                                                disabled={false}
                                                                value="Rented"
                                                              >
                                                                <ForwardRef(Radio)
                                                                  classes={
                                                                    Object {
                                                                      "checked": "Mui-checked",
                                                                      "colorPrimary": "MuiRadio-colorPrimary",
                                                                      "colorSecondary": "MuiRadio-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "root": "MuiRadio-root",
                                                                    }
                                                                  }
                                                                  disabled={false}
                                                                  value="Rented"
                                                                >
                                                                  <WithStyles(ForwardRef(SwitchBase))
                                                                    checked={true}
                                                                    checkedIcon={
                                                                      <WithStyles(RadioButtonIcon)
                                                                        checked={true}
                                                                        fontSize="medium"
                                                                      />
                                                                    }
                                                                    classes={
                                                                      Object {
                                                                        "checked": "Mui-checked",
                                                                        "disabled": "Mui-disabled",
                                                                        "root": "MuiRadio-root MuiRadio-colorSecondary",
                                                                      }
                                                                    }
                                                                    color="secondary"
                                                                    disabled={false}
                                                                    icon={
                                                                      <WithStyles(RadioButtonIcon)
                                                                        fontSize="medium"
                                                                      />
                                                                    }
                                                                    name="type"
                                                                    onChange={[Function]}
                                                                    type="radio"
                                                                    value="Rented"
                                                                  >
                                                                    <ForwardRef(SwitchBase)
                                                                      checked={true}
                                                                      checkedIcon={
                                                                        <WithStyles(RadioButtonIcon)
                                                                          checked={true}
                                                                          fontSize="medium"
                                                                        />
                                                                      }
                                                                      classes={
                                                                        Object {
                                                                          "checked": "PrivateSwitchBase-checked-8 Mui-checked",
                                                                          "disabled": "PrivateSwitchBase-disabled-9 Mui-disabled",
                                                                          "input": "PrivateSwitchBase-input-10",
                                                                          "root": "PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorSecondary",
                                                                        }
                                                                      }
                                                                      color="secondary"
                                                                      disabled={false}
                                                                      icon={
                                                                        <WithStyles(RadioButtonIcon)
                                                                          fontSize="medium"
                                                                        />
                                                                      }
                                                                      name="type"
                                                                      onChange={[Function]}
                                                                      type="radio"
                                                                      value="Rented"
                                                                    >
                                                                      <WithStyles(ForwardRef(IconButton))
                                                                        className="PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorSecondary PrivateSwitchBase-checked-8 Mui-checked"
                                                                        color="secondary"
                                                                        component="span"
                                                                        disabled={false}
                                                                        onBlur={[Function]}
                                                                        onFocus={[Function]}
                                                                        tabIndex={null}
                                                                      >
                                                                        <ForwardRef(IconButton)
                                                                          className="PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorSecondary PrivateSwitchBase-checked-8 Mui-checked"
                                                                          classes={
                                                                            Object {
                                                                              "colorInherit": "MuiIconButton-colorInherit",
                                                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                                                              "disabled": "Mui-disabled",
                                                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                                                              "edgeStart": "MuiIconButton-edgeStart",
                                                                              "label": "MuiIconButton-label",
                                                                              "root": "MuiIconButton-root",
                                                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                                                            }
                                                                          }
                                                                          color="secondary"
                                                                          component="span"
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onFocus={[Function]}
                                                                          tabIndex={null}
                                                                        >
                                                                          <WithStyles(ForwardRef(ButtonBase))
                                                                            centerRipple={true}
                                                                            className="MuiIconButton-root PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorSecondary PrivateSwitchBase-checked-8 Mui-checked MuiIconButton-colorSecondary"
                                                                            component="span"
                                                                            disabled={false}
                                                                            focusRipple={true}
                                                                            onBlur={[Function]}
                                                                            onFocus={[Function]}
                                                                            tabIndex={null}
                                                                          >
                                                                            <ForwardRef(ButtonBase)
                                                                              centerRipple={true}
                                                                              className="MuiIconButton-root PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorSecondary PrivateSwitchBase-checked-8 Mui-checked MuiIconButton-colorSecondary"
                                                                              classes={
                                                                                Object {
                                                                                  "disabled": "Mui-disabled",
                                                                                  "focusVisible": "Mui-focusVisible",
                                                                                  "root": "MuiButtonBase-root",
                                                                                }
                                                                              }
                                                                              component="span"
                                                                              disabled={false}
                                                                              focusRipple={true}
                                                                              onBlur={[Function]}
                                                                              onFocus={[Function]}
                                                                              tabIndex={null}
                                                                            >
                                                                              <span
                                                                                aria-disabled={false}
                                                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorSecondary PrivateSwitchBase-checked-8 Mui-checked MuiIconButton-colorSecondary"
                                                                                onBlur={[Function]}
                                                                                onDragLeave={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                onMouseUp={[Function]}
                                                                                onTouchEnd={[Function]}
                                                                                onTouchMove={[Function]}
                                                                                onTouchStart={[Function]}
                                                                                tabIndex={null}
                                                                              >
                                                                                <span
                                                                                  className="MuiIconButton-label"
                                                                                >
                                                                                  <input
                                                                                    checked={true}
                                                                                    className="PrivateSwitchBase-input-10"
                                                                                    disabled={false}
                                                                                    name="type"
                                                                                    onChange={[Function]}
                                                                                    type="radio"
                                                                                    value="Rented"
                                                                                  />
                                                                                  <WithStyles(RadioButtonIcon)
                                                                                    checked={true}
                                                                                    fontSize="medium"
                                                                                  >
                                                                                    <RadioButtonIcon
                                                                                      checked={true}
                                                                                      classes={
                                                                                        Object {
                                                                                          "checked": "PrivateRadioButtonIcon-checked-13",
                                                                                          "layer": "PrivateRadioButtonIcon-layer-12",
                                                                                          "root": "PrivateRadioButtonIcon-root-11",
                                                                                        }
                                                                                      }
                                                                                      fontSize="medium"
                                                                                    >
                                                                                      <div
                                                                                        className="PrivateRadioButtonIcon-root-11 PrivateRadioButtonIcon-checked-13"
                                                                                      >
                                                                                        <ForwardRef(RadioButtonUncheckedIcon)
                                                                                          fontSize="medium"
                                                                                        >
                                                                                          <WithStyles(ForwardRef(SvgIcon))
                                                                                            fontSize="medium"
                                                                                          >
                                                                                            <ForwardRef(SvgIcon)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                  "root": "MuiSvgIcon-root",
                                                                                                }
                                                                                              }
                                                                                              fontSize="medium"
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden={true}
                                                                                                className="MuiSvgIcon-root"
                                                                                                focusable="false"
                                                                                                viewBox="0 0 24 24"
                                                                                              >
                                                                                                <path
                                                                                                  d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                                                                                />
                                                                                              </svg>
                                                                                            </ForwardRef(SvgIcon)>
                                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                                        </ForwardRef(RadioButtonUncheckedIcon)>
                                                                                        <ForwardRef(RadioButtonCheckedIcon)
                                                                                          className="PrivateRadioButtonIcon-layer-12"
                                                                                          fontSize="medium"
                                                                                        >
                                                                                          <WithStyles(ForwardRef(SvgIcon))
                                                                                            className="PrivateRadioButtonIcon-layer-12"
                                                                                            fontSize="medium"
                                                                                          >
                                                                                            <ForwardRef(SvgIcon)
                                                                                              className="PrivateRadioButtonIcon-layer-12"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                  "root": "MuiSvgIcon-root",
                                                                                                }
                                                                                              }
                                                                                              fontSize="medium"
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden={true}
                                                                                                className="MuiSvgIcon-root PrivateRadioButtonIcon-layer-12"
                                                                                                focusable="false"
                                                                                                viewBox="0 0 24 24"
                                                                                              >
                                                                                                <path
                                                                                                  d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
                                                                                                />
                                                                                              </svg>
                                                                                            </ForwardRef(SvgIcon)>
                                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                                        </ForwardRef(RadioButtonCheckedIcon)>
                                                                                      </div>
                                                                                    </RadioButtonIcon>
                                                                                  </WithStyles(RadioButtonIcon)>
                                                                                </span>
                                                                                <WithStyles(memo)
                                                                                  center={true}
                                                                                >
                                                                                  <ForwardRef(TouchRipple)
                                                                                    center={true}
                                                                                    classes={
                                                                                      Object {
                                                                                        "child": "MuiTouchRipple-child",
                                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                        "root": "MuiTouchRipple-root",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <span
                                                                                      className="MuiTouchRipple-root"
                                                                                    >
                                                                                      <TransitionGroup
                                                                                        childFactory={[Function]}
                                                                                        component={null}
                                                                                        exit={true}
                                                                                      />
                                                                                    </span>
                                                                                  </ForwardRef(TouchRipple)>
                                                                                </WithStyles(memo)>
                                                                              </span>
                                                                            </ForwardRef(ButtonBase)>
                                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                                        </ForwardRef(IconButton)>
                                                                      </WithStyles(ForwardRef(IconButton))>
                                                                    </ForwardRef(SwitchBase)>
                                                                  </WithStyles(ForwardRef(SwitchBase))>
                                                                </ForwardRef(Radio)>
                                                              </WithStyles(ForwardRef(Radio))>
                                                              <WithStyles(ForwardRef(Typography))
                                                                className="MuiFormControlLabel-label"
                                                                component="span"
                                                              >
                                                                <ForwardRef(Typography)
                                                                  className="MuiFormControlLabel-label"
                                                                  classes={
                                                                    Object {
                                                                      "alignCenter": "MuiTypography-alignCenter",
                                                                      "alignJustify": "MuiTypography-alignJustify",
                                                                      "alignLeft": "MuiTypography-alignLeft",
                                                                      "alignRight": "MuiTypography-alignRight",
                                                                      "body1": "MuiTypography-body1",
                                                                      "body2": "MuiTypography-body2",
                                                                      "button": "MuiTypography-button",
                                                                      "caption": "MuiTypography-caption",
                                                                      "colorError": "MuiTypography-colorError",
                                                                      "colorInherit": "MuiTypography-colorInherit",
                                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                      "displayBlock": "MuiTypography-displayBlock",
                                                                      "displayInline": "MuiTypography-displayInline",
                                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                                      "h1": "MuiTypography-h1",
                                                                      "h2": "MuiTypography-h2",
                                                                      "h3": "MuiTypography-h3",
                                                                      "h4": "MuiTypography-h4",
                                                                      "h5": "MuiTypography-h5",
                                                                      "h6": "MuiTypography-h6",
                                                                      "noWrap": "MuiTypography-noWrap",
                                                                      "overline": "MuiTypography-overline",
                                                                      "paragraph": "MuiTypography-paragraph",
                                                                      "root": "MuiTypography-root",
                                                                      "srOnly": "MuiTypography-srOnly",
                                                                      "subtitle1": "MuiTypography-subtitle1",
                                                                      "subtitle2": "MuiTypography-subtitle2",
                                                                    }
                                                                  }
                                                                  component="span"
                                                                >
                                                                  <span
                                                                    className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                                                  />
                                                                </ForwardRef(Typography)>
                                                              </WithStyles(ForwardRef(Typography))>
                                                            </label>
                                                          </ForwardRef(FormControlLabel)>
                                                        </WithStyles(ForwardRef(FormControlLabel))>
                                                        <WithStyles(ForwardRef(FormControlLabel))
                                                          className="non-rented"
                                                          control={<WithStyles(ForwardRef(Radio)) />}
                                                          label=""
                                                          value="Non-Rented"
                                                        >
                                                          <ForwardRef(FormControlLabel)
                                                            className="non-rented"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "label": "MuiFormControlLabel-label",
                                                                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                                                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                                                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                                                "root": "MuiFormControlLabel-root",
                                                              }
                                                            }
                                                            control={<WithStyles(ForwardRef(Radio)) />}
                                                            label=""
                                                            value="Non-Rented"
                                                          >
                                                            <label
                                                              className="MuiFormControlLabel-root non-rented"
                                                            >
                                                              <WithStyles(ForwardRef(Radio))
                                                                disabled={false}
                                                                value="Non-Rented"
                                                              >
                                                                <ForwardRef(Radio)
                                                                  classes={
                                                                    Object {
                                                                      "checked": "Mui-checked",
                                                                      "colorPrimary": "MuiRadio-colorPrimary",
                                                                      "colorSecondary": "MuiRadio-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "root": "MuiRadio-root",
                                                                    }
                                                                  }
                                                                  disabled={false}
                                                                  value="Non-Rented"
                                                                >
                                                                  <WithStyles(ForwardRef(SwitchBase))
                                                                    checked={false}
                                                                    checkedIcon={
                                                                      <WithStyles(RadioButtonIcon)
                                                                        checked={true}
                                                                        fontSize="medium"
                                                                      />
                                                                    }
                                                                    classes={
                                                                      Object {
                                                                        "checked": "Mui-checked",
                                                                        "disabled": "Mui-disabled",
                                                                        "root": "MuiRadio-root MuiRadio-colorSecondary",
                                                                      }
                                                                    }
                                                                    color="secondary"
                                                                    disabled={false}
                                                                    icon={
                                                                      <WithStyles(RadioButtonIcon)
                                                                        fontSize="medium"
                                                                      />
                                                                    }
                                                                    name="type"
                                                                    onChange={[Function]}
                                                                    type="radio"
                                                                    value="Non-Rented"
                                                                  >
                                                                    <ForwardRef(SwitchBase)
                                                                      checked={false}
                                                                      checkedIcon={
                                                                        <WithStyles(RadioButtonIcon)
                                                                          checked={true}
                                                                          fontSize="medium"
                                                                        />
                                                                      }
                                                                      classes={
                                                                        Object {
                                                                          "checked": "PrivateSwitchBase-checked-8 Mui-checked",
                                                                          "disabled": "PrivateSwitchBase-disabled-9 Mui-disabled",
                                                                          "input": "PrivateSwitchBase-input-10",
                                                                          "root": "PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorSecondary",
                                                                        }
                                                                      }
                                                                      color="secondary"
                                                                      disabled={false}
                                                                      icon={
                                                                        <WithStyles(RadioButtonIcon)
                                                                          fontSize="medium"
                                                                        />
                                                                      }
                                                                      name="type"
                                                                      onChange={[Function]}
                                                                      type="radio"
                                                                      value="Non-Rented"
                                                                    >
                                                                      <WithStyles(ForwardRef(IconButton))
                                                                        className="PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorSecondary"
                                                                        color="secondary"
                                                                        component="span"
                                                                        disabled={false}
                                                                        onBlur={[Function]}
                                                                        onFocus={[Function]}
                                                                        tabIndex={null}
                                                                      >
                                                                        <ForwardRef(IconButton)
                                                                          className="PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorSecondary"
                                                                          classes={
                                                                            Object {
                                                                              "colorInherit": "MuiIconButton-colorInherit",
                                                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                                                              "disabled": "Mui-disabled",
                                                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                                                              "edgeStart": "MuiIconButton-edgeStart",
                                                                              "label": "MuiIconButton-label",
                                                                              "root": "MuiIconButton-root",
                                                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                                                            }
                                                                          }
                                                                          color="secondary"
                                                                          component="span"
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onFocus={[Function]}
                                                                          tabIndex={null}
                                                                        >
                                                                          <WithStyles(ForwardRef(ButtonBase))
                                                                            centerRipple={true}
                                                                            className="MuiIconButton-root PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                                            component="span"
                                                                            disabled={false}
                                                                            focusRipple={true}
                                                                            onBlur={[Function]}
                                                                            onFocus={[Function]}
                                                                            tabIndex={null}
                                                                          >
                                                                            <ForwardRef(ButtonBase)
                                                                              centerRipple={true}
                                                                              className="MuiIconButton-root PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                                              classes={
                                                                                Object {
                                                                                  "disabled": "Mui-disabled",
                                                                                  "focusVisible": "Mui-focusVisible",
                                                                                  "root": "MuiButtonBase-root",
                                                                                }
                                                                              }
                                                                              component="span"
                                                                              disabled={false}
                                                                              focusRipple={true}
                                                                              onBlur={[Function]}
                                                                              onFocus={[Function]}
                                                                              tabIndex={null}
                                                                            >
                                                                              <span
                                                                                aria-disabled={false}
                                                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-7 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                                                onBlur={[Function]}
                                                                                onDragLeave={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                onMouseUp={[Function]}
                                                                                onTouchEnd={[Function]}
                                                                                onTouchMove={[Function]}
                                                                                onTouchStart={[Function]}
                                                                                tabIndex={null}
                                                                              >
                                                                                <span
                                                                                  className="MuiIconButton-label"
                                                                                >
                                                                                  <input
                                                                                    checked={false}
                                                                                    className="PrivateSwitchBase-input-10"
                                                                                    disabled={false}
                                                                                    name="type"
                                                                                    onChange={[Function]}
                                                                                    type="radio"
                                                                                    value="Non-Rented"
                                                                                  />
                                                                                  <WithStyles(RadioButtonIcon)
                                                                                    fontSize="medium"
                                                                                  >
                                                                                    <RadioButtonIcon
                                                                                      classes={
                                                                                        Object {
                                                                                          "checked": "PrivateRadioButtonIcon-checked-13",
                                                                                          "layer": "PrivateRadioButtonIcon-layer-12",
                                                                                          "root": "PrivateRadioButtonIcon-root-11",
                                                                                        }
                                                                                      }
                                                                                      fontSize="medium"
                                                                                    >
                                                                                      <div
                                                                                        className="PrivateRadioButtonIcon-root-11"
                                                                                      >
                                                                                        <ForwardRef(RadioButtonUncheckedIcon)
                                                                                          fontSize="medium"
                                                                                        >
                                                                                          <WithStyles(ForwardRef(SvgIcon))
                                                                                            fontSize="medium"
                                                                                          >
                                                                                            <ForwardRef(SvgIcon)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                  "root": "MuiSvgIcon-root",
                                                                                                }
                                                                                              }
                                                                                              fontSize="medium"
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden={true}
                                                                                                className="MuiSvgIcon-root"
                                                                                                focusable="false"
                                                                                                viewBox="0 0 24 24"
                                                                                              >
                                                                                                <path
                                                                                                  d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                                                                                />
                                                                                              </svg>
                                                                                            </ForwardRef(SvgIcon)>
                                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                                        </ForwardRef(RadioButtonUncheckedIcon)>
                                                                                        <ForwardRef(RadioButtonCheckedIcon)
                                                                                          className="PrivateRadioButtonIcon-layer-12"
                                                                                          fontSize="medium"
                                                                                        >
                                                                                          <WithStyles(ForwardRef(SvgIcon))
                                                                                            className="PrivateRadioButtonIcon-layer-12"
                                                                                            fontSize="medium"
                                                                                          >
                                                                                            <ForwardRef(SvgIcon)
                                                                                              className="PrivateRadioButtonIcon-layer-12"
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                  "root": "MuiSvgIcon-root",
                                                                                                }
                                                                                              }
                                                                                              fontSize="medium"
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden={true}
                                                                                                className="MuiSvgIcon-root PrivateRadioButtonIcon-layer-12"
                                                                                                focusable="false"
                                                                                                viewBox="0 0 24 24"
                                                                                              >
                                                                                                <path
                                                                                                  d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
                                                                                                />
                                                                                              </svg>
                                                                                            </ForwardRef(SvgIcon)>
                                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                                        </ForwardRef(RadioButtonCheckedIcon)>
                                                                                      </div>
                                                                                    </RadioButtonIcon>
                                                                                  </WithStyles(RadioButtonIcon)>
                                                                                </span>
                                                                                <WithStyles(memo)
                                                                                  center={true}
                                                                                >
                                                                                  <ForwardRef(TouchRipple)
                                                                                    center={true}
                                                                                    classes={
                                                                                      Object {
                                                                                        "child": "MuiTouchRipple-child",
                                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                        "root": "MuiTouchRipple-root",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <span
                                                                                      className="MuiTouchRipple-root"
                                                                                    >
                                                                                      <TransitionGroup
                                                                                        childFactory={[Function]}
                                                                                        component={null}
                                                                                        exit={true}
                                                                                      />
                                                                                    </span>
                                                                                  </ForwardRef(TouchRipple)>
                                                                                </WithStyles(memo)>
                                                                              </span>
                                                                            </ForwardRef(ButtonBase)>
                                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                                        </ForwardRef(IconButton)>
                                                                      </WithStyles(ForwardRef(IconButton))>
                                                                    </ForwardRef(SwitchBase)>
                                                                  </WithStyles(ForwardRef(SwitchBase))>
                                                                </ForwardRef(Radio)>
                                                              </WithStyles(ForwardRef(Radio))>
                                                              <WithStyles(ForwardRef(Typography))
                                                                className="MuiFormControlLabel-label"
                                                                component="span"
                                                              >
                                                                <ForwardRef(Typography)
                                                                  className="MuiFormControlLabel-label"
                                                                  classes={
                                                                    Object {
                                                                      "alignCenter": "MuiTypography-alignCenter",
                                                                      "alignJustify": "MuiTypography-alignJustify",
                                                                      "alignLeft": "MuiTypography-alignLeft",
                                                                      "alignRight": "MuiTypography-alignRight",
                                                                      "body1": "MuiTypography-body1",
                                                                      "body2": "MuiTypography-body2",
                                                                      "button": "MuiTypography-button",
                                                                      "caption": "MuiTypography-caption",
                                                                      "colorError": "MuiTypography-colorError",
                                                                      "colorInherit": "MuiTypography-colorInherit",
                                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                      "displayBlock": "MuiTypography-displayBlock",
                                                                      "displayInline": "MuiTypography-displayInline",
                                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                                      "h1": "MuiTypography-h1",
                                                                      "h2": "MuiTypography-h2",
                                                                      "h3": "MuiTypography-h3",
                                                                      "h4": "MuiTypography-h4",
                                                                      "h5": "MuiTypography-h5",
                                                                      "h6": "MuiTypography-h6",
                                                                      "noWrap": "MuiTypography-noWrap",
                                                                      "overline": "MuiTypography-overline",
                                                                      "paragraph": "MuiTypography-paragraph",
                                                                      "root": "MuiTypography-root",
                                                                      "srOnly": "MuiTypography-srOnly",
                                                                      "subtitle1": "MuiTypography-subtitle1",
                                                                      "subtitle2": "MuiTypography-subtitle2",
                                                                    }
                                                                  }
                                                                  component="span"
                                                                >
                                                                  <span
                                                                    className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                                                  />
                                                                </ForwardRef(Typography)>
                                                              </WithStyles(ForwardRef(Typography))>
                                                            </label>
                                                          </ForwardRef(FormControlLabel)>
                                                        </WithStyles(ForwardRef(FormControlLabel))>
                                                      </div>
                                                    </ForwardRef(FormGroup)>
                                                  </WithStyles(ForwardRef(FormGroup))>
                                                </ForwardRef(RadioGroup)>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <h4
                                            style={
                                              Object {
                                                "marginTop": "18px",
                                              }
                                            }
                                          />
                                          <WithStyles(ForwardRef(Button))
                                            className="add-rent-history-btn"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(Button)
                                              className="add-rent-history-btn"
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit",
                                                  "contained": "MuiButton-contained",
                                                  "containedPrimary": "MuiButton-containedPrimary",
                                                  "containedSecondary": "MuiButton-containedSecondary",
                                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                  "disableElevation": "MuiButton-disableElevation",
                                                  "disabled": "Mui-disabled",
                                                  "endIcon": "MuiButton-endIcon",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "fullWidth": "MuiButton-fullWidth",
                                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                  "label": "MuiButton-label",
                                                  "outlined": "MuiButton-outlined",
                                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                  "root": "MuiButton-root",
                                                  "sizeLarge": "MuiButton-sizeLarge",
                                                  "sizeSmall": "MuiButton-sizeSmall",
                                                  "startIcon": "MuiButton-startIcon",
                                                  "text": "MuiButton-text",
                                                  "textPrimary": "MuiButton-textPrimary",
                                                  "textSecondary": "MuiButton-textSecondary",
                                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                                }
                                              }
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiButton-root MuiButton-text add-rent-history-btn"
                                                component="button"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiButton-root MuiButton-text add-rent-history-btn"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="button"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <button
                                                    className="MuiButtonBase-root MuiButton-root MuiButton-text add-rent-history-btn"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label"
                                                    />
                                                    <WithStyles(memo)
                                                      center={false}
                                                    >
                                                      <ForwardRef(TouchRipple)
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "child": "MuiTouchRipple-child",
                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                            "ripple": "MuiTouchRipple-ripple",
                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                            "root": "MuiTouchRipple-root",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="MuiTouchRipple-root"
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            component={null}
                                                            exit={true}
                                                          />
                                                        </span>
                                                      </ForwardRef(TouchRipple)>
                                                    </WithStyles(memo)>
                                                  </button>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(Button)>
                                          </WithStyles(ForwardRef(Button))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="income"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/TaskAllocator/assets/rent-amount.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="income"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/TaskAllocator/assets/rent-amount.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="income"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/TaskAllocator/assets/rent-amount.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="income"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        placeholder=""
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/TaskAllocator/assets/rent-amount.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/TaskAllocator/assets/rent-amount.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="income"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <WithStyles(ForwardRef(FormControl))
                                            fullWidth={true}
                                          >
                                            <ForwardRef(FormControl)
                                              classes={
                                                Object {
                                                  "fullWidth": "MuiFormControl-fullWidth",
                                                  "marginDense": "MuiFormControl-marginDense",
                                                  "marginNormal": "MuiFormControl-marginNormal",
                                                  "root": "MuiFormControl-root",
                                                }
                                              }
                                              fullWidth={true}
                                            >
                                              <div
                                                className="MuiFormControl-root MuiFormControl-fullWidth"
                                              >
                                                <WithStyles(ForwardRef(Input))
                                                  className="select-input input"
                                                  name="valuation"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  placeholder=""
                                                  startAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="start"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/TaskAllocator/assets/valuation.png",
                                                          }
                                                        }
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  value=""
                                                >
                                                  <ForwardRef(Input)
                                                    className="select-input input"
                                                    classes={
                                                      Object {
                                                        "colorSecondary": "MuiInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "formControl": "MuiInput-formControl",
                                                        "fullWidth": "MuiInput-fullWidth",
                                                        "input": "MuiInput-input",
                                                        "inputMarginDense": "MuiInput-inputMarginDense",
                                                        "inputMultiline": "MuiInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                        "marginDense": "MuiInput-marginDense",
                                                        "multiline": "MuiInput-multiline",
                                                        "root": "MuiInput-root",
                                                        "underline": "MuiInput-underline",
                                                      }
                                                    }
                                                    name="valuation"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    placeholder=""
                                                    startAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="start"
                                                      >
                                                        <img
                                                          alt=""
                                                          src={
                                                            Object {
                                                              "testUri": "../../../packages/blocks/TaskAllocator/assets/valuation.png",
                                                            }
                                                          }
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    value=""
                                                  >
                                                    <WithStyles(ForwardRef(InputBase))
                                                      className="select-input input"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root MuiInput-underline",
                                                          "underline": null,
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent="input"
                                                      multiline={false}
                                                      name="valuation"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      placeholder=""
                                                      startAdornment={
                                                        <WithStyles(ForwardRef(InputAdornment))
                                                          position="start"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/TaskAllocator/assets/valuation.png",
                                                              }
                                                            }
                                                          />
                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                      }
                                                      type="text"
                                                      value=""
                                                    >
                                                      <ForwardRef(InputBase)
                                                        className="select-input input"
                                                        classes={
                                                          Object {
                                                            "adornedEnd": "MuiInputBase-adornedEnd",
                                                            "adornedStart": "MuiInputBase-adornedStart",
                                                            "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled Mui-disabled",
                                                            "error": "Mui-error Mui-error",
                                                            "focused": "Mui-focused Mui-focused",
                                                            "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                            "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                            "input": "MuiInputBase-input MuiInput-input",
                                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                            "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                            "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        inputComponent="input"
                                                        multiline={false}
                                                        name="valuation"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        placeholder=""
                                                        startAdornment={
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <img
                                                              alt=""
                                                              src={
                                                                Object {
                                                                  "testUri": "../../../packages/blocks/TaskAllocator/assets/valuation.png",
                                                                }
                                                              }
                                                            />
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                        }
                                                        type="text"
                                                        value=""
                                                      >
                                                        <div
                                                          className="MuiInputBase-root MuiInput-root MuiInput-underline select-input input MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
                                                          onClick={[Function]}
                                                        >
                                                          <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          >
                                                            <ForwardRef(InputAdornment)
                                                              classes={
                                                                Object {
                                                                  "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                  "filled": "MuiInputAdornment-filled",
                                                                  "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                  "marginDense": "MuiInputAdornment-marginDense",
                                                                  "positionEnd": "MuiInputAdornment-positionEnd",
                                                                  "positionStart": "MuiInputAdornment-positionStart",
                                                                  "root": "MuiInputAdornment-root",
                                                                }
                                                              }
                                                              position="start"
                                                            >
                                                              <div
                                                                className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/TaskAllocator/assets/valuation.png",
                                                                    }
                                                                  }
                                                                />
                                                              </div>
                                                            </ForwardRef(InputAdornment)>
                                                          </WithStyles(ForwardRef(InputAdornment))>
                                                          <input
                                                            aria-invalid={false}
                                                            className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                                            disabled={false}
                                                            name="valuation"
                                                            onAnimationStart={[Function]}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            placeholder=""
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </div>
                                                      </ForwardRef(InputBase)>
                                                    </WithStyles(ForwardRef(InputBase))>
                                                  </ForwardRef(Input)>
                                                </WithStyles(ForwardRef(Input))>
                                              </div>
                                            </ForwardRef(FormControl)>
                                          </WithStyles(ForwardRef(FormControl))>
                                          <div
                                            className="next-button"
                                          >
                                            <WithStyles(ForwardRef(Button))
                                              type="submit"
                                            >
                                              <ForwardRef(Button)
                                                classes={
                                                  Object {
                                                    "colorInherit": "MuiButton-colorInherit",
                                                    "contained": "MuiButton-contained",
                                                    "containedPrimary": "MuiButton-containedPrimary",
                                                    "containedSecondary": "MuiButton-containedSecondary",
                                                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                    "disableElevation": "MuiButton-disableElevation",
                                                    "disabled": "Mui-disabled",
                                                    "endIcon": "MuiButton-endIcon",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "fullWidth": "MuiButton-fullWidth",
                                                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                    "label": "MuiButton-label",
                                                    "outlined": "MuiButton-outlined",
                                                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                    "root": "MuiButton-root",
                                                    "sizeLarge": "MuiButton-sizeLarge",
                                                    "sizeSmall": "MuiButton-sizeSmall",
                                                    "startIcon": "MuiButton-startIcon",
                                                    "text": "MuiButton-text",
                                                    "textPrimary": "MuiButton-textPrimary",
                                                    "textSecondary": "MuiButton-textSecondary",
                                                    "textSizeLarge": "MuiButton-textSizeLarge",
                                                    "textSizeSmall": "MuiButton-textSizeSmall",
                                                  }
                                                }
                                                type="submit"
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiButton-root MuiButton-text"
                                                  component="button"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  type="submit"
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiButton-root MuiButton-text"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    type="submit"
                                                  >
                                                    <button
                                                      className="MuiButtonBase-root MuiButton-root MuiButton-text"
                                                      disabled={false}
                                                      onBlur={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={0}
                                                      type="submit"
                                                    >
                                                      <span
                                                        className="MuiButton-label"
                                                      />
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </button>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(Button)>
                                            </WithStyles(ForwardRef(Button))>
                                          </div>
                                        </div>
                                      </Styled(MuiBox)>
                                    </form>
                                  </Form>
                                </Formik>
                              </div>
                            </Styled(MuiBox)>
                          </div>
                        </ForwardRef(Container)>
                      </WithStyles(ForwardRef(Container))>
                    </div>
                  </Styled(MuiBox)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
            <WithStyles(ForwardRef(Grid))
              item={true}
              md={5}
              xs={12}
            >
              <ForwardRef(Grid)
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={5}
                xs={12}
              >
                <div
                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-5"
                >
                  <Styled(MuiBox)
                    className="right-block right-image"
                    display={
                      Object {
                        "md": "flex",
                        "xs": "none",
                      }
                    }
                  >
                    <div
                      className="MuiBox-root MuiBox-root-14 right-block right-image"
                    >
                      <img
                        alt=""
                        className="building-logo"
                      />
                    </div>
                  </Styled(MuiBox)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
          </div>
        </ForwardRef(Grid)>
      </WithStyles(ForwardRef(Grid))>
    </div>
  </Styled(MuiBox)>
  <WithStyles(ForwardRef(Drawer))
    anchor="bottom"
    className="condition-modal penalty-dialog rent-history-dialog"
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(Drawer)
      anchor="bottom"
      className="condition-modal penalty-dialog rent-history-dialog"
      classes={
        Object {
          "docked": "MuiDrawer-docked",
          "modal": "MuiDrawer-modal",
          "paper": "MuiDrawer-paper",
          "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
          "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
          "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
          "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
          "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
          "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
          "paperAnchorRight": "MuiDrawer-paperAnchorRight",
          "paperAnchorTop": "MuiDrawer-paperAnchorTop",
          "root": "MuiDrawer-root",
        }
      }
      onClose={[Function]}
      open={false}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "displayName": "WithStyles(ForwardRef(Backdrop))",
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDrawer-root MuiDrawer-modal condition-modal penalty-dialog rent-history-dialog"
        onClose={[Function]}
        open={false}
      />
    </ForwardRef(Drawer)>
  </WithStyles(ForwardRef(Drawer))>
</EditMyUnit>
`;
