// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EmailAlerts User navigates to EmailAlerts 1`] = `
<EmailAlerts
  classes={
    Object {
      "totalExpense": Object {
        "& .MuiContainer-root": Object {
          "height": "87vh",
          "overflowY": "auto",
        },
        "& .MuiSwitch-root": Object {
          "& .MuiSwitch-switchBase": Object {
            "left": "3px",
            "padding": "0",
            "top": "3px",
          },
          "& .MuiSwitch-switchBase.Mui-checked": Object {
            "color": "white",
          },
          "& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track": Object {
            "backgroundColor": "#FC8434",
          },
          "& .MuiSwitch-thumb": Object {
            "height": "16px",
            "padding": "0",
            "width": "16px",
          },
          "& .MuiSwitch-track": Object {
            "borderRadius": "50px",
            "height": "22px",
            "width": "42px",
          },
          "height": "unset",
          "padding": "unset",
        },
        "& .main-setting-box": Object {
          "& .card-box-setting": Object {
            "& .setting-text": Object {
              "color": "#FC8434",
              "cursor": "pointer",
              "fontWeight": "600",
            },
            "display": "flex",
            "flexDirection": "column",
            "gap": "10px",
          },
          "& .setting-content-box": Object {
            "& h4": Object {
              "fontSize": "17px",
            },
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
          },
          "borderRadius": "8px",
          "boxShadow": "none",
          "padding": "22px",
        },
        "& .right-image": Object {
          "padding": "25px 60px",
        },
        "& .setting-page-email": Object {
          "marginTop": "15px",
        },
        "& .top-bar-navigation": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "borderBottom": "2px solid #e2e2ef",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "padding": "10px 20px",
          "zIndex": "9999",
        },
        "& .top-bar-navigation .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "10px",
          "justifyContent": "center",
        },
        "& .top-bar-navigation .left-icon span": Object {
          "fontSize": "18px",
          "lineHeight": "18px",
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
        "height": "100vh",
        "overflowY": "hidden",
      },
    }
  }
  history={[MockFunction]}
  id="EmailAlerts"
  location={[MockFunction]}
  match={[MockFunction]}
  navigation={
    Object {
      "getParam": [MockFunction],
      "goBack": [MockFunction],
      "navigate": [MockFunction],
    }
  }
  t={[Function]}
>
  <Styled(MuiBox)
    className={
      Object {
        "& .MuiContainer-root": Object {
          "height": "87vh",
          "overflowY": "auto",
        },
        "& .MuiSwitch-root": Object {
          "& .MuiSwitch-switchBase": Object {
            "left": "3px",
            "padding": "0",
            "top": "3px",
          },
          "& .MuiSwitch-switchBase.Mui-checked": Object {
            "color": "white",
          },
          "& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track": Object {
            "backgroundColor": "#FC8434",
          },
          "& .MuiSwitch-thumb": Object {
            "height": "16px",
            "padding": "0",
            "width": "16px",
          },
          "& .MuiSwitch-track": Object {
            "borderRadius": "50px",
            "height": "22px",
            "width": "42px",
          },
          "height": "unset",
          "padding": "unset",
        },
        "& .main-setting-box": Object {
          "& .card-box-setting": Object {
            "& .setting-text": Object {
              "color": "#FC8434",
              "cursor": "pointer",
              "fontWeight": "600",
            },
            "display": "flex",
            "flexDirection": "column",
            "gap": "10px",
          },
          "& .setting-content-box": Object {
            "& h4": Object {
              "fontSize": "17px",
            },
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
          },
          "borderRadius": "8px",
          "boxShadow": "none",
          "padding": "22px",
        },
        "& .right-image": Object {
          "padding": "25px 60px",
        },
        "& .setting-page-email": Object {
          "marginTop": "15px",
        },
        "& .top-bar-navigation": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "borderBottom": "2px solid #e2e2ef",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "padding": "10px 20px",
          "zIndex": "9999",
        },
        "& .top-bar-navigation .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "10px",
          "justifyContent": "center",
        },
        "& .top-bar-navigation .left-icon span": Object {
          "fontSize": "18px",
          "lineHeight": "18px",
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
        "height": "100vh",
        "overflowY": "hidden",
      }
    }
    style={
      Object {
        "background": "#F4F7FF",
      }
    }
  >
    <div
      className="MuiBox-root MuiBox-root-1 height overflowY & .top-bar-navigation & .top-bar-navigation .left-icon & .top-bar-navigation .left-icon span & .right-image & a & .MuiContainer-root & .setting-page-email & .main-setting-box & .MuiSwitch-root"
      style={
        Object {
          "background": "#F4F7FF",
        }
      }
    >
      <WithStyles(ForwardRef(Grid))
        container={true}
      >
        <ForwardRef(Grid)
          classes={
            Object {
              "align-content-xs-center": "MuiGrid-align-content-xs-center",
              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
              "align-items-xs-center": "MuiGrid-align-items-xs-center",
              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
              "container": "MuiGrid-container",
              "direction-xs-column": "MuiGrid-direction-xs-column",
              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
              "grid-lg-1": "MuiGrid-grid-lg-1",
              "grid-lg-10": "MuiGrid-grid-lg-10",
              "grid-lg-11": "MuiGrid-grid-lg-11",
              "grid-lg-12": "MuiGrid-grid-lg-12",
              "grid-lg-2": "MuiGrid-grid-lg-2",
              "grid-lg-3": "MuiGrid-grid-lg-3",
              "grid-lg-4": "MuiGrid-grid-lg-4",
              "grid-lg-5": "MuiGrid-grid-lg-5",
              "grid-lg-6": "MuiGrid-grid-lg-6",
              "grid-lg-7": "MuiGrid-grid-lg-7",
              "grid-lg-8": "MuiGrid-grid-lg-8",
              "grid-lg-9": "MuiGrid-grid-lg-9",
              "grid-lg-auto": "MuiGrid-grid-lg-auto",
              "grid-lg-true": "MuiGrid-grid-lg-true",
              "grid-md-1": "MuiGrid-grid-md-1",
              "grid-md-10": "MuiGrid-grid-md-10",
              "grid-md-11": "MuiGrid-grid-md-11",
              "grid-md-12": "MuiGrid-grid-md-12",
              "grid-md-2": "MuiGrid-grid-md-2",
              "grid-md-3": "MuiGrid-grid-md-3",
              "grid-md-4": "MuiGrid-grid-md-4",
              "grid-md-5": "MuiGrid-grid-md-5",
              "grid-md-6": "MuiGrid-grid-md-6",
              "grid-md-7": "MuiGrid-grid-md-7",
              "grid-md-8": "MuiGrid-grid-md-8",
              "grid-md-9": "MuiGrid-grid-md-9",
              "grid-md-auto": "MuiGrid-grid-md-auto",
              "grid-md-true": "MuiGrid-grid-md-true",
              "grid-sm-1": "MuiGrid-grid-sm-1",
              "grid-sm-10": "MuiGrid-grid-sm-10",
              "grid-sm-11": "MuiGrid-grid-sm-11",
              "grid-sm-12": "MuiGrid-grid-sm-12",
              "grid-sm-2": "MuiGrid-grid-sm-2",
              "grid-sm-3": "MuiGrid-grid-sm-3",
              "grid-sm-4": "MuiGrid-grid-sm-4",
              "grid-sm-5": "MuiGrid-grid-sm-5",
              "grid-sm-6": "MuiGrid-grid-sm-6",
              "grid-sm-7": "MuiGrid-grid-sm-7",
              "grid-sm-8": "MuiGrid-grid-sm-8",
              "grid-sm-9": "MuiGrid-grid-sm-9",
              "grid-sm-auto": "MuiGrid-grid-sm-auto",
              "grid-sm-true": "MuiGrid-grid-sm-true",
              "grid-xl-1": "MuiGrid-grid-xl-1",
              "grid-xl-10": "MuiGrid-grid-xl-10",
              "grid-xl-11": "MuiGrid-grid-xl-11",
              "grid-xl-12": "MuiGrid-grid-xl-12",
              "grid-xl-2": "MuiGrid-grid-xl-2",
              "grid-xl-3": "MuiGrid-grid-xl-3",
              "grid-xl-4": "MuiGrid-grid-xl-4",
              "grid-xl-5": "MuiGrid-grid-xl-5",
              "grid-xl-6": "MuiGrid-grid-xl-6",
              "grid-xl-7": "MuiGrid-grid-xl-7",
              "grid-xl-8": "MuiGrid-grid-xl-8",
              "grid-xl-9": "MuiGrid-grid-xl-9",
              "grid-xl-auto": "MuiGrid-grid-xl-auto",
              "grid-xl-true": "MuiGrid-grid-xl-true",
              "grid-xs-1": "MuiGrid-grid-xs-1",
              "grid-xs-10": "MuiGrid-grid-xs-10",
              "grid-xs-11": "MuiGrid-grid-xs-11",
              "grid-xs-12": "MuiGrid-grid-xs-12",
              "grid-xs-2": "MuiGrid-grid-xs-2",
              "grid-xs-3": "MuiGrid-grid-xs-3",
              "grid-xs-4": "MuiGrid-grid-xs-4",
              "grid-xs-5": "MuiGrid-grid-xs-5",
              "grid-xs-6": "MuiGrid-grid-xs-6",
              "grid-xs-7": "MuiGrid-grid-xs-7",
              "grid-xs-8": "MuiGrid-grid-xs-8",
              "grid-xs-9": "MuiGrid-grid-xs-9",
              "grid-xs-auto": "MuiGrid-grid-xs-auto",
              "grid-xs-true": "MuiGrid-grid-xs-true",
              "item": "MuiGrid-item",
              "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
              "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
              "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
              "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
              "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
              "root": "MuiGrid-root",
              "spacing-xs-1": "MuiGrid-spacing-xs-1",
              "spacing-xs-10": "MuiGrid-spacing-xs-10",
              "spacing-xs-2": "MuiGrid-spacing-xs-2",
              "spacing-xs-3": "MuiGrid-spacing-xs-3",
              "spacing-xs-4": "MuiGrid-spacing-xs-4",
              "spacing-xs-5": "MuiGrid-spacing-xs-5",
              "spacing-xs-6": "MuiGrid-spacing-xs-6",
              "spacing-xs-7": "MuiGrid-spacing-xs-7",
              "spacing-xs-8": "MuiGrid-spacing-xs-8",
              "spacing-xs-9": "MuiGrid-spacing-xs-9",
              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
              "zeroMinWidth": "MuiGrid-zeroMinWidth",
            }
          }
          container={true}
        >
          <div
            className="MuiGrid-root MuiGrid-container"
          >
            <WithStyles(ForwardRef(Grid))
              item={true}
              md={7}
              xs={12}
            >
              <ForwardRef(Grid)
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={7}
                xs={12}
              >
                <div
                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-7"
                >
                  <Styled(MuiBox)
                    className="faq-step"
                  >
                    <div
                      className="MuiBox-root MuiBox-root-2 faq-step"
                    >
                      <Styled(MuiBox)
                        className="top-bar-navigation"
                        display={
                          Object {
                            "md": "flex",
                            "xs": "flex",
                          }
                        }
                      >
                        <div
                          className="MuiBox-root MuiBox-root-3 top-bar-navigation"
                        >
                          <Styled(MuiBox)
                            className="left-icon"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-4 left-icon"
                            >
                              <WithStyles(ForwardRef(Link))
                                href="/OwnerDashboard"
                              >
                                <ForwardRef(Link)
                                  classes={
                                    Object {
                                      "button": "MuiLink-button",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiLink-root",
                                      "underlineAlways": "MuiLink-underlineAlways",
                                      "underlineHover": "MuiLink-underlineHover",
                                      "underlineNone": "MuiLink-underlineNone",
                                    }
                                  }
                                  href="/OwnerDashboard"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiLink-root MuiLink-underlineHover"
                                    color="primary"
                                    component="a"
                                    href="/OwnerDashboard"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    variant="inherit"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiLink-root MuiLink-underlineHover"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="primary"
                                      component="a"
                                      href="/OwnerDashboard"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      variant="inherit"
                                    >
                                      <a
                                        className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                        href="/OwnerDashboard"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                      >
                                        <WithStyles(ForwardRef(IconButton))>
                                          <ForwardRef(IconButton)
                                            classes={
                                              Object {
                                                "colorInherit": "MuiIconButton-colorInherit",
                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                "edgeStart": "MuiIconButton-edgeStart",
                                                "label": "MuiIconButton-label",
                                                "root": "MuiIconButton-root",
                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              centerRipple={true}
                                              className="MuiIconButton-root"
                                              disabled={false}
                                              focusRipple={true}
                                            >
                                              <ForwardRef(ButtonBase)
                                                centerRipple={true}
                                                className="MuiIconButton-root"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                disabled={false}
                                                focusRipple={true}
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiIconButton-root"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <span
                                                    className="MuiIconButton-label"
                                                  >
                                                    <ForwardRef(KeyboardBackspaceIcon)>
                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                        <ForwardRef(SvgIcon)
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(KeyboardBackspaceIcon)>
                                                  </span>
                                                  <WithStyles(memo)
                                                    center={true}
                                                  >
                                                    <ForwardRef(TouchRipple)
                                                      center={true}
                                                      classes={
                                                        Object {
                                                          "child": "MuiTouchRipple-child",
                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                          "ripple": "MuiTouchRipple-ripple",
                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                          "root": "MuiTouchRipple-root",
                                                        }
                                                      }
                                                    >
                                                      <span
                                                        className="MuiTouchRipple-root"
                                                      >
                                                        <TransitionGroup
                                                          childFactory={[Function]}
                                                          component={null}
                                                          exit={true}
                                                        />
                                                      </span>
                                                    </ForwardRef(TouchRipple)>
                                                  </WithStyles(memo)>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(IconButton)>
                                        </WithStyles(ForwardRef(IconButton))>
                                      </a>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </ForwardRef(Link)>
                              </WithStyles(ForwardRef(Link))>
                              <span />
                            </div>
                          </Styled(MuiBox)>
                        </div>
                      </Styled(MuiBox)>
                      <WithStyles(ForwardRef(Container))>
                        <ForwardRef(Container)
                          classes={
                            Object {
                              "disableGutters": "MuiContainer-disableGutters",
                              "fixed": "MuiContainer-fixed",
                              "maxWidthLg": "MuiContainer-maxWidthLg",
                              "maxWidthMd": "MuiContainer-maxWidthMd",
                              "maxWidthSm": "MuiContainer-maxWidthSm",
                              "maxWidthXl": "MuiContainer-maxWidthXl",
                              "maxWidthXs": "MuiContainer-maxWidthXs",
                              "root": "MuiContainer-root",
                            }
                          }
                        >
                          <div
                            className="MuiContainer-root MuiContainer-maxWidthLg"
                          >
                            <Styled(MuiBox)
                              className="setting-page-email"
                            >
                              <div
                                className="MuiBox-root MuiBox-root-5 setting-page-email"
                              >
                                <WithStyles(ForwardRef(Grid))
                                  container={true}
                                  spacing={2}
                                >
                                  <ForwardRef(Grid)
                                    classes={
                                      Object {
                                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                        "container": "MuiGrid-container",
                                        "direction-xs-column": "MuiGrid-direction-xs-column",
                                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                        "grid-lg-1": "MuiGrid-grid-lg-1",
                                        "grid-lg-10": "MuiGrid-grid-lg-10",
                                        "grid-lg-11": "MuiGrid-grid-lg-11",
                                        "grid-lg-12": "MuiGrid-grid-lg-12",
                                        "grid-lg-2": "MuiGrid-grid-lg-2",
                                        "grid-lg-3": "MuiGrid-grid-lg-3",
                                        "grid-lg-4": "MuiGrid-grid-lg-4",
                                        "grid-lg-5": "MuiGrid-grid-lg-5",
                                        "grid-lg-6": "MuiGrid-grid-lg-6",
                                        "grid-lg-7": "MuiGrid-grid-lg-7",
                                        "grid-lg-8": "MuiGrid-grid-lg-8",
                                        "grid-lg-9": "MuiGrid-grid-lg-9",
                                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                        "grid-lg-true": "MuiGrid-grid-lg-true",
                                        "grid-md-1": "MuiGrid-grid-md-1",
                                        "grid-md-10": "MuiGrid-grid-md-10",
                                        "grid-md-11": "MuiGrid-grid-md-11",
                                        "grid-md-12": "MuiGrid-grid-md-12",
                                        "grid-md-2": "MuiGrid-grid-md-2",
                                        "grid-md-3": "MuiGrid-grid-md-3",
                                        "grid-md-4": "MuiGrid-grid-md-4",
                                        "grid-md-5": "MuiGrid-grid-md-5",
                                        "grid-md-6": "MuiGrid-grid-md-6",
                                        "grid-md-7": "MuiGrid-grid-md-7",
                                        "grid-md-8": "MuiGrid-grid-md-8",
                                        "grid-md-9": "MuiGrid-grid-md-9",
                                        "grid-md-auto": "MuiGrid-grid-md-auto",
                                        "grid-md-true": "MuiGrid-grid-md-true",
                                        "grid-sm-1": "MuiGrid-grid-sm-1",
                                        "grid-sm-10": "MuiGrid-grid-sm-10",
                                        "grid-sm-11": "MuiGrid-grid-sm-11",
                                        "grid-sm-12": "MuiGrid-grid-sm-12",
                                        "grid-sm-2": "MuiGrid-grid-sm-2",
                                        "grid-sm-3": "MuiGrid-grid-sm-3",
                                        "grid-sm-4": "MuiGrid-grid-sm-4",
                                        "grid-sm-5": "MuiGrid-grid-sm-5",
                                        "grid-sm-6": "MuiGrid-grid-sm-6",
                                        "grid-sm-7": "MuiGrid-grid-sm-7",
                                        "grid-sm-8": "MuiGrid-grid-sm-8",
                                        "grid-sm-9": "MuiGrid-grid-sm-9",
                                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                        "grid-sm-true": "MuiGrid-grid-sm-true",
                                        "grid-xl-1": "MuiGrid-grid-xl-1",
                                        "grid-xl-10": "MuiGrid-grid-xl-10",
                                        "grid-xl-11": "MuiGrid-grid-xl-11",
                                        "grid-xl-12": "MuiGrid-grid-xl-12",
                                        "grid-xl-2": "MuiGrid-grid-xl-2",
                                        "grid-xl-3": "MuiGrid-grid-xl-3",
                                        "grid-xl-4": "MuiGrid-grid-xl-4",
                                        "grid-xl-5": "MuiGrid-grid-xl-5",
                                        "grid-xl-6": "MuiGrid-grid-xl-6",
                                        "grid-xl-7": "MuiGrid-grid-xl-7",
                                        "grid-xl-8": "MuiGrid-grid-xl-8",
                                        "grid-xl-9": "MuiGrid-grid-xl-9",
                                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                        "grid-xl-true": "MuiGrid-grid-xl-true",
                                        "grid-xs-1": "MuiGrid-grid-xs-1",
                                        "grid-xs-10": "MuiGrid-grid-xs-10",
                                        "grid-xs-11": "MuiGrid-grid-xs-11",
                                        "grid-xs-12": "MuiGrid-grid-xs-12",
                                        "grid-xs-2": "MuiGrid-grid-xs-2",
                                        "grid-xs-3": "MuiGrid-grid-xs-3",
                                        "grid-xs-4": "MuiGrid-grid-xs-4",
                                        "grid-xs-5": "MuiGrid-grid-xs-5",
                                        "grid-xs-6": "MuiGrid-grid-xs-6",
                                        "grid-xs-7": "MuiGrid-grid-xs-7",
                                        "grid-xs-8": "MuiGrid-grid-xs-8",
                                        "grid-xs-9": "MuiGrid-grid-xs-9",
                                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                        "grid-xs-true": "MuiGrid-grid-xs-true",
                                        "item": "MuiGrid-item",
                                        "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                        "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                        "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                        "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                        "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                        "root": "MuiGrid-root",
                                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                      }
                                    }
                                    container={true}
                                    spacing={2}
                                  >
                                    <div
                                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                                    >
                                      <WithStyles(ForwardRef(Grid))
                                        item={true}
                                        xs={12}
                                      >
                                        <ForwardRef(Grid)
                                          classes={
                                            Object {
                                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                              "container": "MuiGrid-container",
                                              "direction-xs-column": "MuiGrid-direction-xs-column",
                                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                              "grid-lg-1": "MuiGrid-grid-lg-1",
                                              "grid-lg-10": "MuiGrid-grid-lg-10",
                                              "grid-lg-11": "MuiGrid-grid-lg-11",
                                              "grid-lg-12": "MuiGrid-grid-lg-12",
                                              "grid-lg-2": "MuiGrid-grid-lg-2",
                                              "grid-lg-3": "MuiGrid-grid-lg-3",
                                              "grid-lg-4": "MuiGrid-grid-lg-4",
                                              "grid-lg-5": "MuiGrid-grid-lg-5",
                                              "grid-lg-6": "MuiGrid-grid-lg-6",
                                              "grid-lg-7": "MuiGrid-grid-lg-7",
                                              "grid-lg-8": "MuiGrid-grid-lg-8",
                                              "grid-lg-9": "MuiGrid-grid-lg-9",
                                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                              "grid-lg-true": "MuiGrid-grid-lg-true",
                                              "grid-md-1": "MuiGrid-grid-md-1",
                                              "grid-md-10": "MuiGrid-grid-md-10",
                                              "grid-md-11": "MuiGrid-grid-md-11",
                                              "grid-md-12": "MuiGrid-grid-md-12",
                                              "grid-md-2": "MuiGrid-grid-md-2",
                                              "grid-md-3": "MuiGrid-grid-md-3",
                                              "grid-md-4": "MuiGrid-grid-md-4",
                                              "grid-md-5": "MuiGrid-grid-md-5",
                                              "grid-md-6": "MuiGrid-grid-md-6",
                                              "grid-md-7": "MuiGrid-grid-md-7",
                                              "grid-md-8": "MuiGrid-grid-md-8",
                                              "grid-md-9": "MuiGrid-grid-md-9",
                                              "grid-md-auto": "MuiGrid-grid-md-auto",
                                              "grid-md-true": "MuiGrid-grid-md-true",
                                              "grid-sm-1": "MuiGrid-grid-sm-1",
                                              "grid-sm-10": "MuiGrid-grid-sm-10",
                                              "grid-sm-11": "MuiGrid-grid-sm-11",
                                              "grid-sm-12": "MuiGrid-grid-sm-12",
                                              "grid-sm-2": "MuiGrid-grid-sm-2",
                                              "grid-sm-3": "MuiGrid-grid-sm-3",
                                              "grid-sm-4": "MuiGrid-grid-sm-4",
                                              "grid-sm-5": "MuiGrid-grid-sm-5",
                                              "grid-sm-6": "MuiGrid-grid-sm-6",
                                              "grid-sm-7": "MuiGrid-grid-sm-7",
                                              "grid-sm-8": "MuiGrid-grid-sm-8",
                                              "grid-sm-9": "MuiGrid-grid-sm-9",
                                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                              "grid-sm-true": "MuiGrid-grid-sm-true",
                                              "grid-xl-1": "MuiGrid-grid-xl-1",
                                              "grid-xl-10": "MuiGrid-grid-xl-10",
                                              "grid-xl-11": "MuiGrid-grid-xl-11",
                                              "grid-xl-12": "MuiGrid-grid-xl-12",
                                              "grid-xl-2": "MuiGrid-grid-xl-2",
                                              "grid-xl-3": "MuiGrid-grid-xl-3",
                                              "grid-xl-4": "MuiGrid-grid-xl-4",
                                              "grid-xl-5": "MuiGrid-grid-xl-5",
                                              "grid-xl-6": "MuiGrid-grid-xl-6",
                                              "grid-xl-7": "MuiGrid-grid-xl-7",
                                              "grid-xl-8": "MuiGrid-grid-xl-8",
                                              "grid-xl-9": "MuiGrid-grid-xl-9",
                                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                              "grid-xl-true": "MuiGrid-grid-xl-true",
                                              "grid-xs-1": "MuiGrid-grid-xs-1",
                                              "grid-xs-10": "MuiGrid-grid-xs-10",
                                              "grid-xs-11": "MuiGrid-grid-xs-11",
                                              "grid-xs-12": "MuiGrid-grid-xs-12",
                                              "grid-xs-2": "MuiGrid-grid-xs-2",
                                              "grid-xs-3": "MuiGrid-grid-xs-3",
                                              "grid-xs-4": "MuiGrid-grid-xs-4",
                                              "grid-xs-5": "MuiGrid-grid-xs-5",
                                              "grid-xs-6": "MuiGrid-grid-xs-6",
                                              "grid-xs-7": "MuiGrid-grid-xs-7",
                                              "grid-xs-8": "MuiGrid-grid-xs-8",
                                              "grid-xs-9": "MuiGrid-grid-xs-9",
                                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                              "grid-xs-true": "MuiGrid-grid-xs-true",
                                              "item": "MuiGrid-item",
                                              "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                              "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                              "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                              "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                              "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                              "root": "MuiGrid-root",
                                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                            }
                                          }
                                          item={true}
                                          xs={12}
                                        >
                                          <div
                                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                                          >
                                            <WithStyles(ForwardRef(Card))
                                              className="main-setting-box"
                                            >
                                              <ForwardRef(Card)
                                                className="main-setting-box"
                                                classes={
                                                  Object {
                                                    "root": "MuiCard-root",
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(Paper))
                                                  className="MuiCard-root main-setting-box"
                                                  elevation={1}
                                                >
                                                  <ForwardRef(Paper)
                                                    className="MuiCard-root main-setting-box"
                                                    classes={
                                                      Object {
                                                        "elevation0": "MuiPaper-elevation0",
                                                        "elevation1": "MuiPaper-elevation1",
                                                        "elevation10": "MuiPaper-elevation10",
                                                        "elevation11": "MuiPaper-elevation11",
                                                        "elevation12": "MuiPaper-elevation12",
                                                        "elevation13": "MuiPaper-elevation13",
                                                        "elevation14": "MuiPaper-elevation14",
                                                        "elevation15": "MuiPaper-elevation15",
                                                        "elevation16": "MuiPaper-elevation16",
                                                        "elevation17": "MuiPaper-elevation17",
                                                        "elevation18": "MuiPaper-elevation18",
                                                        "elevation19": "MuiPaper-elevation19",
                                                        "elevation2": "MuiPaper-elevation2",
                                                        "elevation20": "MuiPaper-elevation20",
                                                        "elevation21": "MuiPaper-elevation21",
                                                        "elevation22": "MuiPaper-elevation22",
                                                        "elevation23": "MuiPaper-elevation23",
                                                        "elevation24": "MuiPaper-elevation24",
                                                        "elevation3": "MuiPaper-elevation3",
                                                        "elevation4": "MuiPaper-elevation4",
                                                        "elevation5": "MuiPaper-elevation5",
                                                        "elevation6": "MuiPaper-elevation6",
                                                        "elevation7": "MuiPaper-elevation7",
                                                        "elevation8": "MuiPaper-elevation8",
                                                        "elevation9": "MuiPaper-elevation9",
                                                        "outlined": "MuiPaper-outlined",
                                                        "root": "MuiPaper-root",
                                                        "rounded": "MuiPaper-rounded",
                                                      }
                                                    }
                                                    elevation={1}
                                                  >
                                                    <div
                                                      className="MuiPaper-root MuiCard-root main-setting-box MuiPaper-elevation1 MuiPaper-rounded"
                                                    >
                                                      <Styled(MuiBox)
                                                        className="card-box-setting"
                                                      >
                                                        <div
                                                          className="MuiBox-root MuiBox-root-6 card-box-setting"
                                                        >
                                                          <Styled(MuiBox)
                                                            className="setting-content-box"
                                                          >
                                                            <div
                                                              className="MuiBox-root MuiBox-root-7 setting-content-box"
                                                            >
                                                              <h4 />
                                                              <WithStyles(ForwardRef(Switch))
                                                                checked={false}
                                                                color="primary"
                                                                name="lease"
                                                                onChange={[Function]}
                                                              >
                                                                <ForwardRef(Switch)
                                                                  checked={false}
                                                                  classes={
                                                                    Object {
                                                                      "checked": "Mui-checked",
                                                                      "colorPrimary": "MuiSwitch-colorPrimary",
                                                                      "colorSecondary": "MuiSwitch-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "edgeEnd": "MuiSwitch-edgeEnd",
                                                                      "edgeStart": "MuiSwitch-edgeStart",
                                                                      "input": "MuiSwitch-input",
                                                                      "root": "MuiSwitch-root",
                                                                      "sizeSmall": "MuiSwitch-sizeSmall",
                                                                      "switchBase": "MuiSwitch-switchBase",
                                                                      "thumb": "MuiSwitch-thumb",
                                                                      "track": "MuiSwitch-track",
                                                                    }
                                                                  }
                                                                  color="primary"
                                                                  name="lease"
                                                                  onChange={[Function]}
                                                                >
                                                                  <span
                                                                    className="MuiSwitch-root"
                                                                  >
                                                                    <WithStyles(ForwardRef(SwitchBase))
                                                                      checked={false}
                                                                      checkedIcon={
                                                                        <span
                                                                          className="MuiSwitch-thumb"
                                                                        />
                                                                      }
                                                                      classes={
                                                                        Object {
                                                                          "checked": "Mui-checked",
                                                                          "disabled": "Mui-disabled",
                                                                          "input": "MuiSwitch-input",
                                                                          "root": "MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                        }
                                                                      }
                                                                      icon={
                                                                        <span
                                                                          className="MuiSwitch-thumb"
                                                                        />
                                                                      }
                                                                      name="lease"
                                                                      onChange={[Function]}
                                                                      type="checkbox"
                                                                    >
                                                                      <ForwardRef(SwitchBase)
                                                                        checked={false}
                                                                        checkedIcon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "checked": "PrivateSwitchBase-checked-9 Mui-checked",
                                                                            "disabled": "PrivateSwitchBase-disabled-10 Mui-disabled",
                                                                            "input": "PrivateSwitchBase-input-11 MuiSwitch-input",
                                                                            "root": "PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                          }
                                                                        }
                                                                        icon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        name="lease"
                                                                        onChange={[Function]}
                                                                        type="checkbox"
                                                                      >
                                                                        <WithStyles(ForwardRef(IconButton))
                                                                          className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                          component="span"
                                                                          onBlur={[Function]}
                                                                          onFocus={[Function]}
                                                                          tabIndex={null}
                                                                        >
                                                                          <ForwardRef(IconButton)
                                                                            className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                            classes={
                                                                              Object {
                                                                                "colorInherit": "MuiIconButton-colorInherit",
                                                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                "disabled": "Mui-disabled",
                                                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                "edgeStart": "MuiIconButton-edgeStart",
                                                                                "label": "MuiIconButton-label",
                                                                                "root": "MuiIconButton-root",
                                                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                                                              }
                                                                            }
                                                                            component="span"
                                                                            onBlur={[Function]}
                                                                            onFocus={[Function]}
                                                                            tabIndex={null}
                                                                          >
                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                              centerRipple={true}
                                                                              className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                              component="span"
                                                                              disabled={false}
                                                                              focusRipple={true}
                                                                              onBlur={[Function]}
                                                                              onFocus={[Function]}
                                                                              tabIndex={null}
                                                                            >
                                                                              <ForwardRef(ButtonBase)
                                                                                centerRipple={true}
                                                                                className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                                classes={
                                                                                  Object {
                                                                                    "disabled": "Mui-disabled",
                                                                                    "focusVisible": "Mui-focusVisible",
                                                                                    "root": "MuiButtonBase-root",
                                                                                  }
                                                                                }
                                                                                component="span"
                                                                                disabled={false}
                                                                                focusRipple={true}
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                tabIndex={null}
                                                                              >
                                                                                <span
                                                                                  aria-disabled={false}
                                                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                                  onBlur={[Function]}
                                                                                  onDragLeave={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onKeyUp={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onMouseLeave={[Function]}
                                                                                  onMouseUp={[Function]}
                                                                                  onTouchEnd={[Function]}
                                                                                  onTouchMove={[Function]}
                                                                                  onTouchStart={[Function]}
                                                                                  tabIndex={null}
                                                                                >
                                                                                  <span
                                                                                    className="MuiIconButton-label"
                                                                                  >
                                                                                    <input
                                                                                      checked={false}
                                                                                      className="PrivateSwitchBase-input-11 MuiSwitch-input"
                                                                                      name="lease"
                                                                                      onChange={[Function]}
                                                                                      type="checkbox"
                                                                                    />
                                                                                    <span
                                                                                      className="MuiSwitch-thumb"
                                                                                    />
                                                                                  </span>
                                                                                  <WithStyles(memo)
                                                                                    center={true}
                                                                                  >
                                                                                    <ForwardRef(TouchRipple)
                                                                                      center={true}
                                                                                      classes={
                                                                                        Object {
                                                                                          "child": "MuiTouchRipple-child",
                                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                          "root": "MuiTouchRipple-root",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTouchRipple-root"
                                                                                      >
                                                                                        <TransitionGroup
                                                                                          childFactory={[Function]}
                                                                                          component={null}
                                                                                          exit={true}
                                                                                        />
                                                                                      </span>
                                                                                    </ForwardRef(TouchRipple)>
                                                                                  </WithStyles(memo)>
                                                                                </span>
                                                                              </ForwardRef(ButtonBase)>
                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                          </ForwardRef(IconButton)>
                                                                        </WithStyles(ForwardRef(IconButton))>
                                                                      </ForwardRef(SwitchBase)>
                                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                                    <span
                                                                      className="MuiSwitch-track"
                                                                    />
                                                                  </span>
                                                                </ForwardRef(Switch)>
                                                              </WithStyles(ForwardRef(Switch))>
                                                            </div>
                                                          </Styled(MuiBox)>
                                                          <Styled(MuiBox)
                                                            className="setting-on-box"
                                                          >
                                                            <div
                                                              className="MuiBox-root MuiBox-root-12 setting-on-box"
                                                            >
                                                              <p>
                                                                Lease expiration alert will be sent 30 days before lease expires to you and your tenant.
                                                              </p>
                                                              <span
                                                                className="setting-text"
                                                                onClick={[Function]}
                                                              />
                                                            </div>
                                                          </Styled(MuiBox)>
                                                        </div>
                                                      </Styled(MuiBox)>
                                                    </div>
                                                  </ForwardRef(Paper)>
                                                </WithStyles(ForwardRef(Paper))>
                                              </ForwardRef(Card)>
                                            </WithStyles(ForwardRef(Card))>
                                          </div>
                                        </ForwardRef(Grid)>
                                      </WithStyles(ForwardRef(Grid))>
                                      <WithStyles(ForwardRef(Grid))
                                        item={true}
                                        xs={12}
                                      >
                                        <ForwardRef(Grid)
                                          classes={
                                            Object {
                                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                              "container": "MuiGrid-container",
                                              "direction-xs-column": "MuiGrid-direction-xs-column",
                                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                              "grid-lg-1": "MuiGrid-grid-lg-1",
                                              "grid-lg-10": "MuiGrid-grid-lg-10",
                                              "grid-lg-11": "MuiGrid-grid-lg-11",
                                              "grid-lg-12": "MuiGrid-grid-lg-12",
                                              "grid-lg-2": "MuiGrid-grid-lg-2",
                                              "grid-lg-3": "MuiGrid-grid-lg-3",
                                              "grid-lg-4": "MuiGrid-grid-lg-4",
                                              "grid-lg-5": "MuiGrid-grid-lg-5",
                                              "grid-lg-6": "MuiGrid-grid-lg-6",
                                              "grid-lg-7": "MuiGrid-grid-lg-7",
                                              "grid-lg-8": "MuiGrid-grid-lg-8",
                                              "grid-lg-9": "MuiGrid-grid-lg-9",
                                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                              "grid-lg-true": "MuiGrid-grid-lg-true",
                                              "grid-md-1": "MuiGrid-grid-md-1",
                                              "grid-md-10": "MuiGrid-grid-md-10",
                                              "grid-md-11": "MuiGrid-grid-md-11",
                                              "grid-md-12": "MuiGrid-grid-md-12",
                                              "grid-md-2": "MuiGrid-grid-md-2",
                                              "grid-md-3": "MuiGrid-grid-md-3",
                                              "grid-md-4": "MuiGrid-grid-md-4",
                                              "grid-md-5": "MuiGrid-grid-md-5",
                                              "grid-md-6": "MuiGrid-grid-md-6",
                                              "grid-md-7": "MuiGrid-grid-md-7",
                                              "grid-md-8": "MuiGrid-grid-md-8",
                                              "grid-md-9": "MuiGrid-grid-md-9",
                                              "grid-md-auto": "MuiGrid-grid-md-auto",
                                              "grid-md-true": "MuiGrid-grid-md-true",
                                              "grid-sm-1": "MuiGrid-grid-sm-1",
                                              "grid-sm-10": "MuiGrid-grid-sm-10",
                                              "grid-sm-11": "MuiGrid-grid-sm-11",
                                              "grid-sm-12": "MuiGrid-grid-sm-12",
                                              "grid-sm-2": "MuiGrid-grid-sm-2",
                                              "grid-sm-3": "MuiGrid-grid-sm-3",
                                              "grid-sm-4": "MuiGrid-grid-sm-4",
                                              "grid-sm-5": "MuiGrid-grid-sm-5",
                                              "grid-sm-6": "MuiGrid-grid-sm-6",
                                              "grid-sm-7": "MuiGrid-grid-sm-7",
                                              "grid-sm-8": "MuiGrid-grid-sm-8",
                                              "grid-sm-9": "MuiGrid-grid-sm-9",
                                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                              "grid-sm-true": "MuiGrid-grid-sm-true",
                                              "grid-xl-1": "MuiGrid-grid-xl-1",
                                              "grid-xl-10": "MuiGrid-grid-xl-10",
                                              "grid-xl-11": "MuiGrid-grid-xl-11",
                                              "grid-xl-12": "MuiGrid-grid-xl-12",
                                              "grid-xl-2": "MuiGrid-grid-xl-2",
                                              "grid-xl-3": "MuiGrid-grid-xl-3",
                                              "grid-xl-4": "MuiGrid-grid-xl-4",
                                              "grid-xl-5": "MuiGrid-grid-xl-5",
                                              "grid-xl-6": "MuiGrid-grid-xl-6",
                                              "grid-xl-7": "MuiGrid-grid-xl-7",
                                              "grid-xl-8": "MuiGrid-grid-xl-8",
                                              "grid-xl-9": "MuiGrid-grid-xl-9",
                                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                              "grid-xl-true": "MuiGrid-grid-xl-true",
                                              "grid-xs-1": "MuiGrid-grid-xs-1",
                                              "grid-xs-10": "MuiGrid-grid-xs-10",
                                              "grid-xs-11": "MuiGrid-grid-xs-11",
                                              "grid-xs-12": "MuiGrid-grid-xs-12",
                                              "grid-xs-2": "MuiGrid-grid-xs-2",
                                              "grid-xs-3": "MuiGrid-grid-xs-3",
                                              "grid-xs-4": "MuiGrid-grid-xs-4",
                                              "grid-xs-5": "MuiGrid-grid-xs-5",
                                              "grid-xs-6": "MuiGrid-grid-xs-6",
                                              "grid-xs-7": "MuiGrid-grid-xs-7",
                                              "grid-xs-8": "MuiGrid-grid-xs-8",
                                              "grid-xs-9": "MuiGrid-grid-xs-9",
                                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                              "grid-xs-true": "MuiGrid-grid-xs-true",
                                              "item": "MuiGrid-item",
                                              "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                              "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                              "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                              "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                              "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                              "root": "MuiGrid-root",
                                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                            }
                                          }
                                          item={true}
                                          xs={12}
                                        >
                                          <div
                                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                                          >
                                            <WithStyles(ForwardRef(Card))
                                              className="main-setting-box"
                                            >
                                              <ForwardRef(Card)
                                                className="main-setting-box"
                                                classes={
                                                  Object {
                                                    "root": "MuiCard-root",
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(Paper))
                                                  className="MuiCard-root main-setting-box"
                                                  elevation={1}
                                                >
                                                  <ForwardRef(Paper)
                                                    className="MuiCard-root main-setting-box"
                                                    classes={
                                                      Object {
                                                        "elevation0": "MuiPaper-elevation0",
                                                        "elevation1": "MuiPaper-elevation1",
                                                        "elevation10": "MuiPaper-elevation10",
                                                        "elevation11": "MuiPaper-elevation11",
                                                        "elevation12": "MuiPaper-elevation12",
                                                        "elevation13": "MuiPaper-elevation13",
                                                        "elevation14": "MuiPaper-elevation14",
                                                        "elevation15": "MuiPaper-elevation15",
                                                        "elevation16": "MuiPaper-elevation16",
                                                        "elevation17": "MuiPaper-elevation17",
                                                        "elevation18": "MuiPaper-elevation18",
                                                        "elevation19": "MuiPaper-elevation19",
                                                        "elevation2": "MuiPaper-elevation2",
                                                        "elevation20": "MuiPaper-elevation20",
                                                        "elevation21": "MuiPaper-elevation21",
                                                        "elevation22": "MuiPaper-elevation22",
                                                        "elevation23": "MuiPaper-elevation23",
                                                        "elevation24": "MuiPaper-elevation24",
                                                        "elevation3": "MuiPaper-elevation3",
                                                        "elevation4": "MuiPaper-elevation4",
                                                        "elevation5": "MuiPaper-elevation5",
                                                        "elevation6": "MuiPaper-elevation6",
                                                        "elevation7": "MuiPaper-elevation7",
                                                        "elevation8": "MuiPaper-elevation8",
                                                        "elevation9": "MuiPaper-elevation9",
                                                        "outlined": "MuiPaper-outlined",
                                                        "root": "MuiPaper-root",
                                                        "rounded": "MuiPaper-rounded",
                                                      }
                                                    }
                                                    elevation={1}
                                                  >
                                                    <div
                                                      className="MuiPaper-root MuiCard-root main-setting-box MuiPaper-elevation1 MuiPaper-rounded"
                                                    >
                                                      <Styled(MuiBox)
                                                        className="card-box-setting"
                                                      >
                                                        <div
                                                          className="MuiBox-root MuiBox-root-13 card-box-setting"
                                                        >
                                                          <Styled(MuiBox)
                                                            className="setting-content-box"
                                                          >
                                                            <div
                                                              className="MuiBox-root MuiBox-root-14 setting-content-box"
                                                            >
                                                              <h4 />
                                                              <WithStyles(ForwardRef(Switch))
                                                                checked={false}
                                                                color="primary"
                                                                name="lease"
                                                                onChange={[Function]}
                                                              >
                                                                <ForwardRef(Switch)
                                                                  checked={false}
                                                                  classes={
                                                                    Object {
                                                                      "checked": "Mui-checked",
                                                                      "colorPrimary": "MuiSwitch-colorPrimary",
                                                                      "colorSecondary": "MuiSwitch-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "edgeEnd": "MuiSwitch-edgeEnd",
                                                                      "edgeStart": "MuiSwitch-edgeStart",
                                                                      "input": "MuiSwitch-input",
                                                                      "root": "MuiSwitch-root",
                                                                      "sizeSmall": "MuiSwitch-sizeSmall",
                                                                      "switchBase": "MuiSwitch-switchBase",
                                                                      "thumb": "MuiSwitch-thumb",
                                                                      "track": "MuiSwitch-track",
                                                                    }
                                                                  }
                                                                  color="primary"
                                                                  name="lease"
                                                                  onChange={[Function]}
                                                                >
                                                                  <span
                                                                    className="MuiSwitch-root"
                                                                  >
                                                                    <WithStyles(ForwardRef(SwitchBase))
                                                                      checked={false}
                                                                      checkedIcon={
                                                                        <span
                                                                          className="MuiSwitch-thumb"
                                                                        />
                                                                      }
                                                                      classes={
                                                                        Object {
                                                                          "checked": "Mui-checked",
                                                                          "disabled": "Mui-disabled",
                                                                          "input": "MuiSwitch-input",
                                                                          "root": "MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                        }
                                                                      }
                                                                      icon={
                                                                        <span
                                                                          className="MuiSwitch-thumb"
                                                                        />
                                                                      }
                                                                      name="lease"
                                                                      onChange={[Function]}
                                                                      type="checkbox"
                                                                    >
                                                                      <ForwardRef(SwitchBase)
                                                                        checked={false}
                                                                        checkedIcon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "checked": "PrivateSwitchBase-checked-9 Mui-checked",
                                                                            "disabled": "PrivateSwitchBase-disabled-10 Mui-disabled",
                                                                            "input": "PrivateSwitchBase-input-11 MuiSwitch-input",
                                                                            "root": "PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                          }
                                                                        }
                                                                        icon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        name="lease"
                                                                        onChange={[Function]}
                                                                        type="checkbox"
                                                                      >
                                                                        <WithStyles(ForwardRef(IconButton))
                                                                          className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                          component="span"
                                                                          onBlur={[Function]}
                                                                          onFocus={[Function]}
                                                                          tabIndex={null}
                                                                        >
                                                                          <ForwardRef(IconButton)
                                                                            className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                            classes={
                                                                              Object {
                                                                                "colorInherit": "MuiIconButton-colorInherit",
                                                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                "disabled": "Mui-disabled",
                                                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                "edgeStart": "MuiIconButton-edgeStart",
                                                                                "label": "MuiIconButton-label",
                                                                                "root": "MuiIconButton-root",
                                                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                                                              }
                                                                            }
                                                                            component="span"
                                                                            onBlur={[Function]}
                                                                            onFocus={[Function]}
                                                                            tabIndex={null}
                                                                          >
                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                              centerRipple={true}
                                                                              className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                              component="span"
                                                                              disabled={false}
                                                                              focusRipple={true}
                                                                              onBlur={[Function]}
                                                                              onFocus={[Function]}
                                                                              tabIndex={null}
                                                                            >
                                                                              <ForwardRef(ButtonBase)
                                                                                centerRipple={true}
                                                                                className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                                classes={
                                                                                  Object {
                                                                                    "disabled": "Mui-disabled",
                                                                                    "focusVisible": "Mui-focusVisible",
                                                                                    "root": "MuiButtonBase-root",
                                                                                  }
                                                                                }
                                                                                component="span"
                                                                                disabled={false}
                                                                                focusRipple={true}
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                tabIndex={null}
                                                                              >
                                                                                <span
                                                                                  aria-disabled={false}
                                                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary"
                                                                                  onBlur={[Function]}
                                                                                  onDragLeave={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onKeyUp={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onMouseLeave={[Function]}
                                                                                  onMouseUp={[Function]}
                                                                                  onTouchEnd={[Function]}
                                                                                  onTouchMove={[Function]}
                                                                                  onTouchStart={[Function]}
                                                                                  tabIndex={null}
                                                                                >
                                                                                  <span
                                                                                    className="MuiIconButton-label"
                                                                                  >
                                                                                    <input
                                                                                      checked={false}
                                                                                      className="PrivateSwitchBase-input-11 MuiSwitch-input"
                                                                                      name="lease"
                                                                                      onChange={[Function]}
                                                                                      type="checkbox"
                                                                                    />
                                                                                    <span
                                                                                      className="MuiSwitch-thumb"
                                                                                    />
                                                                                  </span>
                                                                                  <WithStyles(memo)
                                                                                    center={true}
                                                                                  >
                                                                                    <ForwardRef(TouchRipple)
                                                                                      center={true}
                                                                                      classes={
                                                                                        Object {
                                                                                          "child": "MuiTouchRipple-child",
                                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                          "root": "MuiTouchRipple-root",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTouchRipple-root"
                                                                                      >
                                                                                        <TransitionGroup
                                                                                          childFactory={[Function]}
                                                                                          component={null}
                                                                                          exit={true}
                                                                                        />
                                                                                      </span>
                                                                                    </ForwardRef(TouchRipple)>
                                                                                  </WithStyles(memo)>
                                                                                </span>
                                                                              </ForwardRef(ButtonBase)>
                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                          </ForwardRef(IconButton)>
                                                                        </WithStyles(ForwardRef(IconButton))>
                                                                      </ForwardRef(SwitchBase)>
                                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                                    <span
                                                                      className="MuiSwitch-track"
                                                                    />
                                                                  </span>
                                                                </ForwardRef(Switch)>
                                                              </WithStyles(ForwardRef(Switch))>
                                                            </div>
                                                          </Styled(MuiBox)>
                                                        </div>
                                                      </Styled(MuiBox)>
                                                    </div>
                                                  </ForwardRef(Paper)>
                                                </WithStyles(ForwardRef(Paper))>
                                              </ForwardRef(Card)>
                                            </WithStyles(ForwardRef(Card))>
                                          </div>
                                        </ForwardRef(Grid)>
                                      </WithStyles(ForwardRef(Grid))>
                                      <WithStyles(ForwardRef(Grid))
                                        item={true}
                                        xs={12}
                                      >
                                        <ForwardRef(Grid)
                                          classes={
                                            Object {
                                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                              "container": "MuiGrid-container",
                                              "direction-xs-column": "MuiGrid-direction-xs-column",
                                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                              "grid-lg-1": "MuiGrid-grid-lg-1",
                                              "grid-lg-10": "MuiGrid-grid-lg-10",
                                              "grid-lg-11": "MuiGrid-grid-lg-11",
                                              "grid-lg-12": "MuiGrid-grid-lg-12",
                                              "grid-lg-2": "MuiGrid-grid-lg-2",
                                              "grid-lg-3": "MuiGrid-grid-lg-3",
                                              "grid-lg-4": "MuiGrid-grid-lg-4",
                                              "grid-lg-5": "MuiGrid-grid-lg-5",
                                              "grid-lg-6": "MuiGrid-grid-lg-6",
                                              "grid-lg-7": "MuiGrid-grid-lg-7",
                                              "grid-lg-8": "MuiGrid-grid-lg-8",
                                              "grid-lg-9": "MuiGrid-grid-lg-9",
                                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                              "grid-lg-true": "MuiGrid-grid-lg-true",
                                              "grid-md-1": "MuiGrid-grid-md-1",
                                              "grid-md-10": "MuiGrid-grid-md-10",
                                              "grid-md-11": "MuiGrid-grid-md-11",
                                              "grid-md-12": "MuiGrid-grid-md-12",
                                              "grid-md-2": "MuiGrid-grid-md-2",
                                              "grid-md-3": "MuiGrid-grid-md-3",
                                              "grid-md-4": "MuiGrid-grid-md-4",
                                              "grid-md-5": "MuiGrid-grid-md-5",
                                              "grid-md-6": "MuiGrid-grid-md-6",
                                              "grid-md-7": "MuiGrid-grid-md-7",
                                              "grid-md-8": "MuiGrid-grid-md-8",
                                              "grid-md-9": "MuiGrid-grid-md-9",
                                              "grid-md-auto": "MuiGrid-grid-md-auto",
                                              "grid-md-true": "MuiGrid-grid-md-true",
                                              "grid-sm-1": "MuiGrid-grid-sm-1",
                                              "grid-sm-10": "MuiGrid-grid-sm-10",
                                              "grid-sm-11": "MuiGrid-grid-sm-11",
                                              "grid-sm-12": "MuiGrid-grid-sm-12",
                                              "grid-sm-2": "MuiGrid-grid-sm-2",
                                              "grid-sm-3": "MuiGrid-grid-sm-3",
                                              "grid-sm-4": "MuiGrid-grid-sm-4",
                                              "grid-sm-5": "MuiGrid-grid-sm-5",
                                              "grid-sm-6": "MuiGrid-grid-sm-6",
                                              "grid-sm-7": "MuiGrid-grid-sm-7",
                                              "grid-sm-8": "MuiGrid-grid-sm-8",
                                              "grid-sm-9": "MuiGrid-grid-sm-9",
                                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                              "grid-sm-true": "MuiGrid-grid-sm-true",
                                              "grid-xl-1": "MuiGrid-grid-xl-1",
                                              "grid-xl-10": "MuiGrid-grid-xl-10",
                                              "grid-xl-11": "MuiGrid-grid-xl-11",
                                              "grid-xl-12": "MuiGrid-grid-xl-12",
                                              "grid-xl-2": "MuiGrid-grid-xl-2",
                                              "grid-xl-3": "MuiGrid-grid-xl-3",
                                              "grid-xl-4": "MuiGrid-grid-xl-4",
                                              "grid-xl-5": "MuiGrid-grid-xl-5",
                                              "grid-xl-6": "MuiGrid-grid-xl-6",
                                              "grid-xl-7": "MuiGrid-grid-xl-7",
                                              "grid-xl-8": "MuiGrid-grid-xl-8",
                                              "grid-xl-9": "MuiGrid-grid-xl-9",
                                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                              "grid-xl-true": "MuiGrid-grid-xl-true",
                                              "grid-xs-1": "MuiGrid-grid-xs-1",
                                              "grid-xs-10": "MuiGrid-grid-xs-10",
                                              "grid-xs-11": "MuiGrid-grid-xs-11",
                                              "grid-xs-12": "MuiGrid-grid-xs-12",
                                              "grid-xs-2": "MuiGrid-grid-xs-2",
                                              "grid-xs-3": "MuiGrid-grid-xs-3",
                                              "grid-xs-4": "MuiGrid-grid-xs-4",
                                              "grid-xs-5": "MuiGrid-grid-xs-5",
                                              "grid-xs-6": "MuiGrid-grid-xs-6",
                                              "grid-xs-7": "MuiGrid-grid-xs-7",
                                              "grid-xs-8": "MuiGrid-grid-xs-8",
                                              "grid-xs-9": "MuiGrid-grid-xs-9",
                                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                              "grid-xs-true": "MuiGrid-grid-xs-true",
                                              "item": "MuiGrid-item",
                                              "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                              "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                              "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                              "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                              "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                              "root": "MuiGrid-root",
                                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                            }
                                          }
                                          item={true}
                                          xs={12}
                                        >
                                          <div
                                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                                          >
                                            <WithStyles(ForwardRef(Card))
                                              className="main-setting-box"
                                            >
                                              <ForwardRef(Card)
                                                className="main-setting-box"
                                                classes={
                                                  Object {
                                                    "root": "MuiCard-root",
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(Paper))
                                                  className="MuiCard-root main-setting-box"
                                                  elevation={1}
                                                >
                                                  <ForwardRef(Paper)
                                                    className="MuiCard-root main-setting-box"
                                                    classes={
                                                      Object {
                                                        "elevation0": "MuiPaper-elevation0",
                                                        "elevation1": "MuiPaper-elevation1",
                                                        "elevation10": "MuiPaper-elevation10",
                                                        "elevation11": "MuiPaper-elevation11",
                                                        "elevation12": "MuiPaper-elevation12",
                                                        "elevation13": "MuiPaper-elevation13",
                                                        "elevation14": "MuiPaper-elevation14",
                                                        "elevation15": "MuiPaper-elevation15",
                                                        "elevation16": "MuiPaper-elevation16",
                                                        "elevation17": "MuiPaper-elevation17",
                                                        "elevation18": "MuiPaper-elevation18",
                                                        "elevation19": "MuiPaper-elevation19",
                                                        "elevation2": "MuiPaper-elevation2",
                                                        "elevation20": "MuiPaper-elevation20",
                                                        "elevation21": "MuiPaper-elevation21",
                                                        "elevation22": "MuiPaper-elevation22",
                                                        "elevation23": "MuiPaper-elevation23",
                                                        "elevation24": "MuiPaper-elevation24",
                                                        "elevation3": "MuiPaper-elevation3",
                                                        "elevation4": "MuiPaper-elevation4",
                                                        "elevation5": "MuiPaper-elevation5",
                                                        "elevation6": "MuiPaper-elevation6",
                                                        "elevation7": "MuiPaper-elevation7",
                                                        "elevation8": "MuiPaper-elevation8",
                                                        "elevation9": "MuiPaper-elevation9",
                                                        "outlined": "MuiPaper-outlined",
                                                        "root": "MuiPaper-root",
                                                        "rounded": "MuiPaper-rounded",
                                                      }
                                                    }
                                                    elevation={1}
                                                  >
                                                    <div
                                                      className="MuiPaper-root MuiCard-root main-setting-box MuiPaper-elevation1 MuiPaper-rounded"
                                                    >
                                                      <Styled(MuiBox)
                                                        className="card-box-setting"
                                                      >
                                                        <div
                                                          className="MuiBox-root MuiBox-root-15 card-box-setting"
                                                        >
                                                          <Styled(MuiBox)
                                                            className="setting-content-box"
                                                          >
                                                            <div
                                                              className="MuiBox-root MuiBox-root-16 setting-content-box"
                                                            >
                                                              <h4 />
                                                              <WithStyles(ForwardRef(Switch))
                                                                checked={true}
                                                                color="primary"
                                                                name="fee"
                                                                onChange={[Function]}
                                                              >
                                                                <ForwardRef(Switch)
                                                                  checked={true}
                                                                  classes={
                                                                    Object {
                                                                      "checked": "Mui-checked",
                                                                      "colorPrimary": "MuiSwitch-colorPrimary",
                                                                      "colorSecondary": "MuiSwitch-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "edgeEnd": "MuiSwitch-edgeEnd",
                                                                      "edgeStart": "MuiSwitch-edgeStart",
                                                                      "input": "MuiSwitch-input",
                                                                      "root": "MuiSwitch-root",
                                                                      "sizeSmall": "MuiSwitch-sizeSmall",
                                                                      "switchBase": "MuiSwitch-switchBase",
                                                                      "thumb": "MuiSwitch-thumb",
                                                                      "track": "MuiSwitch-track",
                                                                    }
                                                                  }
                                                                  color="primary"
                                                                  name="fee"
                                                                  onChange={[Function]}
                                                                >
                                                                  <span
                                                                    className="MuiSwitch-root"
                                                                  >
                                                                    <WithStyles(ForwardRef(SwitchBase))
                                                                      checked={true}
                                                                      checkedIcon={
                                                                        <span
                                                                          className="MuiSwitch-thumb"
                                                                        />
                                                                      }
                                                                      classes={
                                                                        Object {
                                                                          "checked": "Mui-checked",
                                                                          "disabled": "Mui-disabled",
                                                                          "input": "MuiSwitch-input",
                                                                          "root": "MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                        }
                                                                      }
                                                                      icon={
                                                                        <span
                                                                          className="MuiSwitch-thumb"
                                                                        />
                                                                      }
                                                                      name="fee"
                                                                      onChange={[Function]}
                                                                      type="checkbox"
                                                                    >
                                                                      <ForwardRef(SwitchBase)
                                                                        checked={true}
                                                                        checkedIcon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        classes={
                                                                          Object {
                                                                            "checked": "PrivateSwitchBase-checked-9 Mui-checked",
                                                                            "disabled": "PrivateSwitchBase-disabled-10 Mui-disabled",
                                                                            "input": "PrivateSwitchBase-input-11 MuiSwitch-input",
                                                                            "root": "PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary",
                                                                          }
                                                                        }
                                                                        icon={
                                                                          <span
                                                                            className="MuiSwitch-thumb"
                                                                          />
                                                                        }
                                                                        name="fee"
                                                                        onChange={[Function]}
                                                                        type="checkbox"
                                                                      >
                                                                        <WithStyles(ForwardRef(IconButton))
                                                                          className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-9 Mui-checked"
                                                                          component="span"
                                                                          onBlur={[Function]}
                                                                          onFocus={[Function]}
                                                                          tabIndex={null}
                                                                        >
                                                                          <ForwardRef(IconButton)
                                                                            className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-9 Mui-checked"
                                                                            classes={
                                                                              Object {
                                                                                "colorInherit": "MuiIconButton-colorInherit",
                                                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                "disabled": "Mui-disabled",
                                                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                "edgeStart": "MuiIconButton-edgeStart",
                                                                                "label": "MuiIconButton-label",
                                                                                "root": "MuiIconButton-root",
                                                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                                                              }
                                                                            }
                                                                            component="span"
                                                                            onBlur={[Function]}
                                                                            onFocus={[Function]}
                                                                            tabIndex={null}
                                                                          >
                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                              centerRipple={true}
                                                                              className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-9 Mui-checked"
                                                                              component="span"
                                                                              disabled={false}
                                                                              focusRipple={true}
                                                                              onBlur={[Function]}
                                                                              onFocus={[Function]}
                                                                              tabIndex={null}
                                                                            >
                                                                              <ForwardRef(ButtonBase)
                                                                                centerRipple={true}
                                                                                className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-9 Mui-checked"
                                                                                classes={
                                                                                  Object {
                                                                                    "disabled": "Mui-disabled",
                                                                                    "focusVisible": "Mui-focusVisible",
                                                                                    "root": "MuiButtonBase-root",
                                                                                  }
                                                                                }
                                                                                component="span"
                                                                                disabled={false}
                                                                                focusRipple={true}
                                                                                onBlur={[Function]}
                                                                                onFocus={[Function]}
                                                                                tabIndex={null}
                                                                              >
                                                                                <span
                                                                                  aria-disabled={false}
                                                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorPrimary PrivateSwitchBase-checked-9 Mui-checked"
                                                                                  onBlur={[Function]}
                                                                                  onDragLeave={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onKeyUp={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onMouseLeave={[Function]}
                                                                                  onMouseUp={[Function]}
                                                                                  onTouchEnd={[Function]}
                                                                                  onTouchMove={[Function]}
                                                                                  onTouchStart={[Function]}
                                                                                  tabIndex={null}
                                                                                >
                                                                                  <span
                                                                                    className="MuiIconButton-label"
                                                                                  >
                                                                                    <input
                                                                                      checked={true}
                                                                                      className="PrivateSwitchBase-input-11 MuiSwitch-input"
                                                                                      name="fee"
                                                                                      onChange={[Function]}
                                                                                      type="checkbox"
                                                                                    />
                                                                                    <span
                                                                                      className="MuiSwitch-thumb"
                                                                                    />
                                                                                  </span>
                                                                                  <WithStyles(memo)
                                                                                    center={true}
                                                                                  >
                                                                                    <ForwardRef(TouchRipple)
                                                                                      center={true}
                                                                                      classes={
                                                                                        Object {
                                                                                          "child": "MuiTouchRipple-child",
                                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                          "root": "MuiTouchRipple-root",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTouchRipple-root"
                                                                                      >
                                                                                        <TransitionGroup
                                                                                          childFactory={[Function]}
                                                                                          component={null}
                                                                                          exit={true}
                                                                                        />
                                                                                      </span>
                                                                                    </ForwardRef(TouchRipple)>
                                                                                  </WithStyles(memo)>
                                                                                </span>
                                                                              </ForwardRef(ButtonBase)>
                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                          </ForwardRef(IconButton)>
                                                                        </WithStyles(ForwardRef(IconButton))>
                                                                      </ForwardRef(SwitchBase)>
                                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                                    <span
                                                                      className="MuiSwitch-track"
                                                                    />
                                                                  </span>
                                                                </ForwardRef(Switch)>
                                                              </WithStyles(ForwardRef(Switch))>
                                                            </div>
                                                          </Styled(MuiBox)>
                                                        </div>
                                                      </Styled(MuiBox)>
                                                    </div>
                                                  </ForwardRef(Paper)>
                                                </WithStyles(ForwardRef(Paper))>
                                              </ForwardRef(Card)>
                                            </WithStyles(ForwardRef(Card))>
                                          </div>
                                        </ForwardRef(Grid)>
                                      </WithStyles(ForwardRef(Grid))>
                                    </div>
                                  </ForwardRef(Grid)>
                                </WithStyles(ForwardRef(Grid))>
                              </div>
                            </Styled(MuiBox)>
                          </div>
                        </ForwardRef(Container)>
                      </WithStyles(ForwardRef(Container))>
                    </div>
                  </Styled(MuiBox)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
            <WithStyles(ForwardRef(Grid))
              item={true}
              md={5}
              xs={12}
            >
              <ForwardRef(Grid)
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={5}
                xs={12}
              >
                <div
                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-5"
                >
                  <SidebarImageComponent>
                    <Styled(MuiBox)
                      className="right-block right-image"
                      display={
                        Object {
                          "md": "flex",
                          "xs": "none",
                        }
                      }
                    >
                      <div
                        className="MuiBox-root MuiBox-root-17 right-block right-image"
                      >
                        <img
                          alt=""
                          className="building-logo"
                        />
                      </div>
                    </Styled(MuiBox)>
                  </SidebarImageComponent>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
          </div>
        </ForwardRef(Grid)>
      </WithStyles(ForwardRef(Grid))>
    </div>
  </Styled(MuiBox)>
  <WithStyles(ForwardRef(Dialog))
    className="lease-expiration-modal personal"
    fullWidth={true}
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(Dialog)
      className="lease-expiration-modal personal"
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      fullWidth={true}
      onClose={[Function]}
      open={false}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "displayName": "WithStyles(ForwardRef(Backdrop))",
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root lease-expiration-modal personal"
        closeAfterTransition={true}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={false}
      />
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
  <WithStyles(ForwardRef(Dialog))
    className="delete-document personal lease-expiration-set"
    fullWidth={true}
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(Dialog)
      className="delete-document personal lease-expiration-set"
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      fullWidth={true}
      onClose={[Function]}
      open={false}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "displayName": "WithStyles(ForwardRef(Backdrop))",
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root delete-document personal lease-expiration-set"
        closeAfterTransition={true}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={false}
      />
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
</EmailAlerts>
`;
