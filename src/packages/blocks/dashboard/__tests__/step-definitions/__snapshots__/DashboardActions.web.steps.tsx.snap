// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DashboardActions User navigates to DashboardActions 1`] = `
<withRouter(DashboardActions)
  classes={
    Object {
      "generalDashboard": Object {
        "& .action-card": Object {
          "& .action-info-box": Object {
            "& .action-content-box": Object {
              "alignItems": "center",
              "display": "flex",
              "gap": "50px",
            },
            "& .action-info": Object {
              "& p": Object {
                "fontWeight": "600",
              },
              "& span": Object {
                "color": "#FC8434",
                "fontSize": "14px",
              },
              "alignItems": "center",
              "display": "flex",
              "gap": "15px",
            },
            "& button": Object {
              "background": "#2B6FED",
              "borderRadius": "8px",
              "color": "white",
              "fontWeight": "600",
              "padding": "7px 18px",
            },
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
          },
          "& p.description": Object {
            "margin": "16px 0",
          },
          "background": "#fff",
          "borderRadius": 8,
          "boxShadow": "none",
          "padding": "20px",
        },
        "& .action-filter-box": Object {
          "& button": Object {
            "background": "#2B6FED",
            "borderRadius": "8px",
            "color": "white",
            "fontWeight": "600",
            "padding": "7px 18px",
          },
          "alignItems": "center",
          "display": "flex",
          "gap": "18px",
          "margin": "15px 0",
        },
        "& .budget-table-content-box": Object {
          "& .body": Object {
            "& .table-content": Object {
              "& span": Object {
                "fontWeight": "600",
              },
              "alignItems": "center",
              "borderTop": "1px solid #F4F6FB",
              "display": "flex",
              "justifyContent": "space-between",
              "padding": "10px 0",
            },
            "& .table-header": Object {
              "& span": Object {
                "color": "#999",
              },
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "padding": "10px 0",
            },
            "padding": "20px 15px",
          },
          "& .footer": Object {
            "& h4": Object {
              "color": "#FC8434",
              "fontSize": "18px",
              "fontWeight": "600",
            },
            "& p": Object {
              "fontSize": "18px",
              "fontWeight": "600",
            },
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
            "padding": "20px 15px",
          },
          "& .header": Object {
            "fontSize": "24px",
            "fontWeight": "600",
            "padding": "20px 15px",
          },
          "& hr": Object {
            "color": "#F4F6FB",
            "margin": "0",
          },
          "background": "#fff",
          "borderRadius": 8,
          "boxShadow": "none",
        },
        "& .chairman-filter": Object {
          "& .action-filter-box": Object {
            "margin": "0",
          },
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "margin": "10px 0 15px 0",
          "width": "100%",
        },
        "& .configuration-day": Object {
          "& .config": Object {
            "color": "#2B6FED",
            "cursor": "pointer",
            "fontWeight": "600",
          },
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
        },
        "& .content-boxes": Object {
          "background": "white",
          "borderRadius": "8px",
          "marginTop": "30px",
        },
        "& .content-boxes .MuiPaginationItem-page.Mui-selected": Object {
          "background": "#FC8434",
          "border": "0",
          "color": "white",
        },
        "& .content-boxes .MuiTableCell-head": Object {
          "color": "#9198a3",
        },
        "& .content-boxes .search-unit .MuiInput-root": Object {
          "border": "1px solid lightgray",
          "borderRadius": "8px",
          "padding": "5px 10px",
        },
        "& .content-boxes .search-unit .MuiInput-root::after": Object {
          "border": 0,
          "content": "",
          "outline": "none",
          "position": "unset",
        },
        "& .content-boxes .search-unit .MuiInput-root::before": Object {
          "border": 0,
          "content": "",
          "outline": "none",
          "position": "unset",
        },
        "& .content-boxes .search-unit svg": Object {
          "fill": "darkgrey",
        },
        "& .content-boxes .top-content": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "padding": "20px",
        },
        "& .content-boxes .top-content .heading h2": Object {
          "fontSize": "22px",
          "fontWeight": 600,
        },
        "& .content-boxes .top-content .right-content": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "5px",
        },
        "& .content-boxes .top-content .right-content span": Object {
          "color": "#FC8434",
          "fontWeight": 600,
        },
        "& .content-boxes .unit-pagination": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "padding": "20px",
        },
        "& .content-boxes .unit-pagination p": Object {
          "fontWeight": 600,
        },
        "& .content-boxes .unit-pagination p span": Object {
          "color": "#FC8434",
          "fontWeight": 600,
        },
        "& .content-boxes .unit-select": Object {
          "border": "1px solid lightgray",
          "borderRadius": "8px",
          "fontWeight": 600,
          "padding": "12px 40px 12px 10px",
        },
        "& .content-boxes .unit-table th": Object {
          "fontWeight": 600,
        },
        "& .content-boxes.ticket-table": Object {
          "marginTop": "0",
        },
        "& .content-boxes.ticket-table .status": Object {
          "background": "#D4FFE3",
          "borderRadius": "25px",
          "color": "#1EC65B",
          "fontSize": "14px",
          "fontWeight": 600,
          "padding": "5px 10px",
        },
        "& .content-boxes.ticket-table input": Object {
          "width": "220px",
        },
        "& .dashboard-card-box": Object {
          "& .card-bottom-info": Object {
            "alignItems": "center",
            "display": "flex",
            "gap": "10px",
          },
          "& .card-image": Object {
            "& img": Object {
              "height": "28px",
              "width": "28px",
            },
            "alignItems": "center",
            "border": "1px solid #d9d4d3",
            "borderRadius": "50%",
            "display": "flex",
            "height": "40px",
            "justifyContent": "center",
            "padding": "10px",
            "width": "40px",
          },
          "& .info-box": Object {
            "& span": Object {
              "color": "#FC8434",
              "fontWeight": "600",
            },
            "alignItems": "center",
            "display": "flex",
            "gap": "8px",
          },
          "& h4": Object {
            "fontSize": "17px",
            "fontWeight": "600",
            "margin": "12px 0",
          },
          "background": "#fff",
          "borderRadius": 8,
          "boxShadow": "none",
          "padding": "40px 20px 20px 20px",
        },
        "& .event-card": Object {
          "& .event-content-box": Object {
            "& .event-content": Object {
              "alignItems": "center",
              "display": "flex",
              "gap": "10px",
              "margin": "5px 0",
            },
            "& .meeting-state-box": Object {
              "& .meeting-state": Object {
                "alignItems": "center",
                "display": "flex",
                "gap": "10px",
              },
              "alignItems": "center",
              "display": "flex",
              "gap": "20px",
            },
          },
          "& .event-heading": Object {
            "& h4": Object {
              "marginBottom": "5px",
            },
            "& span": Object {
              "background": "#D4FFE3",
              "borderRadius": "25px",
              "color": "#1EC65B",
              "fontSize": "14px",
              "fontWeight": 600,
              "padding": "5px 10px",
            },
            "alignItems": "center",
            "display": "flex",
            "gap": "10px",
            "justifyContent": "space-between",
            "marginBottom": "13px",
          },
          "background": "#fff",
          "borderRadius": 8,
          "boxShadow": "none",
          "padding": "20px 20px 20px 20px",
        },
        "& .navigation": Object {
          "& .sub-heading-box": Object {
            "& h5": Object {
              "fontSize": "22px",
              "fontWeight": "600",
            },
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
            "marginBottom": "10px",
            "marginTop": "10px",
            "width": "100%",
          },
          "alignItems": "flex-start",
          "display": "flex",
          "flexDirection": "column",
        },
        "& .select-box": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "14px",
        },
        "& .select-year": Object {
          "& select": Object {
            "background": "#fff !important",
          },
          "background": "#fff",
          "border": "1px solid lightgrey",
          "borderRadius": 5,
          "padding": "2px 12px",
        },
        "& .select-year:after": Object {
          "border": 0,
          "content": "",
          "outline": "none",
          "position": "unset",
        },
        "& .select-year:before": Object {
          "border": 0,
          "content": "",
          "outline": "none",
          "position": "unset",
        },
        "& .upcoming-events-box": Object {
          "marginBottom": "30px",
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
        "background": "rgb(244, 247, 255)",
      },
      "ownerDashboard": Object {
        "& .MuiCard-root": Object {
          "boxShadow": "none",
          "padding": "20px 0",
          "textAlign": "center",
        },
        "& .MuiCard-root .content-box": Object {
          "alignItems": "flex-end",
          "display": "flex",
          "justifyContent": "space-evenly",
        },
        "& .MuiCard-root .content-box .center-content": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "width": "20%",
        },
        "& .MuiCard-root .content-box .center-content .image": Object {
          "marginBottom": "0px",
        },
        "& .MuiCard-root .content-box .center-content .image.text": Object {
          "padding": "15px",
        },
        "& .MuiCard-root .content-box .center-content .image.text h4": Object {
          "color": "#FD9048",
          "marginBottom": "0px",
        },
        "& .MuiCard-root .content-box .center-content .vertical-line": Object {
          "background": "#F8F9FE",
          "height": "30px",
          "width": "3px",
        },
        "& .MuiCard-root .content-box .left-content": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "marginBottom": "20px",
          "textAlign": "center",
          "width": "40%",
        },
        "& .MuiCard-root .content-box .left-content .state": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
        },
        "& .MuiCard-root .content-box .right-content": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "marginBottom": "20px",
          "textAlign": "center",
          "width": "40%",
        },
        "& .MuiCard-root .content-box .right-content .state": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
        },
        "& .MuiCard-root .image": Object {
          "border": "3px solid #F8F9FE",
          "borderRadius": "50%",
          "display": "inline-block",
          "marginBottom": "20px",
          "padding": "20px",
        },
        "& .MuiCard-root .state p": Object {
          "marginBottom": "5px",
          "textTransform": "capitalize",
        },
        "& .MuiCard-root button": Object {
          "background": "#F6F6F6",
          "borderRadius": "25px",
          "color": "#8A8A8A",
          "fontWeight": "600",
          "minWidth": "125px",
          "padding": "5px 11px",
        },
        "& .MuiCard-root button.yellow": Object {
          "background": "#FEF9F3",
          "color": "#FD9048",
        },
        "& .MuiCard-root h4": Object {
          "marginBottom": "20px",
          "textTransform": "capitalize",
        },
        "& .MuiCard-root.big-box": Object {
          "paddingBottom": "0",
        },
        "& .dashboard": Object {
          "height": "85vh",
          "overflowX": "hidden",
          "overflowY": "auto",
        },
        "& .dashboard .title": Object {
          "paddingBottom": "5px",
        },
        "& .dashboard .title h5": Object {
          "fontWeight": "600",
        },
        "& .menu": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "marginBottom": "18px",
          "padding": "10px 20px",
        },
        "& .menu .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        },
        "& .menu .left-icon span.complex-name": Object {
          "color": "blue",
          "marginLeft": "10px",
        },
        "& .menu .right-icon a": Object {
          "marginLeft": "15px",
        },
        "& .notification-slider": Object {
          "marginBottom": "20px",
          "width": "100%",
        },
        "& .notification-slider .slick-list .slick-track": Object {
          "display": "flex",
          "gap": "20px",
        },
        "& .notification-slider .slick-next": Object {
          "display": "none !important",
        },
        "& .notification-slider .slick-prev": Object {
          "display": "none !important",
        },
        "& .notification-slider .slide-box": Object {
          "background": "white",
          "borderRadius": "8px",
          "cursor": "pointer",
          "padding": "20px",
          "width": "95% !important",
        },
        "& .notification-slider .slide-box .heading": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "15px",
        },
        "& .notification-slider .slide-box .heading span": Object {
          "fontWeight": "600",
        },
        "& .notification-slider .slide-box p": Object {
          "marginTop": "10px",
        },
        "& .right-image": Object {
          "padding": "25px 60px",
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
      },
    }
  }
  history={[MockFunction]}
  id="DashboardActions"
  location={[MockFunction]}
  match={[MockFunction]}
  navigation={
    Object {
      "getParam": [MockFunction],
      "goBack": [MockFunction],
      "navigate": [MockFunction],
    }
  }
  t={[Function]}
>
  <Route>
    <DashboardActions
      classes={
        Object {
          "generalDashboard": Object {
            "& .action-card": Object {
              "& .action-info-box": Object {
                "& .action-content-box": Object {
                  "alignItems": "center",
                  "display": "flex",
                  "gap": "50px",
                },
                "& .action-info": Object {
                  "& p": Object {
                    "fontWeight": "600",
                  },
                  "& span": Object {
                    "color": "#FC8434",
                    "fontSize": "14px",
                  },
                  "alignItems": "center",
                  "display": "flex",
                  "gap": "15px",
                },
                "& button": Object {
                  "background": "#2B6FED",
                  "borderRadius": "8px",
                  "color": "white",
                  "fontWeight": "600",
                  "padding": "7px 18px",
                },
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
              },
              "& p.description": Object {
                "margin": "16px 0",
              },
              "background": "#fff",
              "borderRadius": 8,
              "boxShadow": "none",
              "padding": "20px",
            },
            "& .action-filter-box": Object {
              "& button": Object {
                "background": "#2B6FED",
                "borderRadius": "8px",
                "color": "white",
                "fontWeight": "600",
                "padding": "7px 18px",
              },
              "alignItems": "center",
              "display": "flex",
              "gap": "18px",
              "margin": "15px 0",
            },
            "& .budget-table-content-box": Object {
              "& .body": Object {
                "& .table-content": Object {
                  "& span": Object {
                    "fontWeight": "600",
                  },
                  "alignItems": "center",
                  "borderTop": "1px solid #F4F6FB",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "padding": "10px 0",
                },
                "& .table-header": Object {
                  "& span": Object {
                    "color": "#999",
                  },
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "padding": "10px 0",
                },
                "padding": "20px 15px",
              },
              "& .footer": Object {
                "& h4": Object {
                  "color": "#FC8434",
                  "fontSize": "18px",
                  "fontWeight": "600",
                },
                "& p": Object {
                  "fontSize": "18px",
                  "fontWeight": "600",
                },
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
                "padding": "20px 15px",
              },
              "& .header": Object {
                "fontSize": "24px",
                "fontWeight": "600",
                "padding": "20px 15px",
              },
              "& hr": Object {
                "color": "#F4F6FB",
                "margin": "0",
              },
              "background": "#fff",
              "borderRadius": 8,
              "boxShadow": "none",
            },
            "& .chairman-filter": Object {
              "& .action-filter-box": Object {
                "margin": "0",
              },
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "margin": "10px 0 15px 0",
              "width": "100%",
            },
            "& .configuration-day": Object {
              "& .config": Object {
                "color": "#2B6FED",
                "cursor": "pointer",
                "fontWeight": "600",
              },
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
            },
            "& .content-boxes": Object {
              "background": "white",
              "borderRadius": "8px",
              "marginTop": "30px",
            },
            "& .content-boxes .MuiPaginationItem-page.Mui-selected": Object {
              "background": "#FC8434",
              "border": "0",
              "color": "white",
            },
            "& .content-boxes .MuiTableCell-head": Object {
              "color": "#9198a3",
            },
            "& .content-boxes .search-unit .MuiInput-root": Object {
              "border": "1px solid lightgray",
              "borderRadius": "8px",
              "padding": "5px 10px",
            },
            "& .content-boxes .search-unit .MuiInput-root::after": Object {
              "border": 0,
              "content": "",
              "outline": "none",
              "position": "unset",
            },
            "& .content-boxes .search-unit .MuiInput-root::before": Object {
              "border": 0,
              "content": "",
              "outline": "none",
              "position": "unset",
            },
            "& .content-boxes .search-unit svg": Object {
              "fill": "darkgrey",
            },
            "& .content-boxes .top-content": Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "padding": "20px",
            },
            "& .content-boxes .top-content .heading h2": Object {
              "fontSize": "22px",
              "fontWeight": 600,
            },
            "& .content-boxes .top-content .right-content": Object {
              "alignItems": "center",
              "display": "flex",
              "gap": "5px",
            },
            "& .content-boxes .top-content .right-content span": Object {
              "color": "#FC8434",
              "fontWeight": 600,
            },
            "& .content-boxes .unit-pagination": Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "padding": "20px",
            },
            "& .content-boxes .unit-pagination p": Object {
              "fontWeight": 600,
            },
            "& .content-boxes .unit-pagination p span": Object {
              "color": "#FC8434",
              "fontWeight": 600,
            },
            "& .content-boxes .unit-select": Object {
              "border": "1px solid lightgray",
              "borderRadius": "8px",
              "fontWeight": 600,
              "padding": "12px 40px 12px 10px",
            },
            "& .content-boxes .unit-table th": Object {
              "fontWeight": 600,
            },
            "& .content-boxes.ticket-table": Object {
              "marginTop": "0",
            },
            "& .content-boxes.ticket-table .status": Object {
              "background": "#D4FFE3",
              "borderRadius": "25px",
              "color": "#1EC65B",
              "fontSize": "14px",
              "fontWeight": 600,
              "padding": "5px 10px",
            },
            "& .content-boxes.ticket-table input": Object {
              "width": "220px",
            },
            "& .dashboard-card-box": Object {
              "& .card-bottom-info": Object {
                "alignItems": "center",
                "display": "flex",
                "gap": "10px",
              },
              "& .card-image": Object {
                "& img": Object {
                  "height": "28px",
                  "width": "28px",
                },
                "alignItems": "center",
                "border": "1px solid #d9d4d3",
                "borderRadius": "50%",
                "display": "flex",
                "height": "40px",
                "justifyContent": "center",
                "padding": "10px",
                "width": "40px",
              },
              "& .info-box": Object {
                "& span": Object {
                  "color": "#FC8434",
                  "fontWeight": "600",
                },
                "alignItems": "center",
                "display": "flex",
                "gap": "8px",
              },
              "& h4": Object {
                "fontSize": "17px",
                "fontWeight": "600",
                "margin": "12px 0",
              },
              "background": "#fff",
              "borderRadius": 8,
              "boxShadow": "none",
              "padding": "40px 20px 20px 20px",
            },
            "& .event-card": Object {
              "& .event-content-box": Object {
                "& .event-content": Object {
                  "alignItems": "center",
                  "display": "flex",
                  "gap": "10px",
                  "margin": "5px 0",
                },
                "& .meeting-state-box": Object {
                  "& .meeting-state": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "gap": "10px",
                  },
                  "alignItems": "center",
                  "display": "flex",
                  "gap": "20px",
                },
              },
              "& .event-heading": Object {
                "& h4": Object {
                  "marginBottom": "5px",
                },
                "& span": Object {
                  "background": "#D4FFE3",
                  "borderRadius": "25px",
                  "color": "#1EC65B",
                  "fontSize": "14px",
                  "fontWeight": 600,
                  "padding": "5px 10px",
                },
                "alignItems": "center",
                "display": "flex",
                "gap": "10px",
                "justifyContent": "space-between",
                "marginBottom": "13px",
              },
              "background": "#fff",
              "borderRadius": 8,
              "boxShadow": "none",
              "padding": "20px 20px 20px 20px",
            },
            "& .navigation": Object {
              "& .sub-heading-box": Object {
                "& h5": Object {
                  "fontSize": "22px",
                  "fontWeight": "600",
                },
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
                "marginBottom": "10px",
                "marginTop": "10px",
                "width": "100%",
              },
              "alignItems": "flex-start",
              "display": "flex",
              "flexDirection": "column",
            },
            "& .select-box": Object {
              "alignItems": "center",
              "display": "flex",
              "gap": "14px",
            },
            "& .select-year": Object {
              "& select": Object {
                "background": "#fff !important",
              },
              "background": "#fff",
              "border": "1px solid lightgrey",
              "borderRadius": 5,
              "padding": "2px 12px",
            },
            "& .select-year:after": Object {
              "border": 0,
              "content": "",
              "outline": "none",
              "position": "unset",
            },
            "& .select-year:before": Object {
              "border": 0,
              "content": "",
              "outline": "none",
              "position": "unset",
            },
            "& .upcoming-events-box": Object {
              "marginBottom": "30px",
            },
            "& a": Object {
              "textDecoration": "none !important",
            },
            "background": "rgb(244, 247, 255)",
          },
          "ownerDashboard": Object {
            "& .MuiCard-root": Object {
              "boxShadow": "none",
              "padding": "20px 0",
              "textAlign": "center",
            },
            "& .MuiCard-root .content-box": Object {
              "alignItems": "flex-end",
              "display": "flex",
              "justifyContent": "space-evenly",
            },
            "& .MuiCard-root .content-box .center-content": Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "column",
              "width": "20%",
            },
            "& .MuiCard-root .content-box .center-content .image": Object {
              "marginBottom": "0px",
            },
            "& .MuiCard-root .content-box .center-content .image.text": Object {
              "padding": "15px",
            },
            "& .MuiCard-root .content-box .center-content .image.text h4": Object {
              "color": "#FD9048",
              "marginBottom": "0px",
            },
            "& .MuiCard-root .content-box .center-content .vertical-line": Object {
              "background": "#F8F9FE",
              "height": "30px",
              "width": "3px",
            },
            "& .MuiCard-root .content-box .left-content": Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "column",
              "marginBottom": "20px",
              "textAlign": "center",
              "width": "40%",
            },
            "& .MuiCard-root .content-box .left-content .state": Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "column",
            },
            "& .MuiCard-root .content-box .right-content": Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "column",
              "marginBottom": "20px",
              "textAlign": "center",
              "width": "40%",
            },
            "& .MuiCard-root .content-box .right-content .state": Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "column",
            },
            "& .MuiCard-root .image": Object {
              "border": "3px solid #F8F9FE",
              "borderRadius": "50%",
              "display": "inline-block",
              "marginBottom": "20px",
              "padding": "20px",
            },
            "& .MuiCard-root .state p": Object {
              "marginBottom": "5px",
              "textTransform": "capitalize",
            },
            "& .MuiCard-root button": Object {
              "background": "#F6F6F6",
              "borderRadius": "25px",
              "color": "#8A8A8A",
              "fontWeight": "600",
              "minWidth": "125px",
              "padding": "5px 11px",
            },
            "& .MuiCard-root button.yellow": Object {
              "background": "#FEF9F3",
              "color": "#FD9048",
            },
            "& .MuiCard-root h4": Object {
              "marginBottom": "20px",
              "textTransform": "capitalize",
            },
            "& .MuiCard-root.big-box": Object {
              "paddingBottom": "0",
            },
            "& .dashboard": Object {
              "height": "85vh",
              "overflowX": "hidden",
              "overflowY": "auto",
            },
            "& .dashboard .title": Object {
              "paddingBottom": "5px",
            },
            "& .dashboard .title h5": Object {
              "fontWeight": "600",
            },
            "& .menu": Object {
              "alignItems": "center",
              "background": "#FFFFFF",
              "cursor": "pointer",
              "display": "flex",
              "fontWeight": "600",
              "justifyContent": "space-between",
              "marginBottom": "18px",
              "padding": "10px 20px",
            },
            "& .menu .left-icon": Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            },
            "& .menu .left-icon span.complex-name": Object {
              "color": "blue",
              "marginLeft": "10px",
            },
            "& .menu .right-icon a": Object {
              "marginLeft": "15px",
            },
            "& .notification-slider": Object {
              "marginBottom": "20px",
              "width": "100%",
            },
            "& .notification-slider .slick-list .slick-track": Object {
              "display": "flex",
              "gap": "20px",
            },
            "& .notification-slider .slick-next": Object {
              "display": "none !important",
            },
            "& .notification-slider .slick-prev": Object {
              "display": "none !important",
            },
            "& .notification-slider .slide-box": Object {
              "background": "white",
              "borderRadius": "8px",
              "cursor": "pointer",
              "padding": "20px",
              "width": "95% !important",
            },
            "& .notification-slider .slide-box .heading": Object {
              "alignItems": "center",
              "display": "flex",
              "gap": "15px",
            },
            "& .notification-slider .slide-box .heading span": Object {
              "fontWeight": "600",
            },
            "& .notification-slider .slide-box p": Object {
              "marginTop": "10px",
            },
            "& .right-image": Object {
              "padding": "25px 60px",
            },
            "& a": Object {
              "textDecoration": "none !important",
            },
          },
        }
      }
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      id="DashboardActions"
      location={
        Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        }
      }
      match={
        Object {
          "isExact": true,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
      navigation={
        Object {
          "getParam": [MockFunction],
          "goBack": [MockFunction],
          "navigate": [MockFunction],
        }
      }
      t={[Function]}
    >
      <Styled(MuiBox)
        className={
          Object {
            "& .action-card": Object {
              "& .action-info-box": Object {
                "& .action-content-box": Object {
                  "alignItems": "center",
                  "display": "flex",
                  "gap": "50px",
                },
                "& .action-info": Object {
                  "& p": Object {
                    "fontWeight": "600",
                  },
                  "& span": Object {
                    "color": "#FC8434",
                    "fontSize": "14px",
                  },
                  "alignItems": "center",
                  "display": "flex",
                  "gap": "15px",
                },
                "& button": Object {
                  "background": "#2B6FED",
                  "borderRadius": "8px",
                  "color": "white",
                  "fontWeight": "600",
                  "padding": "7px 18px",
                },
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
              },
              "& p.description": Object {
                "margin": "16px 0",
              },
              "background": "#fff",
              "borderRadius": 8,
              "boxShadow": "none",
              "padding": "20px",
            },
            "& .action-filter-box": Object {
              "& button": Object {
                "background": "#2B6FED",
                "borderRadius": "8px",
                "color": "white",
                "fontWeight": "600",
                "padding": "7px 18px",
              },
              "alignItems": "center",
              "display": "flex",
              "gap": "18px",
              "margin": "15px 0",
            },
            "& .budget-table-content-box": Object {
              "& .body": Object {
                "& .table-content": Object {
                  "& span": Object {
                    "fontWeight": "600",
                  },
                  "alignItems": "center",
                  "borderTop": "1px solid #F4F6FB",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "padding": "10px 0",
                },
                "& .table-header": Object {
                  "& span": Object {
                    "color": "#999",
                  },
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "padding": "10px 0",
                },
                "padding": "20px 15px",
              },
              "& .footer": Object {
                "& h4": Object {
                  "color": "#FC8434",
                  "fontSize": "18px",
                  "fontWeight": "600",
                },
                "& p": Object {
                  "fontSize": "18px",
                  "fontWeight": "600",
                },
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
                "padding": "20px 15px",
              },
              "& .header": Object {
                "fontSize": "24px",
                "fontWeight": "600",
                "padding": "20px 15px",
              },
              "& hr": Object {
                "color": "#F4F6FB",
                "margin": "0",
              },
              "background": "#fff",
              "borderRadius": 8,
              "boxShadow": "none",
            },
            "& .chairman-filter": Object {
              "& .action-filter-box": Object {
                "margin": "0",
              },
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "margin": "10px 0 15px 0",
              "width": "100%",
            },
            "& .configuration-day": Object {
              "& .config": Object {
                "color": "#2B6FED",
                "cursor": "pointer",
                "fontWeight": "600",
              },
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
            },
            "& .content-boxes": Object {
              "background": "white",
              "borderRadius": "8px",
              "marginTop": "30px",
            },
            "& .content-boxes .MuiPaginationItem-page.Mui-selected": Object {
              "background": "#FC8434",
              "border": "0",
              "color": "white",
            },
            "& .content-boxes .MuiTableCell-head": Object {
              "color": "#9198a3",
            },
            "& .content-boxes .search-unit .MuiInput-root": Object {
              "border": "1px solid lightgray",
              "borderRadius": "8px",
              "padding": "5px 10px",
            },
            "& .content-boxes .search-unit .MuiInput-root::after": Object {
              "border": 0,
              "content": "",
              "outline": "none",
              "position": "unset",
            },
            "& .content-boxes .search-unit .MuiInput-root::before": Object {
              "border": 0,
              "content": "",
              "outline": "none",
              "position": "unset",
            },
            "& .content-boxes .search-unit svg": Object {
              "fill": "darkgrey",
            },
            "& .content-boxes .top-content": Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "padding": "20px",
            },
            "& .content-boxes .top-content .heading h2": Object {
              "fontSize": "22px",
              "fontWeight": 600,
            },
            "& .content-boxes .top-content .right-content": Object {
              "alignItems": "center",
              "display": "flex",
              "gap": "5px",
            },
            "& .content-boxes .top-content .right-content span": Object {
              "color": "#FC8434",
              "fontWeight": 600,
            },
            "& .content-boxes .unit-pagination": Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "padding": "20px",
            },
            "& .content-boxes .unit-pagination p": Object {
              "fontWeight": 600,
            },
            "& .content-boxes .unit-pagination p span": Object {
              "color": "#FC8434",
              "fontWeight": 600,
            },
            "& .content-boxes .unit-select": Object {
              "border": "1px solid lightgray",
              "borderRadius": "8px",
              "fontWeight": 600,
              "padding": "12px 40px 12px 10px",
            },
            "& .content-boxes .unit-table th": Object {
              "fontWeight": 600,
            },
            "& .content-boxes.ticket-table": Object {
              "marginTop": "0",
            },
            "& .content-boxes.ticket-table .status": Object {
              "background": "#D4FFE3",
              "borderRadius": "25px",
              "color": "#1EC65B",
              "fontSize": "14px",
              "fontWeight": 600,
              "padding": "5px 10px",
            },
            "& .content-boxes.ticket-table input": Object {
              "width": "220px",
            },
            "& .dashboard-card-box": Object {
              "& .card-bottom-info": Object {
                "alignItems": "center",
                "display": "flex",
                "gap": "10px",
              },
              "& .card-image": Object {
                "& img": Object {
                  "height": "28px",
                  "width": "28px",
                },
                "alignItems": "center",
                "border": "1px solid #d9d4d3",
                "borderRadius": "50%",
                "display": "flex",
                "height": "40px",
                "justifyContent": "center",
                "padding": "10px",
                "width": "40px",
              },
              "& .info-box": Object {
                "& span": Object {
                  "color": "#FC8434",
                  "fontWeight": "600",
                },
                "alignItems": "center",
                "display": "flex",
                "gap": "8px",
              },
              "& h4": Object {
                "fontSize": "17px",
                "fontWeight": "600",
                "margin": "12px 0",
              },
              "background": "#fff",
              "borderRadius": 8,
              "boxShadow": "none",
              "padding": "40px 20px 20px 20px",
            },
            "& .event-card": Object {
              "& .event-content-box": Object {
                "& .event-content": Object {
                  "alignItems": "center",
                  "display": "flex",
                  "gap": "10px",
                  "margin": "5px 0",
                },
                "& .meeting-state-box": Object {
                  "& .meeting-state": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "gap": "10px",
                  },
                  "alignItems": "center",
                  "display": "flex",
                  "gap": "20px",
                },
              },
              "& .event-heading": Object {
                "& h4": Object {
                  "marginBottom": "5px",
                },
                "& span": Object {
                  "background": "#D4FFE3",
                  "borderRadius": "25px",
                  "color": "#1EC65B",
                  "fontSize": "14px",
                  "fontWeight": 600,
                  "padding": "5px 10px",
                },
                "alignItems": "center",
                "display": "flex",
                "gap": "10px",
                "justifyContent": "space-between",
                "marginBottom": "13px",
              },
              "background": "#fff",
              "borderRadius": 8,
              "boxShadow": "none",
              "padding": "20px 20px 20px 20px",
            },
            "& .navigation": Object {
              "& .sub-heading-box": Object {
                "& h5": Object {
                  "fontSize": "22px",
                  "fontWeight": "600",
                },
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
                "marginBottom": "10px",
                "marginTop": "10px",
                "width": "100%",
              },
              "alignItems": "flex-start",
              "display": "flex",
              "flexDirection": "column",
            },
            "& .select-box": Object {
              "alignItems": "center",
              "display": "flex",
              "gap": "14px",
            },
            "& .select-year": Object {
              "& select": Object {
                "background": "#fff !important",
              },
              "background": "#fff",
              "border": "1px solid lightgrey",
              "borderRadius": 5,
              "padding": "2px 12px",
            },
            "& .select-year:after": Object {
              "border": 0,
              "content": "",
              "outline": "none",
              "position": "unset",
            },
            "& .select-year:before": Object {
              "border": 0,
              "content": "",
              "outline": "none",
              "position": "unset",
            },
            "& .upcoming-events-box": Object {
              "marginBottom": "30px",
            },
            "& a": Object {
              "textDecoration": "none !important",
            },
            "background": "rgb(244, 247, 255)",
          }
        }
      >
        <div
          className="MuiBox-root MuiBox-root-1 background & .navigation & .select-year & .select-box & .select-year:before & .select-year:after & .action-filter-box & .action-card & .dashboard-card-box & a & .configuration-day & .budget-table-content-box & .event-card & .content-boxes & .content-boxes .top-content & .content-boxes .top-content .right-content & .content-boxes .top-content .right-content span & .content-boxes .top-content .heading h2 & .content-boxes .unit-pagination & .content-boxes .unit-pagination p & .content-boxes .unit-pagination p span & .content-boxes .unit-table th & .content-boxes .unit-select & .content-boxes .search-unit .MuiInput-root & .content-boxes .search-unit svg & .content-boxes .search-unit .MuiInput-root::after & .content-boxes .search-unit .MuiInput-root::before & .content-boxes .MuiTableCell-head & .content-boxes .MuiPaginationItem-page.Mui-selected & .content-boxes.ticket-table & .content-boxes.ticket-table input & .content-boxes.ticket-table .status & .chairman-filter & .upcoming-events-box"
        >
          <DashboardHeader
            classes={
              Object {
                "generalDashboard": Object {
                  "& .action-card": Object {
                    "& .action-info-box": Object {
                      "& .action-content-box": Object {
                        "alignItems": "center",
                        "display": "flex",
                        "gap": "50px",
                      },
                      "& .action-info": Object {
                        "& p": Object {
                          "fontWeight": "600",
                        },
                        "& span": Object {
                          "color": "#FC8434",
                          "fontSize": "14px",
                        },
                        "alignItems": "center",
                        "display": "flex",
                        "gap": "15px",
                      },
                      "& button": Object {
                        "background": "#2B6FED",
                        "borderRadius": "8px",
                        "color": "white",
                        "fontWeight": "600",
                        "padding": "7px 18px",
                      },
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "space-between",
                    },
                    "& p.description": Object {
                      "margin": "16px 0",
                    },
                    "background": "#fff",
                    "borderRadius": 8,
                    "boxShadow": "none",
                    "padding": "20px",
                  },
                  "& .action-filter-box": Object {
                    "& button": Object {
                      "background": "#2B6FED",
                      "borderRadius": "8px",
                      "color": "white",
                      "fontWeight": "600",
                      "padding": "7px 18px",
                    },
                    "alignItems": "center",
                    "display": "flex",
                    "gap": "18px",
                    "margin": "15px 0",
                  },
                  "& .budget-table-content-box": Object {
                    "& .body": Object {
                      "& .table-content": Object {
                        "& span": Object {
                          "fontWeight": "600",
                        },
                        "alignItems": "center",
                        "borderTop": "1px solid #F4F6FB",
                        "display": "flex",
                        "justifyContent": "space-between",
                        "padding": "10px 0",
                      },
                      "& .table-header": Object {
                        "& span": Object {
                          "color": "#999",
                        },
                        "alignItems": "center",
                        "display": "flex",
                        "justifyContent": "space-between",
                        "padding": "10px 0",
                      },
                      "padding": "20px 15px",
                    },
                    "& .footer": Object {
                      "& h4": Object {
                        "color": "#FC8434",
                        "fontSize": "18px",
                        "fontWeight": "600",
                      },
                      "& p": Object {
                        "fontSize": "18px",
                        "fontWeight": "600",
                      },
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "space-between",
                      "padding": "20px 15px",
                    },
                    "& .header": Object {
                      "fontSize": "24px",
                      "fontWeight": "600",
                      "padding": "20px 15px",
                    },
                    "& hr": Object {
                      "color": "#F4F6FB",
                      "margin": "0",
                    },
                    "background": "#fff",
                    "borderRadius": 8,
                    "boxShadow": "none",
                  },
                  "& .chairman-filter": Object {
                    "& .action-filter-box": Object {
                      "margin": "0",
                    },
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "space-between",
                    "margin": "10px 0 15px 0",
                    "width": "100%",
                  },
                  "& .configuration-day": Object {
                    "& .config": Object {
                      "color": "#2B6FED",
                      "cursor": "pointer",
                      "fontWeight": "600",
                    },
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "space-between",
                  },
                  "& .content-boxes": Object {
                    "background": "white",
                    "borderRadius": "8px",
                    "marginTop": "30px",
                  },
                  "& .content-boxes .MuiPaginationItem-page.Mui-selected": Object {
                    "background": "#FC8434",
                    "border": "0",
                    "color": "white",
                  },
                  "& .content-boxes .MuiTableCell-head": Object {
                    "color": "#9198a3",
                  },
                  "& .content-boxes .search-unit .MuiInput-root": Object {
                    "border": "1px solid lightgray",
                    "borderRadius": "8px",
                    "padding": "5px 10px",
                  },
                  "& .content-boxes .search-unit .MuiInput-root::after": Object {
                    "border": 0,
                    "content": "",
                    "outline": "none",
                    "position": "unset",
                  },
                  "& .content-boxes .search-unit .MuiInput-root::before": Object {
                    "border": 0,
                    "content": "",
                    "outline": "none",
                    "position": "unset",
                  },
                  "& .content-boxes .search-unit svg": Object {
                    "fill": "darkgrey",
                  },
                  "& .content-boxes .top-content": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "space-between",
                    "padding": "20px",
                  },
                  "& .content-boxes .top-content .heading h2": Object {
                    "fontSize": "22px",
                    "fontWeight": 600,
                  },
                  "& .content-boxes .top-content .right-content": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "gap": "5px",
                  },
                  "& .content-boxes .top-content .right-content span": Object {
                    "color": "#FC8434",
                    "fontWeight": 600,
                  },
                  "& .content-boxes .unit-pagination": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "space-between",
                    "padding": "20px",
                  },
                  "& .content-boxes .unit-pagination p": Object {
                    "fontWeight": 600,
                  },
                  "& .content-boxes .unit-pagination p span": Object {
                    "color": "#FC8434",
                    "fontWeight": 600,
                  },
                  "& .content-boxes .unit-select": Object {
                    "border": "1px solid lightgray",
                    "borderRadius": "8px",
                    "fontWeight": 600,
                    "padding": "12px 40px 12px 10px",
                  },
                  "& .content-boxes .unit-table th": Object {
                    "fontWeight": 600,
                  },
                  "& .content-boxes.ticket-table": Object {
                    "marginTop": "0",
                  },
                  "& .content-boxes.ticket-table .status": Object {
                    "background": "#D4FFE3",
                    "borderRadius": "25px",
                    "color": "#1EC65B",
                    "fontSize": "14px",
                    "fontWeight": 600,
                    "padding": "5px 10px",
                  },
                  "& .content-boxes.ticket-table input": Object {
                    "width": "220px",
                  },
                  "& .dashboard-card-box": Object {
                    "& .card-bottom-info": Object {
                      "alignItems": "center",
                      "display": "flex",
                      "gap": "10px",
                    },
                    "& .card-image": Object {
                      "& img": Object {
                        "height": "28px",
                        "width": "28px",
                      },
                      "alignItems": "center",
                      "border": "1px solid #d9d4d3",
                      "borderRadius": "50%",
                      "display": "flex",
                      "height": "40px",
                      "justifyContent": "center",
                      "padding": "10px",
                      "width": "40px",
                    },
                    "& .info-box": Object {
                      "& span": Object {
                        "color": "#FC8434",
                        "fontWeight": "600",
                      },
                      "alignItems": "center",
                      "display": "flex",
                      "gap": "8px",
                    },
                    "& h4": Object {
                      "fontSize": "17px",
                      "fontWeight": "600",
                      "margin": "12px 0",
                    },
                    "background": "#fff",
                    "borderRadius": 8,
                    "boxShadow": "none",
                    "padding": "40px 20px 20px 20px",
                  },
                  "& .event-card": Object {
                    "& .event-content-box": Object {
                      "& .event-content": Object {
                        "alignItems": "center",
                        "display": "flex",
                        "gap": "10px",
                        "margin": "5px 0",
                      },
                      "& .meeting-state-box": Object {
                        "& .meeting-state": Object {
                          "alignItems": "center",
                          "display": "flex",
                          "gap": "10px",
                        },
                        "alignItems": "center",
                        "display": "flex",
                        "gap": "20px",
                      },
                    },
                    "& .event-heading": Object {
                      "& h4": Object {
                        "marginBottom": "5px",
                      },
                      "& span": Object {
                        "background": "#D4FFE3",
                        "borderRadius": "25px",
                        "color": "#1EC65B",
                        "fontSize": "14px",
                        "fontWeight": 600,
                        "padding": "5px 10px",
                      },
                      "alignItems": "center",
                      "display": "flex",
                      "gap": "10px",
                      "justifyContent": "space-between",
                      "marginBottom": "13px",
                    },
                    "background": "#fff",
                    "borderRadius": 8,
                    "boxShadow": "none",
                    "padding": "20px 20px 20px 20px",
                  },
                  "& .navigation": Object {
                    "& .sub-heading-box": Object {
                      "& h5": Object {
                        "fontSize": "22px",
                        "fontWeight": "600",
                      },
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "space-between",
                      "marginBottom": "10px",
                      "marginTop": "10px",
                      "width": "100%",
                    },
                    "alignItems": "flex-start",
                    "display": "flex",
                    "flexDirection": "column",
                  },
                  "& .select-box": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "gap": "14px",
                  },
                  "& .select-year": Object {
                    "& select": Object {
                      "background": "#fff !important",
                    },
                    "background": "#fff",
                    "border": "1px solid lightgrey",
                    "borderRadius": 5,
                    "padding": "2px 12px",
                  },
                  "& .select-year:after": Object {
                    "border": 0,
                    "content": "",
                    "outline": "none",
                    "position": "unset",
                  },
                  "& .select-year:before": Object {
                    "border": 0,
                    "content": "",
                    "outline": "none",
                    "position": "unset",
                  },
                  "& .upcoming-events-box": Object {
                    "marginBottom": "30px",
                  },
                  "& a": Object {
                    "textDecoration": "none !important",
                  },
                  "background": "rgb(244, 247, 255)",
                },
                "ownerDashboard": Object {
                  "& .MuiCard-root": Object {
                    "boxShadow": "none",
                    "padding": "20px 0",
                    "textAlign": "center",
                  },
                  "& .MuiCard-root .content-box": Object {
                    "alignItems": "flex-end",
                    "display": "flex",
                    "justifyContent": "space-evenly",
                  },
                  "& .MuiCard-root .content-box .center-content": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "column",
                    "width": "20%",
                  },
                  "& .MuiCard-root .content-box .center-content .image": Object {
                    "marginBottom": "0px",
                  },
                  "& .MuiCard-root .content-box .center-content .image.text": Object {
                    "padding": "15px",
                  },
                  "& .MuiCard-root .content-box .center-content .image.text h4": Object {
                    "color": "#FD9048",
                    "marginBottom": "0px",
                  },
                  "& .MuiCard-root .content-box .center-content .vertical-line": Object {
                    "background": "#F8F9FE",
                    "height": "30px",
                    "width": "3px",
                  },
                  "& .MuiCard-root .content-box .left-content": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "column",
                    "marginBottom": "20px",
                    "textAlign": "center",
                    "width": "40%",
                  },
                  "& .MuiCard-root .content-box .left-content .state": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "column",
                  },
                  "& .MuiCard-root .content-box .right-content": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "column",
                    "marginBottom": "20px",
                    "textAlign": "center",
                    "width": "40%",
                  },
                  "& .MuiCard-root .content-box .right-content .state": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "flexDirection": "column",
                  },
                  "& .MuiCard-root .image": Object {
                    "border": "3px solid #F8F9FE",
                    "borderRadius": "50%",
                    "display": "inline-block",
                    "marginBottom": "20px",
                    "padding": "20px",
                  },
                  "& .MuiCard-root .state p": Object {
                    "marginBottom": "5px",
                    "textTransform": "capitalize",
                  },
                  "& .MuiCard-root button": Object {
                    "background": "#F6F6F6",
                    "borderRadius": "25px",
                    "color": "#8A8A8A",
                    "fontWeight": "600",
                    "minWidth": "125px",
                    "padding": "5px 11px",
                  },
                  "& .MuiCard-root button.yellow": Object {
                    "background": "#FEF9F3",
                    "color": "#FD9048",
                  },
                  "& .MuiCard-root h4": Object {
                    "marginBottom": "20px",
                    "textTransform": "capitalize",
                  },
                  "& .MuiCard-root.big-box": Object {
                    "paddingBottom": "0",
                  },
                  "& .dashboard": Object {
                    "height": "85vh",
                    "overflowX": "hidden",
                    "overflowY": "auto",
                  },
                  "& .dashboard .title": Object {
                    "paddingBottom": "5px",
                  },
                  "& .dashboard .title h5": Object {
                    "fontWeight": "600",
                  },
                  "& .menu": Object {
                    "alignItems": "center",
                    "background": "#FFFFFF",
                    "cursor": "pointer",
                    "display": "flex",
                    "fontWeight": "600",
                    "justifyContent": "space-between",
                    "marginBottom": "18px",
                    "padding": "10px 20px",
                  },
                  "& .menu .left-icon": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                  "& .menu .left-icon span.complex-name": Object {
                    "color": "blue",
                    "marginLeft": "10px",
                  },
                  "& .menu .right-icon a": Object {
                    "marginLeft": "15px",
                  },
                  "& .notification-slider": Object {
                    "marginBottom": "20px",
                    "width": "100%",
                  },
                  "& .notification-slider .slick-list .slick-track": Object {
                    "display": "flex",
                    "gap": "20px",
                  },
                  "& .notification-slider .slick-next": Object {
                    "display": "none !important",
                  },
                  "& .notification-slider .slick-prev": Object {
                    "display": "none !important",
                  },
                  "& .notification-slider .slide-box": Object {
                    "background": "white",
                    "borderRadius": "8px",
                    "cursor": "pointer",
                    "padding": "20px",
                    "width": "95% !important",
                  },
                  "& .notification-slider .slide-box .heading": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "gap": "15px",
                  },
                  "& .notification-slider .slide-box .heading span": Object {
                    "fontWeight": "600",
                  },
                  "& .notification-slider .slide-box p": Object {
                    "marginTop": "10px",
                  },
                  "& .right-image": Object {
                    "padding": "25px 60px",
                  },
                  "& a": Object {
                    "textDecoration": "none !important",
                  },
                },
              }
            }
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            id="DashboardActions"
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            navigation={
              Object {
                "getParam": [MockFunction],
                "goBack": [MockFunction],
                "navigate": [MockFunction],
              }
            }
            t={[Function]}
          >
            <Styled(MuiBox)
              style={
                Object {
                  "background": "#fff",
                  "padding": 20,
                }
              }
            >
              <div
                className="MuiBox-root MuiBox-root-2"
                style={
                  Object {
                    "background": "#fff",
                    "padding": 20,
                  }
                }
              >
                <WithStyles(ForwardRef(Grid))
                  container={true}
                  spacing={2}
                >
                  <ForwardRef(Grid)
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                        "container": "MuiGrid-container",
                        "direction-xs-column": "MuiGrid-direction-xs-column",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                        "grid-lg-1": "MuiGrid-grid-lg-1",
                        "grid-lg-10": "MuiGrid-grid-lg-10",
                        "grid-lg-11": "MuiGrid-grid-lg-11",
                        "grid-lg-12": "MuiGrid-grid-lg-12",
                        "grid-lg-2": "MuiGrid-grid-lg-2",
                        "grid-lg-3": "MuiGrid-grid-lg-3",
                        "grid-lg-4": "MuiGrid-grid-lg-4",
                        "grid-lg-5": "MuiGrid-grid-lg-5",
                        "grid-lg-6": "MuiGrid-grid-lg-6",
                        "grid-lg-7": "MuiGrid-grid-lg-7",
                        "grid-lg-8": "MuiGrid-grid-lg-8",
                        "grid-lg-9": "MuiGrid-grid-lg-9",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                        "grid-lg-true": "MuiGrid-grid-lg-true",
                        "grid-md-1": "MuiGrid-grid-md-1",
                        "grid-md-10": "MuiGrid-grid-md-10",
                        "grid-md-11": "MuiGrid-grid-md-11",
                        "grid-md-12": "MuiGrid-grid-md-12",
                        "grid-md-2": "MuiGrid-grid-md-2",
                        "grid-md-3": "MuiGrid-grid-md-3",
                        "grid-md-4": "MuiGrid-grid-md-4",
                        "grid-md-5": "MuiGrid-grid-md-5",
                        "grid-md-6": "MuiGrid-grid-md-6",
                        "grid-md-7": "MuiGrid-grid-md-7",
                        "grid-md-8": "MuiGrid-grid-md-8",
                        "grid-md-9": "MuiGrid-grid-md-9",
                        "grid-md-auto": "MuiGrid-grid-md-auto",
                        "grid-md-true": "MuiGrid-grid-md-true",
                        "grid-sm-1": "MuiGrid-grid-sm-1",
                        "grid-sm-10": "MuiGrid-grid-sm-10",
                        "grid-sm-11": "MuiGrid-grid-sm-11",
                        "grid-sm-12": "MuiGrid-grid-sm-12",
                        "grid-sm-2": "MuiGrid-grid-sm-2",
                        "grid-sm-3": "MuiGrid-grid-sm-3",
                        "grid-sm-4": "MuiGrid-grid-sm-4",
                        "grid-sm-5": "MuiGrid-grid-sm-5",
                        "grid-sm-6": "MuiGrid-grid-sm-6",
                        "grid-sm-7": "MuiGrid-grid-sm-7",
                        "grid-sm-8": "MuiGrid-grid-sm-8",
                        "grid-sm-9": "MuiGrid-grid-sm-9",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                        "grid-sm-true": "MuiGrid-grid-sm-true",
                        "grid-xl-1": "MuiGrid-grid-xl-1",
                        "grid-xl-10": "MuiGrid-grid-xl-10",
                        "grid-xl-11": "MuiGrid-grid-xl-11",
                        "grid-xl-12": "MuiGrid-grid-xl-12",
                        "grid-xl-2": "MuiGrid-grid-xl-2",
                        "grid-xl-3": "MuiGrid-grid-xl-3",
                        "grid-xl-4": "MuiGrid-grid-xl-4",
                        "grid-xl-5": "MuiGrid-grid-xl-5",
                        "grid-xl-6": "MuiGrid-grid-xl-6",
                        "grid-xl-7": "MuiGrid-grid-xl-7",
                        "grid-xl-8": "MuiGrid-grid-xl-8",
                        "grid-xl-9": "MuiGrid-grid-xl-9",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                        "grid-xl-true": "MuiGrid-grid-xl-true",
                        "grid-xs-1": "MuiGrid-grid-xs-1",
                        "grid-xs-10": "MuiGrid-grid-xs-10",
                        "grid-xs-11": "MuiGrid-grid-xs-11",
                        "grid-xs-12": "MuiGrid-grid-xs-12",
                        "grid-xs-2": "MuiGrid-grid-xs-2",
                        "grid-xs-3": "MuiGrid-grid-xs-3",
                        "grid-xs-4": "MuiGrid-grid-xs-4",
                        "grid-xs-5": "MuiGrid-grid-xs-5",
                        "grid-xs-6": "MuiGrid-grid-xs-6",
                        "grid-xs-7": "MuiGrid-grid-xs-7",
                        "grid-xs-8": "MuiGrid-grid-xs-8",
                        "grid-xs-9": "MuiGrid-grid-xs-9",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                        "grid-xs-true": "MuiGrid-grid-xs-true",
                        "item": "MuiGrid-item",
                        "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                        "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                        "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                        "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                        "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                        "root": "MuiGrid-root",
                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                      }
                    }
                    container={true}
                    spacing={2}
                  >
                    <div
                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                    >
                      <WithStyles(ForwardRef(Grid))
                        item={true}
                        md={6}
                        sm={6}
                        style={
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "gap": "20px",
                            "justifyContent": "start",
                          }
                        }
                        xs={6}
                      >
                        <ForwardRef(Grid)
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                              "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                              "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                              "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                              "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          item={true}
                          md={6}
                          sm={6}
                          style={
                            Object {
                              "alignItems": "center",
                              "display": "flex",
                              "gap": "20px",
                              "justifyContent": "start",
                            }
                          }
                          xs={6}
                        >
                          <div
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-6 MuiGrid-grid-sm-6 MuiGrid-grid-md-6"
                            style={
                              Object {
                                "alignItems": "center",
                                "display": "flex",
                                "gap": "20px",
                                "justifyContent": "start",
                              }
                            }
                          >
                            <img
                              alt="BuildingLogo"
                              width={70}
                            />
                            <WithStyles(ForwardRef(Link))
                              href="#"
                              style={
                                Object {
                                  "textDecoration": "none",
                                }
                              }
                            >
                              <ForwardRef(Link)
                                classes={
                                  Object {
                                    "button": "MuiLink-button",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiLink-root",
                                    "underlineAlways": "MuiLink-underlineAlways",
                                    "underlineHover": "MuiLink-underlineHover",
                                    "underlineNone": "MuiLink-underlineNone",
                                  }
                                }
                                href="#"
                                style={
                                  Object {
                                    "textDecoration": "none",
                                  }
                                }
                              >
                                <WithStyles(ForwardRef(Typography))
                                  className="MuiLink-root MuiLink-underlineHover"
                                  color="primary"
                                  component="a"
                                  href="#"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  style={
                                    Object {
                                      "textDecoration": "none",
                                    }
                                  }
                                  variant="inherit"
                                >
                                  <ForwardRef(Typography)
                                    className="MuiLink-root MuiLink-underlineHover"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    color="primary"
                                    component="a"
                                    href="#"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    style={
                                      Object {
                                        "textDecoration": "none",
                                      }
                                    }
                                    variant="inherit"
                                  >
                                    <a
                                      className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                      href="#"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      style={
                                        Object {
                                          "textDecoration": "none",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        style={
                                          Object {
                                            "fontWeight": 600,
                                          }
                                        }
                                        variant="h6"
                                      >
                                        <ForwardRef(Typography)
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          style={
                                            Object {
                                              "fontWeight": 600,
                                            }
                                          }
                                          variant="h6"
                                        >
                                          <h6
                                            className="MuiTypography-root MuiTypography-h6"
                                            style={
                                              Object {
                                                "fontWeight": 600,
                                              }
                                            }
                                          >
                                            Complex_Name
                                          </h6>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </a>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </ForwardRef(Link)>
                            </WithStyles(ForwardRef(Link))>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                      <WithStyles(ForwardRef(Grid))
                        item={true}
                        md={6}
                        sm={6}
                        style={
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "gap": "20px",
                            "justifyContent": "end",
                          }
                        }
                        xs={6}
                      >
                        <ForwardRef(Grid)
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                              "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                              "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                              "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                              "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          item={true}
                          md={6}
                          sm={6}
                          style={
                            Object {
                              "alignItems": "center",
                              "display": "flex",
                              "gap": "20px",
                              "justifyContent": "end",
                            }
                          }
                          xs={6}
                        >
                          <div
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-6 MuiGrid-grid-sm-6 MuiGrid-grid-md-6"
                            style={
                              Object {
                                "alignItems": "center",
                                "display": "flex",
                                "gap": "20px",
                                "justifyContent": "end",
                              }
                            }
                          >
                            <div
                              className="right-icon"
                              style={
                                Object {
                                  "display": "flex",
                                  "gap": "15px",
                                }
                              }
                            >
                              <Styled(MuiBox)>
                                <div
                                  className="MuiBox-root MuiBox-root-3"
                                >
                                  <ForwardRef(Menu)
                                    align="center"
                                    arrow={true}
                                    className="chairman-lang-menu"
                                    direction="bottom"
                                    menuButton={
                                      <img
                                        alt="GlobalIcon"
                                        src={
                                          Object {
                                            "testUri": "../../../packages/blocks/dashboard/assets/global.png",
                                          }
                                        }
                                      />
                                    }
                                    offsetX={0}
                                    offsetY={0}
                                    overflow="visible"
                                    position="auto"
                                    reposition="auto"
                                    submenuCloseDelay={150}
                                    submenuOpenDelay={300}
                                    transitionTimeout={500}
                                    viewScroll="initial"
                                  >
                                    <img
                                      alt="GlobalIcon"
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                      src={
                                        Object {
                                          "testUri": "../../../packages/blocks/dashboard/assets/global.png",
                                        }
                                      }
                                    />
                                    <ForwardRef(ControlledMenu)
                                      align="center"
                                      anchorRef={
                                        Object {
                                          "current": <img
                                            alt="GlobalIcon"
                                            src="[object Object]"
                                          />,
                                        }
                                      }
                                      aria-label="Menu"
                                      arrow={true}
                                      className="chairman-lang-menu"
                                      direction="bottom"
                                      endTransition={[Function]}
                                      menuItemFocus={Object {}}
                                      offsetX={0}
                                      offsetY={0}
                                      onClose={[Function]}
                                      overflow="visible"
                                      position="auto"
                                      reposition="auto"
                                      skipOpen={
                                        Object {
                                          "current": false,
                                        }
                                      }
                                      submenuCloseDelay={150}
                                      submenuOpenDelay={300}
                                      transitionTimeout={500}
                                      viewScroll="initial"
                                    >
                                      <div
                                        className="szh-menu-container chairman-lang-menu"
                                        onBlur={[Function]}
                                        onKeyDown={[Function]}
                                      />
                                    </ForwardRef(ControlledMenu)>
                                  </ForwardRef(Menu)>
                                </div>
                              </Styled(MuiBox)>
                              <WithStyles(ForwardRef(Link))
                                href="/AdminNotification"
                              >
                                <ForwardRef(Link)
                                  classes={
                                    Object {
                                      "button": "MuiLink-button",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiLink-root",
                                      "underlineAlways": "MuiLink-underlineAlways",
                                      "underlineHover": "MuiLink-underlineHover",
                                      "underlineNone": "MuiLink-underlineNone",
                                    }
                                  }
                                  href="/AdminNotification"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    className="MuiLink-root MuiLink-underlineHover"
                                    color="primary"
                                    component="a"
                                    href="/AdminNotification"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    variant="inherit"
                                  >
                                    <ForwardRef(Typography)
                                      className="MuiLink-root MuiLink-underlineHover"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      color="primary"
                                      component="a"
                                      href="/AdminNotification"
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      variant="inherit"
                                    >
                                      <a
                                        className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                        href="/AdminNotification"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                      >
                                        <img
                                          alt="GlobalIcon"
                                          src={
                                            Object {
                                              "testUri": "../../../packages/blocks/dashboard/assets/notification.png",
                                            }
                                          }
                                        />
                                      </a>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </ForwardRef(Link)>
                              </WithStyles(ForwardRef(Link))>
                            </div>
                            <Styled(MuiBox)
                              style={
                                Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "gap": "20px",
                                  "justifyContent": "start",
                                }
                              }
                            >
                              <div
                                className="MuiBox-root MuiBox-root-4"
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "display": "flex",
                                    "gap": "20px",
                                    "justifyContent": "start",
                                  }
                                }
                              >
                                <img
                                  alt="ChairmanUser"
                                  style={
                                    Object {
                                      "borderRadius": "50%",
                                    }
                                  }
                                  width={50}
                                />
                                <Styled(MuiBox)>
                                  <div
                                    className="MuiBox-root MuiBox-root-5"
                                  >
                                    <p
                                      style={
                                        Object {
                                          "textTransform": "capitalize",
                                        }
                                      }
                                    >
                                      User_Name
                                    </p>
                                    <WithStyles(ForwardRef(Typography))
                                      variant="body2"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        variant="body2"
                                      >
                                        <p
                                          className="MuiTypography-root MuiTypography-body2"
                                        >
                                          User_Role
                                        </p>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </div>
                                </Styled(MuiBox)>
                              </div>
                            </Styled(MuiBox)>
                            <ForwardRef(Menu)
                              align="end"
                              arrow={true}
                              className="chairman-top-menu"
                              direction="bottom"
                              menuButton={
                                <WithStyles(ForwardRef(IconButton))>
                                  <Memo />
                                </WithStyles(ForwardRef(IconButton))>
                              }
                              offsetX={0}
                              offsetY={0}
                              overflow="visible"
                              position="auto"
                              reposition="auto"
                              submenuCloseDelay={150}
                              submenuOpenDelay={300}
                              transitionTimeout={500}
                              viewScroll="initial"
                            >
                              <WithStyles(ForwardRef(IconButton))
                                onClick={[Function]}
                                onKeyDown={[Function]}
                              >
                                <ForwardRef(IconButton)
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    centerRipple={true}
                                    className="MuiIconButton-root"
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                    onKeyDown={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                      onKeyDown={[Function]}
                                    >
                                      <button
                                        className="MuiButtonBase-root MuiIconButton-root"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(KeyboardArrowDownIcon)>
                                            <WithStyles(ForwardRef(SvgIcon))>
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(KeyboardArrowDownIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                              <ForwardRef(ControlledMenu)
                                align="end"
                                anchorRef={
                                  Object {
                                    "current": <button
                                      class="MuiButtonBase-root MuiIconButton-root"
                                      tabindex="0"
                                      type="button"
                                    >
                                      <span
                                        class="MuiIconButton-label"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                          />
                                        </svg>
                                      </span>
                                      <span
                                        class="MuiTouchRipple-root"
                                      />
                                    </button>,
                                  }
                                }
                                aria-label="Menu"
                                arrow={true}
                                className="chairman-top-menu"
                                direction="bottom"
                                endTransition={[Function]}
                                menuItemFocus={Object {}}
                                offsetX={0}
                                offsetY={0}
                                onClose={[Function]}
                                overflow="visible"
                                position="auto"
                                reposition="auto"
                                skipOpen={
                                  Object {
                                    "current": false,
                                  }
                                }
                                submenuCloseDelay={150}
                                submenuOpenDelay={300}
                                transitionTimeout={500}
                                viewScroll="initial"
                              >
                                <div
                                  className="szh-menu-container chairman-top-menu"
                                  onBlur={[Function]}
                                  onKeyDown={[Function]}
                                />
                              </ForwardRef(ControlledMenu)>
                            </ForwardRef(Menu)>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                    </div>
                  </ForwardRef(Grid)>
                </WithStyles(ForwardRef(Grid))>
                <WithStyles(ForwardRef(Dialog))
                  className="delete-document personal chairman-logout"
                  fullWidth={true}
                  onClose={[Function]}
                  open={false}
                >
                  <ForwardRef(Dialog)
                    className="delete-document personal chairman-logout"
                    classes={
                      Object {
                        "container": "MuiDialog-container",
                        "paper": "MuiDialog-paper",
                        "paperFullScreen": "MuiDialog-paperFullScreen",
                        "paperFullWidth": "MuiDialog-paperFullWidth",
                        "paperScrollBody": "MuiDialog-paperScrollBody",
                        "paperScrollPaper": "MuiDialog-paperScrollPaper",
                        "paperWidthFalse": "MuiDialog-paperWidthFalse",
                        "paperWidthLg": "MuiDialog-paperWidthLg",
                        "paperWidthMd": "MuiDialog-paperWidthMd",
                        "paperWidthSm": "MuiDialog-paperWidthSm",
                        "paperWidthXl": "MuiDialog-paperWidthXl",
                        "paperWidthXs": "MuiDialog-paperWidthXs",
                        "root": "MuiDialog-root",
                        "scrollBody": "MuiDialog-scrollBody",
                        "scrollPaper": "MuiDialog-scrollPaper",
                      }
                    }
                    fullWidth={true}
                    onClose={[Function]}
                    open={false}
                  >
                    <ForwardRef(Modal)
                      BackdropComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "Naked": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "children": [Function],
                              "className": [Function],
                              "classes": [Function],
                              "invisible": [Function],
                              "open": [Function],
                              "transitionDuration": [Function],
                            },
                            "render": [Function],
                          },
                          "displayName": "WithStyles(ForwardRef(Backdrop))",
                          "options": Object {
                            "defaultTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "only": [Function],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                                "width": [Function],
                              },
                              "direction": "ltr",
                              "mixins": Object {
                                "gutters": [Function],
                                "toolbar": Object {
                                  "@media (min-width:0px) and (orientation: landscape)": Object {
                                    "minHeight": 48,
                                  },
                                  "@media (min-width:600px)": Object {
                                    "minHeight": 64,
                                  },
                                  "minHeight": 56,
                                },
                              },
                              "overrides": Object {},
                              "palette": Object {
                                "action": Object {
                                  "activatedOpacity": 0.12,
                                  "active": "rgba(0, 0, 0, 0.54)",
                                  "disabled": "rgba(0, 0, 0, 0.26)",
                                  "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                  "disabledOpacity": 0.38,
                                  "focus": "rgba(0, 0, 0, 0.12)",
                                  "focusOpacity": 0.12,
                                  "hover": "rgba(0, 0, 0, 0.04)",
                                  "hoverOpacity": 0.04,
                                  "selected": "rgba(0, 0, 0, 0.08)",
                                  "selectedOpacity": 0.08,
                                },
                                "augmentColor": [Function],
                                "background": Object {
                                  "default": "#fafafa",
                                  "paper": "#fff",
                                },
                                "common": Object {
                                  "black": "#000",
                                  "white": "#fff",
                                },
                                "contrastThreshold": 3,
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "error": Object {
                                  "contrastText": "#fff",
                                  "dark": "#d32f2f",
                                  "light": "#e57373",
                                  "main": "#f44336",
                                },
                                "getContrastText": [Function],
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "info": Object {
                                  "contrastText": "#fff",
                                  "dark": "#1976d2",
                                  "light": "#64b5f6",
                                  "main": "#2196f3",
                                },
                                "primary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "contrastText": "#fff",
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "success": Object {
                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                  "dark": "#388e3c",
                                  "light": "#81c784",
                                  "main": "#4caf50",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "hint": "rgba(0, 0, 0, 0.38)",
                                  "primary": "rgba(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                                "tonalOffset": 0.2,
                                "type": "light",
                                "warning": Object {
                                  "contrastText": "rgba(0, 0, 0, 0.87)",
                                  "dark": "#f57c00",
                                  "light": "#ffb74d",
                                  "main": "#ff9800",
                                },
                              },
                              "props": Object {},
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "shape": Object {
                                "borderRadius": 4,
                              },
                              "spacing": [Function],
                              "transitions": Object {
                                "create": [Function],
                                "duration": Object {
                                  "complex": 375,
                                  "enteringScreen": 225,
                                  "leavingScreen": 195,
                                  "short": 250,
                                  "shorter": 200,
                                  "shortest": 150,
                                  "standard": 300,
                                },
                                "easing": Object {
                                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                },
                                "getAutoHeightDuration": [Function],
                              },
                              "typography": Object {
                                "body1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.5,
                                },
                                "body2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.01071em",
                                  "lineHeight": 1.43,
                                },
                                "button": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.02857em",
                                  "lineHeight": 1.75,
                                  "textTransform": "uppercase",
                                },
                                "caption": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.03333em",
                                  "lineHeight": 1.66,
                                },
                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                "fontSize": 14,
                                "fontWeightBold": 700,
                                "fontWeightLight": 300,
                                "fontWeightMedium": 500,
                                "fontWeightRegular": 400,
                                "h1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "6rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.01562em",
                                  "lineHeight": 1.167,
                                },
                                "h2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3.75rem",
                                  "fontWeight": 300,
                                  "letterSpacing": "-0.00833em",
                                  "lineHeight": 1.2,
                                },
                                "h3": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "3rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.167,
                                },
                                "h4": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "2.125rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00735em",
                                  "lineHeight": 1.235,
                                },
                                "h5": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.5rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0em",
                                  "lineHeight": 1.334,
                                },
                                "h6": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1.25rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.0075em",
                                  "lineHeight": 1.6,
                                },
                                "htmlFontSize": 16,
                                "overline": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.75rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.08333em",
                                  "lineHeight": 2.66,
                                  "textTransform": "uppercase",
                                },
                                "pxToRem": [Function],
                                "round": [Function],
                                "subtitle1": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "1rem",
                                  "fontWeight": 400,
                                  "letterSpacing": "0.00938em",
                                  "lineHeight": 1.75,
                                },
                                "subtitle2": Object {
                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                  "fontSize": "0.875rem",
                                  "fontWeight": 500,
                                  "letterSpacing": "0.00714em",
                                  "lineHeight": 1.57,
                                },
                              },
                              "zIndex": Object {
                                "appBar": 1100,
                                "drawer": 1200,
                                "mobileStepper": 1000,
                                "modal": 1300,
                                "snackbar": 1400,
                                "speedDial": 1050,
                                "tooltip": 1500,
                              },
                            },
                            "name": "MuiBackdrop",
                          },
                          "propTypes": Object {
                            "classes": [Function],
                            "innerRef": [Function],
                          },
                          "render": [Function],
                          "useStyles": [Function],
                        }
                      }
                      BackdropProps={
                        Object {
                          "transitionDuration": Object {
                            "enter": 225,
                            "exit": 195,
                          },
                        }
                      }
                      className="MuiDialog-root delete-document personal chairman-logout"
                      closeAfterTransition={true}
                      disableEscapeKeyDown={false}
                      onClose={[Function]}
                      open={false}
                    />
                  </ForwardRef(Dialog)>
                </WithStyles(ForwardRef(Dialog))>
              </div>
            </Styled(MuiBox)>
          </DashboardHeader>
          <Styled(MuiBox)
            style={
              Object {
                "display": "flex",
              }
            }
          >
            <div
              className="MuiBox-root MuiBox-root-6"
              style={
                Object {
                  "display": "flex",
                }
              }
            >
              <WithStyles(ForwardRef(Grid))
                className="SideBar"
                item={true}
                md={3}
                sm={3}
                xs={3}
              >
                <ForwardRef(Grid)
                  className="SideBar"
                  classes={
                    Object {
                      "align-content-xs-center": "MuiGrid-align-content-xs-center",
                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                      "align-items-xs-center": "MuiGrid-align-items-xs-center",
                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                      "container": "MuiGrid-container",
                      "direction-xs-column": "MuiGrid-direction-xs-column",
                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                      "grid-lg-1": "MuiGrid-grid-lg-1",
                      "grid-lg-10": "MuiGrid-grid-lg-10",
                      "grid-lg-11": "MuiGrid-grid-lg-11",
                      "grid-lg-12": "MuiGrid-grid-lg-12",
                      "grid-lg-2": "MuiGrid-grid-lg-2",
                      "grid-lg-3": "MuiGrid-grid-lg-3",
                      "grid-lg-4": "MuiGrid-grid-lg-4",
                      "grid-lg-5": "MuiGrid-grid-lg-5",
                      "grid-lg-6": "MuiGrid-grid-lg-6",
                      "grid-lg-7": "MuiGrid-grid-lg-7",
                      "grid-lg-8": "MuiGrid-grid-lg-8",
                      "grid-lg-9": "MuiGrid-grid-lg-9",
                      "grid-lg-auto": "MuiGrid-grid-lg-auto",
                      "grid-lg-true": "MuiGrid-grid-lg-true",
                      "grid-md-1": "MuiGrid-grid-md-1",
                      "grid-md-10": "MuiGrid-grid-md-10",
                      "grid-md-11": "MuiGrid-grid-md-11",
                      "grid-md-12": "MuiGrid-grid-md-12",
                      "grid-md-2": "MuiGrid-grid-md-2",
                      "grid-md-3": "MuiGrid-grid-md-3",
                      "grid-md-4": "MuiGrid-grid-md-4",
                      "grid-md-5": "MuiGrid-grid-md-5",
                      "grid-md-6": "MuiGrid-grid-md-6",
                      "grid-md-7": "MuiGrid-grid-md-7",
                      "grid-md-8": "MuiGrid-grid-md-8",
                      "grid-md-9": "MuiGrid-grid-md-9",
                      "grid-md-auto": "MuiGrid-grid-md-auto",
                      "grid-md-true": "MuiGrid-grid-md-true",
                      "grid-sm-1": "MuiGrid-grid-sm-1",
                      "grid-sm-10": "MuiGrid-grid-sm-10",
                      "grid-sm-11": "MuiGrid-grid-sm-11",
                      "grid-sm-12": "MuiGrid-grid-sm-12",
                      "grid-sm-2": "MuiGrid-grid-sm-2",
                      "grid-sm-3": "MuiGrid-grid-sm-3",
                      "grid-sm-4": "MuiGrid-grid-sm-4",
                      "grid-sm-5": "MuiGrid-grid-sm-5",
                      "grid-sm-6": "MuiGrid-grid-sm-6",
                      "grid-sm-7": "MuiGrid-grid-sm-7",
                      "grid-sm-8": "MuiGrid-grid-sm-8",
                      "grid-sm-9": "MuiGrid-grid-sm-9",
                      "grid-sm-auto": "MuiGrid-grid-sm-auto",
                      "grid-sm-true": "MuiGrid-grid-sm-true",
                      "grid-xl-1": "MuiGrid-grid-xl-1",
                      "grid-xl-10": "MuiGrid-grid-xl-10",
                      "grid-xl-11": "MuiGrid-grid-xl-11",
                      "grid-xl-12": "MuiGrid-grid-xl-12",
                      "grid-xl-2": "MuiGrid-grid-xl-2",
                      "grid-xl-3": "MuiGrid-grid-xl-3",
                      "grid-xl-4": "MuiGrid-grid-xl-4",
                      "grid-xl-5": "MuiGrid-grid-xl-5",
                      "grid-xl-6": "MuiGrid-grid-xl-6",
                      "grid-xl-7": "MuiGrid-grid-xl-7",
                      "grid-xl-8": "MuiGrid-grid-xl-8",
                      "grid-xl-9": "MuiGrid-grid-xl-9",
                      "grid-xl-auto": "MuiGrid-grid-xl-auto",
                      "grid-xl-true": "MuiGrid-grid-xl-true",
                      "grid-xs-1": "MuiGrid-grid-xs-1",
                      "grid-xs-10": "MuiGrid-grid-xs-10",
                      "grid-xs-11": "MuiGrid-grid-xs-11",
                      "grid-xs-12": "MuiGrid-grid-xs-12",
                      "grid-xs-2": "MuiGrid-grid-xs-2",
                      "grid-xs-3": "MuiGrid-grid-xs-3",
                      "grid-xs-4": "MuiGrid-grid-xs-4",
                      "grid-xs-5": "MuiGrid-grid-xs-5",
                      "grid-xs-6": "MuiGrid-grid-xs-6",
                      "grid-xs-7": "MuiGrid-grid-xs-7",
                      "grid-xs-8": "MuiGrid-grid-xs-8",
                      "grid-xs-9": "MuiGrid-grid-xs-9",
                      "grid-xs-auto": "MuiGrid-grid-xs-auto",
                      "grid-xs-true": "MuiGrid-grid-xs-true",
                      "item": "MuiGrid-item",
                      "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                      "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                      "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                      "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                      "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                      "root": "MuiGrid-root",
                      "spacing-xs-1": "MuiGrid-spacing-xs-1",
                      "spacing-xs-10": "MuiGrid-spacing-xs-10",
                      "spacing-xs-2": "MuiGrid-spacing-xs-2",
                      "spacing-xs-3": "MuiGrid-spacing-xs-3",
                      "spacing-xs-4": "MuiGrid-spacing-xs-4",
                      "spacing-xs-5": "MuiGrid-spacing-xs-5",
                      "spacing-xs-6": "MuiGrid-spacing-xs-6",
                      "spacing-xs-7": "MuiGrid-spacing-xs-7",
                      "spacing-xs-8": "MuiGrid-spacing-xs-8",
                      "spacing-xs-9": "MuiGrid-spacing-xs-9",
                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                      "zeroMinWidth": "MuiGrid-zeroMinWidth",
                    }
                  }
                  item={true}
                  md={3}
                  sm={3}
                  xs={3}
                >
                  <div
                    className="MuiGrid-root SideBar MuiGrid-item MuiGrid-grid-xs-3 MuiGrid-grid-sm-3 MuiGrid-grid-md-3"
                  >
                    <withRouter(ChairmanSidebar)
                      classes={
                        Object {
                          "generalDashboard": Object {
                            "& .action-card": Object {
                              "& .action-info-box": Object {
                                "& .action-content-box": Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "gap": "50px",
                                },
                                "& .action-info": Object {
                                  "& p": Object {
                                    "fontWeight": "600",
                                  },
                                  "& span": Object {
                                    "color": "#FC8434",
                                    "fontSize": "14px",
                                  },
                                  "alignItems": "center",
                                  "display": "flex",
                                  "gap": "15px",
                                },
                                "& button": Object {
                                  "background": "#2B6FED",
                                  "borderRadius": "8px",
                                  "color": "white",
                                  "fontWeight": "600",
                                  "padding": "7px 18px",
                                },
                                "alignItems": "center",
                                "display": "flex",
                                "justifyContent": "space-between",
                              },
                              "& p.description": Object {
                                "margin": "16px 0",
                              },
                              "background": "#fff",
                              "borderRadius": 8,
                              "boxShadow": "none",
                              "padding": "20px",
                            },
                            "& .action-filter-box": Object {
                              "& button": Object {
                                "background": "#2B6FED",
                                "borderRadius": "8px",
                                "color": "white",
                                "fontWeight": "600",
                                "padding": "7px 18px",
                              },
                              "alignItems": "center",
                              "display": "flex",
                              "gap": "18px",
                              "margin": "15px 0",
                            },
                            "& .budget-table-content-box": Object {
                              "& .body": Object {
                                "& .table-content": Object {
                                  "& span": Object {
                                    "fontWeight": "600",
                                  },
                                  "alignItems": "center",
                                  "borderTop": "1px solid #F4F6FB",
                                  "display": "flex",
                                  "justifyContent": "space-between",
                                  "padding": "10px 0",
                                },
                                "& .table-header": Object {
                                  "& span": Object {
                                    "color": "#999",
                                  },
                                  "alignItems": "center",
                                  "display": "flex",
                                  "justifyContent": "space-between",
                                  "padding": "10px 0",
                                },
                                "padding": "20px 15px",
                              },
                              "& .footer": Object {
                                "& h4": Object {
                                  "color": "#FC8434",
                                  "fontSize": "18px",
                                  "fontWeight": "600",
                                },
                                "& p": Object {
                                  "fontSize": "18px",
                                  "fontWeight": "600",
                                },
                                "alignItems": "center",
                                "display": "flex",
                                "justifyContent": "space-between",
                                "padding": "20px 15px",
                              },
                              "& .header": Object {
                                "fontSize": "24px",
                                "fontWeight": "600",
                                "padding": "20px 15px",
                              },
                              "& hr": Object {
                                "color": "#F4F6FB",
                                "margin": "0",
                              },
                              "background": "#fff",
                              "borderRadius": 8,
                              "boxShadow": "none",
                            },
                            "& .chairman-filter": Object {
                              "& .action-filter-box": Object {
                                "margin": "0",
                              },
                              "alignItems": "center",
                              "display": "flex",
                              "justifyContent": "space-between",
                              "margin": "10px 0 15px 0",
                              "width": "100%",
                            },
                            "& .configuration-day": Object {
                              "& .config": Object {
                                "color": "#2B6FED",
                                "cursor": "pointer",
                                "fontWeight": "600",
                              },
                              "alignItems": "center",
                              "display": "flex",
                              "justifyContent": "space-between",
                            },
                            "& .content-boxes": Object {
                              "background": "white",
                              "borderRadius": "8px",
                              "marginTop": "30px",
                            },
                            "& .content-boxes .MuiPaginationItem-page.Mui-selected": Object {
                              "background": "#FC8434",
                              "border": "0",
                              "color": "white",
                            },
                            "& .content-boxes .MuiTableCell-head": Object {
                              "color": "#9198a3",
                            },
                            "& .content-boxes .search-unit .MuiInput-root": Object {
                              "border": "1px solid lightgray",
                              "borderRadius": "8px",
                              "padding": "5px 10px",
                            },
                            "& .content-boxes .search-unit .MuiInput-root::after": Object {
                              "border": 0,
                              "content": "",
                              "outline": "none",
                              "position": "unset",
                            },
                            "& .content-boxes .search-unit .MuiInput-root::before": Object {
                              "border": 0,
                              "content": "",
                              "outline": "none",
                              "position": "unset",
                            },
                            "& .content-boxes .search-unit svg": Object {
                              "fill": "darkgrey",
                            },
                            "& .content-boxes .top-content": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "justifyContent": "space-between",
                              "padding": "20px",
                            },
                            "& .content-boxes .top-content .heading h2": Object {
                              "fontSize": "22px",
                              "fontWeight": 600,
                            },
                            "& .content-boxes .top-content .right-content": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "gap": "5px",
                            },
                            "& .content-boxes .top-content .right-content span": Object {
                              "color": "#FC8434",
                              "fontWeight": 600,
                            },
                            "& .content-boxes .unit-pagination": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "justifyContent": "space-between",
                              "padding": "20px",
                            },
                            "& .content-boxes .unit-pagination p": Object {
                              "fontWeight": 600,
                            },
                            "& .content-boxes .unit-pagination p span": Object {
                              "color": "#FC8434",
                              "fontWeight": 600,
                            },
                            "& .content-boxes .unit-select": Object {
                              "border": "1px solid lightgray",
                              "borderRadius": "8px",
                              "fontWeight": 600,
                              "padding": "12px 40px 12px 10px",
                            },
                            "& .content-boxes .unit-table th": Object {
                              "fontWeight": 600,
                            },
                            "& .content-boxes.ticket-table": Object {
                              "marginTop": "0",
                            },
                            "& .content-boxes.ticket-table .status": Object {
                              "background": "#D4FFE3",
                              "borderRadius": "25px",
                              "color": "#1EC65B",
                              "fontSize": "14px",
                              "fontWeight": 600,
                              "padding": "5px 10px",
                            },
                            "& .content-boxes.ticket-table input": Object {
                              "width": "220px",
                            },
                            "& .dashboard-card-box": Object {
                              "& .card-bottom-info": Object {
                                "alignItems": "center",
                                "display": "flex",
                                "gap": "10px",
                              },
                              "& .card-image": Object {
                                "& img": Object {
                                  "height": "28px",
                                  "width": "28px",
                                },
                                "alignItems": "center",
                                "border": "1px solid #d9d4d3",
                                "borderRadius": "50%",
                                "display": "flex",
                                "height": "40px",
                                "justifyContent": "center",
                                "padding": "10px",
                                "width": "40px",
                              },
                              "& .info-box": Object {
                                "& span": Object {
                                  "color": "#FC8434",
                                  "fontWeight": "600",
                                },
                                "alignItems": "center",
                                "display": "flex",
                                "gap": "8px",
                              },
                              "& h4": Object {
                                "fontSize": "17px",
                                "fontWeight": "600",
                                "margin": "12px 0",
                              },
                              "background": "#fff",
                              "borderRadius": 8,
                              "boxShadow": "none",
                              "padding": "40px 20px 20px 20px",
                            },
                            "& .event-card": Object {
                              "& .event-content-box": Object {
                                "& .event-content": Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "gap": "10px",
                                  "margin": "5px 0",
                                },
                                "& .meeting-state-box": Object {
                                  "& .meeting-state": Object {
                                    "alignItems": "center",
                                    "display": "flex",
                                    "gap": "10px",
                                  },
                                  "alignItems": "center",
                                  "display": "flex",
                                  "gap": "20px",
                                },
                              },
                              "& .event-heading": Object {
                                "& h4": Object {
                                  "marginBottom": "5px",
                                },
                                "& span": Object {
                                  "background": "#D4FFE3",
                                  "borderRadius": "25px",
                                  "color": "#1EC65B",
                                  "fontSize": "14px",
                                  "fontWeight": 600,
                                  "padding": "5px 10px",
                                },
                                "alignItems": "center",
                                "display": "flex",
                                "gap": "10px",
                                "justifyContent": "space-between",
                                "marginBottom": "13px",
                              },
                              "background": "#fff",
                              "borderRadius": 8,
                              "boxShadow": "none",
                              "padding": "20px 20px 20px 20px",
                            },
                            "& .navigation": Object {
                              "& .sub-heading-box": Object {
                                "& h5": Object {
                                  "fontSize": "22px",
                                  "fontWeight": "600",
                                },
                                "alignItems": "center",
                                "display": "flex",
                                "justifyContent": "space-between",
                                "marginBottom": "10px",
                                "marginTop": "10px",
                                "width": "100%",
                              },
                              "alignItems": "flex-start",
                              "display": "flex",
                              "flexDirection": "column",
                            },
                            "& .select-box": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "gap": "14px",
                            },
                            "& .select-year": Object {
                              "& select": Object {
                                "background": "#fff !important",
                              },
                              "background": "#fff",
                              "border": "1px solid lightgrey",
                              "borderRadius": 5,
                              "padding": "2px 12px",
                            },
                            "& .select-year:after": Object {
                              "border": 0,
                              "content": "",
                              "outline": "none",
                              "position": "unset",
                            },
                            "& .select-year:before": Object {
                              "border": 0,
                              "content": "",
                              "outline": "none",
                              "position": "unset",
                            },
                            "& .upcoming-events-box": Object {
                              "marginBottom": "30px",
                            },
                            "& a": Object {
                              "textDecoration": "none !important",
                            },
                            "background": "rgb(244, 247, 255)",
                          },
                          "ownerDashboard": Object {
                            "& .MuiCard-root": Object {
                              "boxShadow": "none",
                              "padding": "20px 0",
                              "textAlign": "center",
                            },
                            "& .MuiCard-root .content-box": Object {
                              "alignItems": "flex-end",
                              "display": "flex",
                              "justifyContent": "space-evenly",
                            },
                            "& .MuiCard-root .content-box .center-content": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "column",
                              "width": "20%",
                            },
                            "& .MuiCard-root .content-box .center-content .image": Object {
                              "marginBottom": "0px",
                            },
                            "& .MuiCard-root .content-box .center-content .image.text": Object {
                              "padding": "15px",
                            },
                            "& .MuiCard-root .content-box .center-content .image.text h4": Object {
                              "color": "#FD9048",
                              "marginBottom": "0px",
                            },
                            "& .MuiCard-root .content-box .center-content .vertical-line": Object {
                              "background": "#F8F9FE",
                              "height": "30px",
                              "width": "3px",
                            },
                            "& .MuiCard-root .content-box .left-content": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "column",
                              "marginBottom": "20px",
                              "textAlign": "center",
                              "width": "40%",
                            },
                            "& .MuiCard-root .content-box .left-content .state": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "column",
                            },
                            "& .MuiCard-root .content-box .right-content": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "column",
                              "marginBottom": "20px",
                              "textAlign": "center",
                              "width": "40%",
                            },
                            "& .MuiCard-root .content-box .right-content .state": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "column",
                            },
                            "& .MuiCard-root .image": Object {
                              "border": "3px solid #F8F9FE",
                              "borderRadius": "50%",
                              "display": "inline-block",
                              "marginBottom": "20px",
                              "padding": "20px",
                            },
                            "& .MuiCard-root .state p": Object {
                              "marginBottom": "5px",
                              "textTransform": "capitalize",
                            },
                            "& .MuiCard-root button": Object {
                              "background": "#F6F6F6",
                              "borderRadius": "25px",
                              "color": "#8A8A8A",
                              "fontWeight": "600",
                              "minWidth": "125px",
                              "padding": "5px 11px",
                            },
                            "& .MuiCard-root button.yellow": Object {
                              "background": "#FEF9F3",
                              "color": "#FD9048",
                            },
                            "& .MuiCard-root h4": Object {
                              "marginBottom": "20px",
                              "textTransform": "capitalize",
                            },
                            "& .MuiCard-root.big-box": Object {
                              "paddingBottom": "0",
                            },
                            "& .dashboard": Object {
                              "height": "85vh",
                              "overflowX": "hidden",
                              "overflowY": "auto",
                            },
                            "& .dashboard .title": Object {
                              "paddingBottom": "5px",
                            },
                            "& .dashboard .title h5": Object {
                              "fontWeight": "600",
                            },
                            "& .menu": Object {
                              "alignItems": "center",
                              "background": "#FFFFFF",
                              "cursor": "pointer",
                              "display": "flex",
                              "fontWeight": "600",
                              "justifyContent": "space-between",
                              "marginBottom": "18px",
                              "padding": "10px 20px",
                            },
                            "& .menu .left-icon": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "justifyContent": "center",
                            },
                            "& .menu .left-icon span.complex-name": Object {
                              "color": "blue",
                              "marginLeft": "10px",
                            },
                            "& .menu .right-icon a": Object {
                              "marginLeft": "15px",
                            },
                            "& .notification-slider": Object {
                              "marginBottom": "20px",
                              "width": "100%",
                            },
                            "& .notification-slider .slick-list .slick-track": Object {
                              "display": "flex",
                              "gap": "20px",
                            },
                            "& .notification-slider .slick-next": Object {
                              "display": "none !important",
                            },
                            "& .notification-slider .slick-prev": Object {
                              "display": "none !important",
                            },
                            "& .notification-slider .slide-box": Object {
                              "background": "white",
                              "borderRadius": "8px",
                              "cursor": "pointer",
                              "padding": "20px",
                              "width": "95% !important",
                            },
                            "& .notification-slider .slide-box .heading": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "gap": "15px",
                            },
                            "& .notification-slider .slide-box .heading span": Object {
                              "fontWeight": "600",
                            },
                            "& .notification-slider .slide-box p": Object {
                              "marginTop": "10px",
                            },
                            "& .right-image": Object {
                              "padding": "25px 60px",
                            },
                            "& a": Object {
                              "textDecoration": "none !important",
                            },
                          },
                        }
                      }
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                      id="DashboardActions"
                      location={
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      match={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        }
                      }
                      navigation={
                        Object {
                          "getParam": [MockFunction],
                          "goBack": [MockFunction],
                          "navigate": [MockFunction],
                        }
                      }
                      t={[Function]}
                    >
                      <Route>
                        <ChairmanSidebar
                          classes={
                            Object {
                              "generalDashboard": Object {
                                "& .action-card": Object {
                                  "& .action-info-box": Object {
                                    "& .action-content-box": Object {
                                      "alignItems": "center",
                                      "display": "flex",
                                      "gap": "50px",
                                    },
                                    "& .action-info": Object {
                                      "& p": Object {
                                        "fontWeight": "600",
                                      },
                                      "& span": Object {
                                        "color": "#FC8434",
                                        "fontSize": "14px",
                                      },
                                      "alignItems": "center",
                                      "display": "flex",
                                      "gap": "15px",
                                    },
                                    "& button": Object {
                                      "background": "#2B6FED",
                                      "borderRadius": "8px",
                                      "color": "white",
                                      "fontWeight": "600",
                                      "padding": "7px 18px",
                                    },
                                    "alignItems": "center",
                                    "display": "flex",
                                    "justifyContent": "space-between",
                                  },
                                  "& p.description": Object {
                                    "margin": "16px 0",
                                  },
                                  "background": "#fff",
                                  "borderRadius": 8,
                                  "boxShadow": "none",
                                  "padding": "20px",
                                },
                                "& .action-filter-box": Object {
                                  "& button": Object {
                                    "background": "#2B6FED",
                                    "borderRadius": "8px",
                                    "color": "white",
                                    "fontWeight": "600",
                                    "padding": "7px 18px",
                                  },
                                  "alignItems": "center",
                                  "display": "flex",
                                  "gap": "18px",
                                  "margin": "15px 0",
                                },
                                "& .budget-table-content-box": Object {
                                  "& .body": Object {
                                    "& .table-content": Object {
                                      "& span": Object {
                                        "fontWeight": "600",
                                      },
                                      "alignItems": "center",
                                      "borderTop": "1px solid #F4F6FB",
                                      "display": "flex",
                                      "justifyContent": "space-between",
                                      "padding": "10px 0",
                                    },
                                    "& .table-header": Object {
                                      "& span": Object {
                                        "color": "#999",
                                      },
                                      "alignItems": "center",
                                      "display": "flex",
                                      "justifyContent": "space-between",
                                      "padding": "10px 0",
                                    },
                                    "padding": "20px 15px",
                                  },
                                  "& .footer": Object {
                                    "& h4": Object {
                                      "color": "#FC8434",
                                      "fontSize": "18px",
                                      "fontWeight": "600",
                                    },
                                    "& p": Object {
                                      "fontSize": "18px",
                                      "fontWeight": "600",
                                    },
                                    "alignItems": "center",
                                    "display": "flex",
                                    "justifyContent": "space-between",
                                    "padding": "20px 15px",
                                  },
                                  "& .header": Object {
                                    "fontSize": "24px",
                                    "fontWeight": "600",
                                    "padding": "20px 15px",
                                  },
                                  "& hr": Object {
                                    "color": "#F4F6FB",
                                    "margin": "0",
                                  },
                                  "background": "#fff",
                                  "borderRadius": 8,
                                  "boxShadow": "none",
                                },
                                "& .chairman-filter": Object {
                                  "& .action-filter-box": Object {
                                    "margin": "0",
                                  },
                                  "alignItems": "center",
                                  "display": "flex",
                                  "justifyContent": "space-between",
                                  "margin": "10px 0 15px 0",
                                  "width": "100%",
                                },
                                "& .configuration-day": Object {
                                  "& .config": Object {
                                    "color": "#2B6FED",
                                    "cursor": "pointer",
                                    "fontWeight": "600",
                                  },
                                  "alignItems": "center",
                                  "display": "flex",
                                  "justifyContent": "space-between",
                                },
                                "& .content-boxes": Object {
                                  "background": "white",
                                  "borderRadius": "8px",
                                  "marginTop": "30px",
                                },
                                "& .content-boxes .MuiPaginationItem-page.Mui-selected": Object {
                                  "background": "#FC8434",
                                  "border": "0",
                                  "color": "white",
                                },
                                "& .content-boxes .MuiTableCell-head": Object {
                                  "color": "#9198a3",
                                },
                                "& .content-boxes .search-unit .MuiInput-root": Object {
                                  "border": "1px solid lightgray",
                                  "borderRadius": "8px",
                                  "padding": "5px 10px",
                                },
                                "& .content-boxes .search-unit .MuiInput-root::after": Object {
                                  "border": 0,
                                  "content": "",
                                  "outline": "none",
                                  "position": "unset",
                                },
                                "& .content-boxes .search-unit .MuiInput-root::before": Object {
                                  "border": 0,
                                  "content": "",
                                  "outline": "none",
                                  "position": "unset",
                                },
                                "& .content-boxes .search-unit svg": Object {
                                  "fill": "darkgrey",
                                },
                                "& .content-boxes .top-content": Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "justifyContent": "space-between",
                                  "padding": "20px",
                                },
                                "& .content-boxes .top-content .heading h2": Object {
                                  "fontSize": "22px",
                                  "fontWeight": 600,
                                },
                                "& .content-boxes .top-content .right-content": Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "gap": "5px",
                                },
                                "& .content-boxes .top-content .right-content span": Object {
                                  "color": "#FC8434",
                                  "fontWeight": 600,
                                },
                                "& .content-boxes .unit-pagination": Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "justifyContent": "space-between",
                                  "padding": "20px",
                                },
                                "& .content-boxes .unit-pagination p": Object {
                                  "fontWeight": 600,
                                },
                                "& .content-boxes .unit-pagination p span": Object {
                                  "color": "#FC8434",
                                  "fontWeight": 600,
                                },
                                "& .content-boxes .unit-select": Object {
                                  "border": "1px solid lightgray",
                                  "borderRadius": "8px",
                                  "fontWeight": 600,
                                  "padding": "12px 40px 12px 10px",
                                },
                                "& .content-boxes .unit-table th": Object {
                                  "fontWeight": 600,
                                },
                                "& .content-boxes.ticket-table": Object {
                                  "marginTop": "0",
                                },
                                "& .content-boxes.ticket-table .status": Object {
                                  "background": "#D4FFE3",
                                  "borderRadius": "25px",
                                  "color": "#1EC65B",
                                  "fontSize": "14px",
                                  "fontWeight": 600,
                                  "padding": "5px 10px",
                                },
                                "& .content-boxes.ticket-table input": Object {
                                  "width": "220px",
                                },
                                "& .dashboard-card-box": Object {
                                  "& .card-bottom-info": Object {
                                    "alignItems": "center",
                                    "display": "flex",
                                    "gap": "10px",
                                  },
                                  "& .card-image": Object {
                                    "& img": Object {
                                      "height": "28px",
                                      "width": "28px",
                                    },
                                    "alignItems": "center",
                                    "border": "1px solid #d9d4d3",
                                    "borderRadius": "50%",
                                    "display": "flex",
                                    "height": "40px",
                                    "justifyContent": "center",
                                    "padding": "10px",
                                    "width": "40px",
                                  },
                                  "& .info-box": Object {
                                    "& span": Object {
                                      "color": "#FC8434",
                                      "fontWeight": "600",
                                    },
                                    "alignItems": "center",
                                    "display": "flex",
                                    "gap": "8px",
                                  },
                                  "& h4": Object {
                                    "fontSize": "17px",
                                    "fontWeight": "600",
                                    "margin": "12px 0",
                                  },
                                  "background": "#fff",
                                  "borderRadius": 8,
                                  "boxShadow": "none",
                                  "padding": "40px 20px 20px 20px",
                                },
                                "& .event-card": Object {
                                  "& .event-content-box": Object {
                                    "& .event-content": Object {
                                      "alignItems": "center",
                                      "display": "flex",
                                      "gap": "10px",
                                      "margin": "5px 0",
                                    },
                                    "& .meeting-state-box": Object {
                                      "& .meeting-state": Object {
                                        "alignItems": "center",
                                        "display": "flex",
                                        "gap": "10px",
                                      },
                                      "alignItems": "center",
                                      "display": "flex",
                                      "gap": "20px",
                                    },
                                  },
                                  "& .event-heading": Object {
                                    "& h4": Object {
                                      "marginBottom": "5px",
                                    },
                                    "& span": Object {
                                      "background": "#D4FFE3",
                                      "borderRadius": "25px",
                                      "color": "#1EC65B",
                                      "fontSize": "14px",
                                      "fontWeight": 600,
                                      "padding": "5px 10px",
                                    },
                                    "alignItems": "center",
                                    "display": "flex",
                                    "gap": "10px",
                                    "justifyContent": "space-between",
                                    "marginBottom": "13px",
                                  },
                                  "background": "#fff",
                                  "borderRadius": 8,
                                  "boxShadow": "none",
                                  "padding": "20px 20px 20px 20px",
                                },
                                "& .navigation": Object {
                                  "& .sub-heading-box": Object {
                                    "& h5": Object {
                                      "fontSize": "22px",
                                      "fontWeight": "600",
                                    },
                                    "alignItems": "center",
                                    "display": "flex",
                                    "justifyContent": "space-between",
                                    "marginBottom": "10px",
                                    "marginTop": "10px",
                                    "width": "100%",
                                  },
                                  "alignItems": "flex-start",
                                  "display": "flex",
                                  "flexDirection": "column",
                                },
                                "& .select-box": Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "gap": "14px",
                                },
                                "& .select-year": Object {
                                  "& select": Object {
                                    "background": "#fff !important",
                                  },
                                  "background": "#fff",
                                  "border": "1px solid lightgrey",
                                  "borderRadius": 5,
                                  "padding": "2px 12px",
                                },
                                "& .select-year:after": Object {
                                  "border": 0,
                                  "content": "",
                                  "outline": "none",
                                  "position": "unset",
                                },
                                "& .select-year:before": Object {
                                  "border": 0,
                                  "content": "",
                                  "outline": "none",
                                  "position": "unset",
                                },
                                "& .upcoming-events-box": Object {
                                  "marginBottom": "30px",
                                },
                                "& a": Object {
                                  "textDecoration": "none !important",
                                },
                                "background": "rgb(244, 247, 255)",
                              },
                              "ownerDashboard": Object {
                                "& .MuiCard-root": Object {
                                  "boxShadow": "none",
                                  "padding": "20px 0",
                                  "textAlign": "center",
                                },
                                "& .MuiCard-root .content-box": Object {
                                  "alignItems": "flex-end",
                                  "display": "flex",
                                  "justifyContent": "space-evenly",
                                },
                                "& .MuiCard-root .content-box .center-content": Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "flexDirection": "column",
                                  "width": "20%",
                                },
                                "& .MuiCard-root .content-box .center-content .image": Object {
                                  "marginBottom": "0px",
                                },
                                "& .MuiCard-root .content-box .center-content .image.text": Object {
                                  "padding": "15px",
                                },
                                "& .MuiCard-root .content-box .center-content .image.text h4": Object {
                                  "color": "#FD9048",
                                  "marginBottom": "0px",
                                },
                                "& .MuiCard-root .content-box .center-content .vertical-line": Object {
                                  "background": "#F8F9FE",
                                  "height": "30px",
                                  "width": "3px",
                                },
                                "& .MuiCard-root .content-box .left-content": Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "flexDirection": "column",
                                  "marginBottom": "20px",
                                  "textAlign": "center",
                                  "width": "40%",
                                },
                                "& .MuiCard-root .content-box .left-content .state": Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "flexDirection": "column",
                                },
                                "& .MuiCard-root .content-box .right-content": Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "flexDirection": "column",
                                  "marginBottom": "20px",
                                  "textAlign": "center",
                                  "width": "40%",
                                },
                                "& .MuiCard-root .content-box .right-content .state": Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "flexDirection": "column",
                                },
                                "& .MuiCard-root .image": Object {
                                  "border": "3px solid #F8F9FE",
                                  "borderRadius": "50%",
                                  "display": "inline-block",
                                  "marginBottom": "20px",
                                  "padding": "20px",
                                },
                                "& .MuiCard-root .state p": Object {
                                  "marginBottom": "5px",
                                  "textTransform": "capitalize",
                                },
                                "& .MuiCard-root button": Object {
                                  "background": "#F6F6F6",
                                  "borderRadius": "25px",
                                  "color": "#8A8A8A",
                                  "fontWeight": "600",
                                  "minWidth": "125px",
                                  "padding": "5px 11px",
                                },
                                "& .MuiCard-root button.yellow": Object {
                                  "background": "#FEF9F3",
                                  "color": "#FD9048",
                                },
                                "& .MuiCard-root h4": Object {
                                  "marginBottom": "20px",
                                  "textTransform": "capitalize",
                                },
                                "& .MuiCard-root.big-box": Object {
                                  "paddingBottom": "0",
                                },
                                "& .dashboard": Object {
                                  "height": "85vh",
                                  "overflowX": "hidden",
                                  "overflowY": "auto",
                                },
                                "& .dashboard .title": Object {
                                  "paddingBottom": "5px",
                                },
                                "& .dashboard .title h5": Object {
                                  "fontWeight": "600",
                                },
                                "& .menu": Object {
                                  "alignItems": "center",
                                  "background": "#FFFFFF",
                                  "cursor": "pointer",
                                  "display": "flex",
                                  "fontWeight": "600",
                                  "justifyContent": "space-between",
                                  "marginBottom": "18px",
                                  "padding": "10px 20px",
                                },
                                "& .menu .left-icon": Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "justifyContent": "center",
                                },
                                "& .menu .left-icon span.complex-name": Object {
                                  "color": "blue",
                                  "marginLeft": "10px",
                                },
                                "& .menu .right-icon a": Object {
                                  "marginLeft": "15px",
                                },
                                "& .notification-slider": Object {
                                  "marginBottom": "20px",
                                  "width": "100%",
                                },
                                "& .notification-slider .slick-list .slick-track": Object {
                                  "display": "flex",
                                  "gap": "20px",
                                },
                                "& .notification-slider .slick-next": Object {
                                  "display": "none !important",
                                },
                                "& .notification-slider .slick-prev": Object {
                                  "display": "none !important",
                                },
                                "& .notification-slider .slide-box": Object {
                                  "background": "white",
                                  "borderRadius": "8px",
                                  "cursor": "pointer",
                                  "padding": "20px",
                                  "width": "95% !important",
                                },
                                "& .notification-slider .slide-box .heading": Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "gap": "15px",
                                },
                                "& .notification-slider .slide-box .heading span": Object {
                                  "fontWeight": "600",
                                },
                                "& .notification-slider .slide-box p": Object {
                                  "marginTop": "10px",
                                },
                                "& .right-image": Object {
                                  "padding": "25px 60px",
                                },
                                "& a": Object {
                                  "textDecoration": "none !important",
                                },
                              },
                            }
                          }
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          id="DashboardActions"
                          location={
                            Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            }
                          }
                          navigation={
                            Object {
                              "getParam": [MockFunction],
                              "goBack": [MockFunction],
                              "navigate": [MockFunction],
                            }
                          }
                          t={[Function]}
                        >
                          <Styled(MuiBox)
                            className="AccordinoList"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-7 AccordinoList"
                            >
                              <WithStyles(ForwardRef(Accordion))
                                expanded={false}
                                onChange={[Function]}
                              >
                                <ForwardRef(Accordion)
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "expanded": "Mui-expanded",
                                      "root": "MuiAccordion-root",
                                      "rounded": "MuiAccordion-rounded",
                                    }
                                  }
                                  expanded={false}
                                  onChange={[Function]}
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MuiAccordion-root MuiAccordion-rounded"
                                    square={false}
                                  >
                                    <ForwardRef(Paper)
                                      className="MuiAccordion-root MuiAccordion-rounded"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      square={false}
                                    >
                                      <div
                                        className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                      >
                                        <WithStyles(ForwardRef(AccordionSummary))
                                          aria-controls="panel2bh-content"
                                          expandIcon={
                                            <Memo
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            />
                                          }
                                          id="Dashboards"
                                          key=".0"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "marginTop": "20px",
                                            }
                                          }
                                        >
                                          <ForwardRef(AccordionSummary)
                                            aria-controls="panel2bh-content"
                                            classes={
                                              Object {
                                                "content": "MuiAccordionSummary-content",
                                                "disabled": "Mui-disabled",
                                                "expandIcon": "MuiAccordionSummary-expandIcon",
                                                "expanded": "Mui-expanded",
                                                "focusVisible": "Mui-focusVisible",
                                                "focused": "Mui-focused",
                                                "root": "MuiAccordionSummary-root",
                                              }
                                            }
                                            expandIcon={
                                              <Memo
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              />
                                            }
                                            id="Dashboards"
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "marginTop": "20px",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              aria-controls="panel2bh-content"
                                              aria-expanded={false}
                                              className="MuiAccordionSummary-root"
                                              component="div"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={false}
                                              focusVisibleClassName="Mui-focusVisible Mui-focused"
                                              id="Dashboards"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "alignItems": "center",
                                                  "marginTop": "20px",
                                                }
                                              }
                                            >
                                              <ForwardRef(ButtonBase)
                                                aria-controls="panel2bh-content"
                                                aria-expanded={false}
                                                className="MuiAccordionSummary-root"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={false}
                                                focusVisibleClassName="Mui-focusVisible Mui-focused"
                                                id="Dashboards"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "alignItems": "center",
                                                    "marginTop": "20px",
                                                  }
                                                }
                                              >
                                                <div
                                                  aria-controls="panel2bh-content"
                                                  aria-disabled={false}
                                                  aria-expanded={false}
                                                  className="MuiButtonBase-root MuiAccordionSummary-root"
                                                  id="Dashboards"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "marginTop": "20px",
                                                    }
                                                  }
                                                  tabIndex={0}
                                                >
                                                  <div
                                                    className="MuiAccordionSummary-content"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))>
                                                      <ForwardRef(Typography)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root MuiTypography-body1"
                                                        >
                                                          <ForwardRef(DashboardOutlinedIcon)>
                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(DashboardOutlinedIcon)>
                                                        </p>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                    <WithStyles(ForwardRef(Typography))
                                                      className="ListItemText"
                                                    >
                                                      <ForwardRef(Typography)
                                                        className="ListItemText"
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root ListItemText MuiTypography-body1"
                                                        />
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </div>
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-hidden={true}
                                                    className="MuiAccordionSummary-expandIcon"
                                                    component="div"
                                                    edge="end"
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(IconButton)
                                                      aria-hidden={true}
                                                      className="MuiAccordionSummary-expandIcon"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      component="div"
                                                      edge="end"
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        aria-hidden={true}
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        component="div"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          aria-hidden={true}
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          role={null}
                                                          tabIndex={null}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            aria-hidden={true}
                                                            className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                            onBlur={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role={null}
                                                            tabIndex={null}
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                >
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                    style={
                                                                      Object {
                                                                        "height": 16,
                                                                        "width": 16,
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root"
                                                                      focusable="false"
                                                                      style={
                                                                        Object {
                                                                          "height": 16,
                                                                          "width": 16,
                                                                        }
                                                                      }
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(AccordionSummary)>
                                        </WithStyles(ForwardRef(AccordionSummary))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={false}
                                          timeout="auto"
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "root": "MuiCollapse-root",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={false}
                                            timeout="auto"
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={false}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={false}
                                            >
                                              <div
                                                className="MuiCollapse-root MuiCollapse-hidden"
                                                style={
                                                  Object {
                                                    "minHeight": "0px",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiCollapse-wrapper"
                                                >
                                                  <div
                                                    className="MuiCollapse-wrapperInner"
                                                  >
                                                    <div
                                                      aria-labelledby="Dashboards"
                                                      id="panel2bh-content"
                                                      role="region"
                                                    >
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".1"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".2"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".3"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".4"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".5"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </Transition>
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </ForwardRef(Accordion)>
                              </WithStyles(ForwardRef(Accordion))>
                              <WithStyles(ForwardRef(Accordion))
                                expanded={false}
                                onChange={[Function]}
                              >
                                <ForwardRef(Accordion)
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "expanded": "Mui-expanded",
                                      "root": "MuiAccordion-root",
                                      "rounded": "MuiAccordion-rounded",
                                    }
                                  }
                                  expanded={false}
                                  onChange={[Function]}
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MuiAccordion-root MuiAccordion-rounded"
                                    square={false}
                                  >
                                    <ForwardRef(Paper)
                                      className="MuiAccordion-root MuiAccordion-rounded"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      square={false}
                                    >
                                      <div
                                        className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                      >
                                        <WithStyles(ForwardRef(AccordionSummary))
                                          className="ListItem"
                                          expandIcon={
                                            <Memo
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            />
                                          }
                                          id="ListItem"
                                          key=".0"
                                        >
                                          <ForwardRef(AccordionSummary)
                                            className="ListItem"
                                            classes={
                                              Object {
                                                "content": "MuiAccordionSummary-content",
                                                "disabled": "Mui-disabled",
                                                "expandIcon": "MuiAccordionSummary-expandIcon",
                                                "expanded": "Mui-expanded",
                                                "focusVisible": "Mui-focusVisible",
                                                "focused": "Mui-focused",
                                                "root": "MuiAccordionSummary-root",
                                              }
                                            }
                                            expandIcon={
                                              <Memo
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              />
                                            }
                                            id="ListItem"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              aria-expanded={false}
                                              className="MuiAccordionSummary-root ListItem"
                                              component="div"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={false}
                                              focusVisibleClassName="Mui-focusVisible Mui-focused"
                                              id="ListItem"
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(ButtonBase)
                                                aria-expanded={false}
                                                className="MuiAccordionSummary-root ListItem"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={false}
                                                focusVisibleClassName="Mui-focusVisible Mui-focused"
                                                id="ListItem"
                                                onClick={[Function]}
                                              >
                                                <div
                                                  aria-disabled={false}
                                                  aria-expanded={false}
                                                  className="MuiButtonBase-root MuiAccordionSummary-root ListItem"
                                                  id="ListItem"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  tabIndex={0}
                                                >
                                                  <div
                                                    className="MuiAccordionSummary-content"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))>
                                                      <ForwardRef(Typography)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root MuiTypography-body1"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/dashboard/assets/myteam.png",
                                                              }
                                                            }
                                                          />
                                                        </p>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                    <WithStyles(ForwardRef(Typography))
                                                      className="ListItemText"
                                                    >
                                                      <ForwardRef(Typography)
                                                        className="ListItemText"
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root ListItemText MuiTypography-body1"
                                                        />
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </div>
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-hidden={true}
                                                    className="MuiAccordionSummary-expandIcon"
                                                    component="div"
                                                    edge="end"
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(IconButton)
                                                      aria-hidden={true}
                                                      className="MuiAccordionSummary-expandIcon"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      component="div"
                                                      edge="end"
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        aria-hidden={true}
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        component="div"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          aria-hidden={true}
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          role={null}
                                                          tabIndex={null}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            aria-hidden={true}
                                                            className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                            onBlur={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role={null}
                                                            tabIndex={null}
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                >
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                    style={
                                                                      Object {
                                                                        "height": 16,
                                                                        "width": 16,
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root"
                                                                      focusable="false"
                                                                      style={
                                                                        Object {
                                                                          "height": 16,
                                                                          "width": 16,
                                                                        }
                                                                      }
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(AccordionSummary)>
                                        </WithStyles(ForwardRef(AccordionSummary))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={false}
                                          timeout="auto"
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "root": "MuiCollapse-root",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={false}
                                            timeout="auto"
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={false}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={false}
                                            >
                                              <div
                                                className="MuiCollapse-root MuiCollapse-hidden"
                                                style={
                                                  Object {
                                                    "minHeight": "0px",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiCollapse-wrapper"
                                                >
                                                  <div
                                                    className="MuiCollapse-wrapperInner"
                                                  >
                                                    <div
                                                      aria-labelledby="ListItem"
                                                      role="region"
                                                    >
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".1"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".2"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".3"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </Transition>
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </ForwardRef(Accordion)>
                              </WithStyles(ForwardRef(Accordion))>
                              <WithStyles(ForwardRef(Accordion))
                                expanded={false}
                                onChange={[Function]}
                              >
                                <ForwardRef(Accordion)
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "expanded": "Mui-expanded",
                                      "root": "MuiAccordion-root",
                                      "rounded": "MuiAccordion-rounded",
                                    }
                                  }
                                  expanded={false}
                                  onChange={[Function]}
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MuiAccordion-root MuiAccordion-rounded"
                                    square={false}
                                  >
                                    <ForwardRef(Paper)
                                      className="MuiAccordion-root MuiAccordion-rounded"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      square={false}
                                    >
                                      <div
                                        className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                      >
                                        <WithStyles(ForwardRef(AccordionSummary))
                                          aria-controls="panel2bh-content"
                                          expandIcon={
                                            <Memo
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            />
                                          }
                                          id="Dashboards"
                                          key=".0"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "marginTop": "20px",
                                            }
                                          }
                                        >
                                          <ForwardRef(AccordionSummary)
                                            aria-controls="panel2bh-content"
                                            classes={
                                              Object {
                                                "content": "MuiAccordionSummary-content",
                                                "disabled": "Mui-disabled",
                                                "expandIcon": "MuiAccordionSummary-expandIcon",
                                                "expanded": "Mui-expanded",
                                                "focusVisible": "Mui-focusVisible",
                                                "focused": "Mui-focused",
                                                "root": "MuiAccordionSummary-root",
                                              }
                                            }
                                            expandIcon={
                                              <Memo
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              />
                                            }
                                            id="Dashboards"
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "marginTop": "20px",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              aria-controls="panel2bh-content"
                                              aria-expanded={false}
                                              className="MuiAccordionSummary-root"
                                              component="div"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={false}
                                              focusVisibleClassName="Mui-focusVisible Mui-focused"
                                              id="Dashboards"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "alignItems": "center",
                                                  "marginTop": "20px",
                                                }
                                              }
                                            >
                                              <ForwardRef(ButtonBase)
                                                aria-controls="panel2bh-content"
                                                aria-expanded={false}
                                                className="MuiAccordionSummary-root"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={false}
                                                focusVisibleClassName="Mui-focusVisible Mui-focused"
                                                id="Dashboards"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "alignItems": "center",
                                                    "marginTop": "20px",
                                                  }
                                                }
                                              >
                                                <div
                                                  aria-controls="panel2bh-content"
                                                  aria-disabled={false}
                                                  aria-expanded={false}
                                                  className="MuiButtonBase-root MuiAccordionSummary-root"
                                                  id="Dashboards"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "marginTop": "20px",
                                                    }
                                                  }
                                                  tabIndex={0}
                                                >
                                                  <div
                                                    className="MuiAccordionSummary-content"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))>
                                                      <ForwardRef(Typography)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root MuiTypography-body1"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/dashboard/assets/community.png",
                                                              }
                                                            }
                                                          />
                                                        </p>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                    <WithStyles(ForwardRef(Typography))
                                                      className="ListItemText"
                                                    >
                                                      <ForwardRef(Typography)
                                                        className="ListItemText"
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root ListItemText MuiTypography-body1"
                                                        />
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </div>
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-hidden={true}
                                                    className="MuiAccordionSummary-expandIcon"
                                                    component="div"
                                                    edge="end"
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(IconButton)
                                                      aria-hidden={true}
                                                      className="MuiAccordionSummary-expandIcon"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      component="div"
                                                      edge="end"
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        aria-hidden={true}
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        component="div"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          aria-hidden={true}
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          role={null}
                                                          tabIndex={null}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            aria-hidden={true}
                                                            className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                            onBlur={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role={null}
                                                            tabIndex={null}
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                >
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                    style={
                                                                      Object {
                                                                        "height": 16,
                                                                        "width": 16,
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root"
                                                                      focusable="false"
                                                                      style={
                                                                        Object {
                                                                          "height": 16,
                                                                          "width": 16,
                                                                        }
                                                                      }
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(AccordionSummary)>
                                        </WithStyles(ForwardRef(AccordionSummary))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={false}
                                          timeout="auto"
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "root": "MuiCollapse-root",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={false}
                                            timeout="auto"
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={false}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={false}
                                            >
                                              <div
                                                className="MuiCollapse-root MuiCollapse-hidden"
                                                style={
                                                  Object {
                                                    "minHeight": "0px",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiCollapse-wrapper"
                                                >
                                                  <div
                                                    className="MuiCollapse-wrapperInner"
                                                  >
                                                    <div
                                                      aria-labelledby="Dashboards"
                                                      id="panel2bh-content"
                                                      role="region"
                                                    >
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".1"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".2"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".3"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".4"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </Transition>
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </ForwardRef(Accordion)>
                              </WithStyles(ForwardRef(Accordion))>
                              <WithStyles(ForwardRef(Accordion))
                                expanded={false}
                                onChange={[Function]}
                              >
                                <ForwardRef(Accordion)
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "expanded": "Mui-expanded",
                                      "root": "MuiAccordion-root",
                                      "rounded": "MuiAccordion-rounded",
                                    }
                                  }
                                  expanded={false}
                                  onChange={[Function]}
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MuiAccordion-root MuiAccordion-rounded"
                                    square={false}
                                  >
                                    <ForwardRef(Paper)
                                      className="MuiAccordion-root MuiAccordion-rounded"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      square={false}
                                    >
                                      <div
                                        className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                      >
                                        <WithStyles(ForwardRef(AccordionSummary))
                                          aria-controls="panel2bh-content"
                                          expandIcon={
                                            <Memo
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            />
                                          }
                                          id="panel2bh-header"
                                          key=".0"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "marginTop": "20px",
                                            }
                                          }
                                        >
                                          <ForwardRef(AccordionSummary)
                                            aria-controls="panel2bh-content"
                                            classes={
                                              Object {
                                                "content": "MuiAccordionSummary-content",
                                                "disabled": "Mui-disabled",
                                                "expandIcon": "MuiAccordionSummary-expandIcon",
                                                "expanded": "Mui-expanded",
                                                "focusVisible": "Mui-focusVisible",
                                                "focused": "Mui-focused",
                                                "root": "MuiAccordionSummary-root",
                                              }
                                            }
                                            expandIcon={
                                              <Memo
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              />
                                            }
                                            id="panel2bh-header"
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "marginTop": "20px",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              aria-controls="panel2bh-content"
                                              aria-expanded={false}
                                              className="MuiAccordionSummary-root"
                                              component="div"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={false}
                                              focusVisibleClassName="Mui-focusVisible Mui-focused"
                                              id="panel2bh-header"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "alignItems": "center",
                                                  "marginTop": "20px",
                                                }
                                              }
                                            >
                                              <ForwardRef(ButtonBase)
                                                aria-controls="panel2bh-content"
                                                aria-expanded={false}
                                                className="MuiAccordionSummary-root"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={false}
                                                focusVisibleClassName="Mui-focusVisible Mui-focused"
                                                id="panel2bh-header"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "alignItems": "center",
                                                    "marginTop": "20px",
                                                  }
                                                }
                                              >
                                                <div
                                                  aria-controls="panel2bh-content"
                                                  aria-disabled={false}
                                                  aria-expanded={false}
                                                  className="MuiButtonBase-root MuiAccordionSummary-root"
                                                  id="panel2bh-header"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "marginTop": "20px",
                                                    }
                                                  }
                                                  tabIndex={0}
                                                >
                                                  <div
                                                    className="MuiAccordionSummary-content"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))>
                                                      <ForwardRef(Typography)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root MuiTypography-body1"
                                                        >
                                                          <ForwardRef(DashboardOutlinedIcon)>
                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(DashboardOutlinedIcon)>
                                                        </p>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                    <WithStyles(ForwardRef(Typography))
                                                      className="ListItemText"
                                                    >
                                                      <ForwardRef(Typography)
                                                        className="ListItemText"
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root ListItemText MuiTypography-body1"
                                                        />
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </div>
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-hidden={true}
                                                    className="MuiAccordionSummary-expandIcon"
                                                    component="div"
                                                    edge="end"
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(IconButton)
                                                      aria-hidden={true}
                                                      className="MuiAccordionSummary-expandIcon"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      component="div"
                                                      edge="end"
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        aria-hidden={true}
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        component="div"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          aria-hidden={true}
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          role={null}
                                                          tabIndex={null}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            aria-hidden={true}
                                                            className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                            onBlur={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role={null}
                                                            tabIndex={null}
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                >
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                    style={
                                                                      Object {
                                                                        "height": 16,
                                                                        "width": 16,
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root"
                                                                      focusable="false"
                                                                      style={
                                                                        Object {
                                                                          "height": 16,
                                                                          "width": 16,
                                                                        }
                                                                      }
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(AccordionSummary)>
                                        </WithStyles(ForwardRef(AccordionSummary))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={false}
                                          timeout="auto"
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "root": "MuiCollapse-root",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={false}
                                            timeout="auto"
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={false}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={false}
                                            >
                                              <div
                                                className="MuiCollapse-root MuiCollapse-hidden"
                                                style={
                                                  Object {
                                                    "minHeight": "0px",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiCollapse-wrapper"
                                                >
                                                  <div
                                                    className="MuiCollapse-wrapperInner"
                                                  >
                                                    <div
                                                      aria-labelledby="panel2bh-header"
                                                      id="panel2bh-content"
                                                      role="region"
                                                    >
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".1"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".2"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".3"
                                                        onClick={[Function]}
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </Transition>
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </ForwardRef(Accordion)>
                              </WithStyles(ForwardRef(Accordion))>
                              <Styled(MuiBox)
                                className="SingleLink"
                              >
                                <div
                                  className="MuiBox-root MuiBox-root-8 SingleLink"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    className="SingleLinkSize"
                                  >
                                    <ForwardRef(Typography)
                                      className="SingleLinkSize"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                    >
                                      <p
                                        className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                      >
                                        <ForwardRef(DashboardOutlinedIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(DashboardOutlinedIcon)>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <div
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      className="SingleLinkSize"
                                    >
                                      <ForwardRef(Typography)
                                        className="SingleLinkSize"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                      >
                                        <p
                                          className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                        />
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </div>
                                </div>
                              </Styled(MuiBox)>
                              <WithStyles(ForwardRef(Accordion))
                                expanded={false}
                                onChange={[Function]}
                              >
                                <ForwardRef(Accordion)
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "expanded": "Mui-expanded",
                                      "root": "MuiAccordion-root",
                                      "rounded": "MuiAccordion-rounded",
                                    }
                                  }
                                  expanded={false}
                                  onChange={[Function]}
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MuiAccordion-root MuiAccordion-rounded"
                                    square={false}
                                  >
                                    <ForwardRef(Paper)
                                      className="MuiAccordion-root MuiAccordion-rounded"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      square={false}
                                    >
                                      <div
                                        className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                      >
                                        <WithStyles(ForwardRef(AccordionSummary))
                                          expandIcon={
                                            <Memo
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            />
                                          }
                                          key=".0"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "marginTop": "20px",
                                            }
                                          }
                                        >
                                          <ForwardRef(AccordionSummary)
                                            classes={
                                              Object {
                                                "content": "MuiAccordionSummary-content",
                                                "disabled": "Mui-disabled",
                                                "expandIcon": "MuiAccordionSummary-expandIcon",
                                                "expanded": "Mui-expanded",
                                                "focusVisible": "Mui-focusVisible",
                                                "focused": "Mui-focused",
                                                "root": "MuiAccordionSummary-root",
                                              }
                                            }
                                            expandIcon={
                                              <Memo
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              />
                                            }
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "marginTop": "20px",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              aria-expanded={false}
                                              className="MuiAccordionSummary-root"
                                              component="div"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={false}
                                              focusVisibleClassName="Mui-focusVisible Mui-focused"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "alignItems": "center",
                                                  "marginTop": "20px",
                                                }
                                              }
                                            >
                                              <ForwardRef(ButtonBase)
                                                aria-expanded={false}
                                                className="MuiAccordionSummary-root"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={false}
                                                focusVisibleClassName="Mui-focusVisible Mui-focused"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "alignItems": "center",
                                                    "marginTop": "20px",
                                                  }
                                                }
                                              >
                                                <div
                                                  aria-disabled={false}
                                                  aria-expanded={false}
                                                  className="MuiButtonBase-root MuiAccordionSummary-root"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "marginTop": "20px",
                                                    }
                                                  }
                                                  tabIndex={0}
                                                >
                                                  <div
                                                    className="MuiAccordionSummary-content"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))>
                                                      <ForwardRef(Typography)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root MuiTypography-body1"
                                                        >
                                                          <img
                                                            alt=""
                                                            src={
                                                              Object {
                                                                "testUri": "../../../packages/blocks/dashboard/assets/meetings.png",
                                                              }
                                                            }
                                                          />
                                                        </p>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                    <WithStyles(ForwardRef(Typography))
                                                      className="ListItemText"
                                                    >
                                                      <ForwardRef(Typography)
                                                        className="ListItemText"
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root ListItemText MuiTypography-body1"
                                                        />
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </div>
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-hidden={true}
                                                    className="MuiAccordionSummary-expandIcon"
                                                    component="div"
                                                    edge="end"
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(IconButton)
                                                      aria-hidden={true}
                                                      className="MuiAccordionSummary-expandIcon"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      component="div"
                                                      edge="end"
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        aria-hidden={true}
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        component="div"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          aria-hidden={true}
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          role={null}
                                                          tabIndex={null}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            aria-hidden={true}
                                                            className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                            onBlur={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role={null}
                                                            tabIndex={null}
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                >
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                    style={
                                                                      Object {
                                                                        "height": 16,
                                                                        "width": 16,
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root"
                                                                      focusable="false"
                                                                      style={
                                                                        Object {
                                                                          "height": 16,
                                                                          "width": 16,
                                                                        }
                                                                      }
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(AccordionSummary)>
                                        </WithStyles(ForwardRef(AccordionSummary))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={false}
                                          timeout="auto"
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "root": "MuiCollapse-root",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={false}
                                            timeout="auto"
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={false}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={false}
                                            >
                                              <div
                                                className="MuiCollapse-root MuiCollapse-hidden"
                                                style={
                                                  Object {
                                                    "minHeight": "0px",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiCollapse-wrapper"
                                                >
                                                  <div
                                                    className="MuiCollapse-wrapperInner"
                                                  >
                                                    <div
                                                      role="region"
                                                    >
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".1"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "cursor": "pointer",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "pointer",
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".2"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "cursor": "pointer",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "pointer",
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </Transition>
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </ForwardRef(Accordion)>
                              </WithStyles(ForwardRef(Accordion))>
                              <Styled(MuiBox)
                                className="SingleLink"
                              >
                                <div
                                  className="MuiBox-root MuiBox-root-9 SingleLink"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    className="SingleLinkSize"
                                  >
                                    <ForwardRef(Typography)
                                      className="SingleLinkSize"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                    >
                                      <p
                                        className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                      >
                                        <ForwardRef(DashboardOutlinedIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(DashboardOutlinedIcon)>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <div
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      className="SingleLinkSize"
                                    >
                                      <ForwardRef(Typography)
                                        className="SingleLinkSize"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                      >
                                        <p
                                          className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                        />
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </div>
                                </div>
                              </Styled(MuiBox)>
                              <WithStyles(ForwardRef(Accordion))
                                expanded={false}
                                onChange={[Function]}
                              >
                                <ForwardRef(Accordion)
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "expanded": "Mui-expanded",
                                      "root": "MuiAccordion-root",
                                      "rounded": "MuiAccordion-rounded",
                                    }
                                  }
                                  expanded={false}
                                  onChange={[Function]}
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MuiAccordion-root MuiAccordion-rounded"
                                    square={false}
                                  >
                                    <ForwardRef(Paper)
                                      className="MuiAccordion-root MuiAccordion-rounded"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      square={false}
                                    >
                                      <div
                                        className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                      >
                                        <WithStyles(ForwardRef(AccordionSummary))
                                          expandIcon={
                                            <Memo
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            />
                                          }
                                          key=".0"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "marginTop": "20px",
                                            }
                                          }
                                        >
                                          <ForwardRef(AccordionSummary)
                                            classes={
                                              Object {
                                                "content": "MuiAccordionSummary-content",
                                                "disabled": "Mui-disabled",
                                                "expandIcon": "MuiAccordionSummary-expandIcon",
                                                "expanded": "Mui-expanded",
                                                "focusVisible": "Mui-focusVisible",
                                                "focused": "Mui-focused",
                                                "root": "MuiAccordionSummary-root",
                                              }
                                            }
                                            expandIcon={
                                              <Memo
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              />
                                            }
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "marginTop": "20px",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              aria-expanded={false}
                                              className="MuiAccordionSummary-root"
                                              component="div"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={false}
                                              focusVisibleClassName="Mui-focusVisible Mui-focused"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "alignItems": "center",
                                                  "marginTop": "20px",
                                                }
                                              }
                                            >
                                              <ForwardRef(ButtonBase)
                                                aria-expanded={false}
                                                className="MuiAccordionSummary-root"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={false}
                                                focusVisibleClassName="Mui-focusVisible Mui-focused"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "alignItems": "center",
                                                    "marginTop": "20px",
                                                  }
                                                }
                                              >
                                                <div
                                                  aria-disabled={false}
                                                  aria-expanded={false}
                                                  className="MuiButtonBase-root MuiAccordionSummary-root"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "marginTop": "20px",
                                                    }
                                                  }
                                                  tabIndex={0}
                                                >
                                                  <div
                                                    className="MuiAccordionSummary-content"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))>
                                                      <ForwardRef(Typography)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root MuiTypography-body1"
                                                        >
                                                          <ForwardRef(DashboardOutlinedIcon)>
                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(DashboardOutlinedIcon)>
                                                        </p>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                    <WithStyles(ForwardRef(Typography))
                                                      className="ListItemText"
                                                    >
                                                      <ForwardRef(Typography)
                                                        className="ListItemText"
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root ListItemText MuiTypography-body1"
                                                        />
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </div>
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-hidden={true}
                                                    className="MuiAccordionSummary-expandIcon"
                                                    component="div"
                                                    edge="end"
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(IconButton)
                                                      aria-hidden={true}
                                                      className="MuiAccordionSummary-expandIcon"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      component="div"
                                                      edge="end"
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        aria-hidden={true}
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        component="div"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          aria-hidden={true}
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          role={null}
                                                          tabIndex={null}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            aria-hidden={true}
                                                            className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                            onBlur={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role={null}
                                                            tabIndex={null}
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                >
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                    style={
                                                                      Object {
                                                                        "height": 16,
                                                                        "width": 16,
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root"
                                                                      focusable="false"
                                                                      style={
                                                                        Object {
                                                                          "height": 16,
                                                                          "width": 16,
                                                                        }
                                                                      }
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(AccordionSummary)>
                                        </WithStyles(ForwardRef(AccordionSummary))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={false}
                                          timeout="auto"
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "root": "MuiCollapse-root",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={false}
                                            timeout="auto"
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={false}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={false}
                                            >
                                              <div
                                                className="MuiCollapse-root MuiCollapse-hidden"
                                                style={
                                                  Object {
                                                    "minHeight": "0px",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiCollapse-wrapper"
                                                >
                                                  <div
                                                    className="MuiCollapse-wrapperInner"
                                                  >
                                                    <div
                                                      role="region"
                                                    >
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".1"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "cursor": "pointer",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "pointer",
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".2"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "cursor": "pointer",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "pointer",
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </Transition>
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </ForwardRef(Accordion)>
                              </WithStyles(ForwardRef(Accordion))>
                              <Styled(MuiBox)
                                className="SingleLink"
                              >
                                <div
                                  className="MuiBox-root MuiBox-root-10 SingleLink"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    className="SingleLinkSize"
                                  >
                                    <ForwardRef(Typography)
                                      className="SingleLinkSize"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                    >
                                      <p
                                        className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                      >
                                        <ForwardRef(DashboardOutlinedIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(DashboardOutlinedIcon)>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <div
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      className="SingleLinkSize"
                                    >
                                      <ForwardRef(Typography)
                                        className="SingleLinkSize"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                      >
                                        <p
                                          className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                        />
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </div>
                                </div>
                              </Styled(MuiBox)>
                              <WithStyles(ForwardRef(Accordion))
                                expanded={false}
                                onChange={[Function]}
                              >
                                <ForwardRef(Accordion)
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "expanded": "Mui-expanded",
                                      "root": "MuiAccordion-root",
                                      "rounded": "MuiAccordion-rounded",
                                    }
                                  }
                                  expanded={false}
                                  onChange={[Function]}
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MuiAccordion-root MuiAccordion-rounded"
                                    square={false}
                                  >
                                    <ForwardRef(Paper)
                                      className="MuiAccordion-root MuiAccordion-rounded"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      square={false}
                                    >
                                      <div
                                        className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                      >
                                        <WithStyles(ForwardRef(AccordionSummary))
                                          expandIcon={
                                            <Memo
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            />
                                          }
                                          key=".0"
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "marginTop": "20px",
                                            }
                                          }
                                        >
                                          <ForwardRef(AccordionSummary)
                                            classes={
                                              Object {
                                                "content": "MuiAccordionSummary-content",
                                                "disabled": "Mui-disabled",
                                                "expandIcon": "MuiAccordionSummary-expandIcon",
                                                "expanded": "Mui-expanded",
                                                "focusVisible": "Mui-focusVisible",
                                                "focused": "Mui-focused",
                                                "root": "MuiAccordionSummary-root",
                                              }
                                            }
                                            expandIcon={
                                              <Memo
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              />
                                            }
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "marginTop": "20px",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              aria-expanded={false}
                                              className="MuiAccordionSummary-root"
                                              component="div"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={false}
                                              focusVisibleClassName="Mui-focusVisible Mui-focused"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "alignItems": "center",
                                                  "marginTop": "20px",
                                                }
                                              }
                                            >
                                              <ForwardRef(ButtonBase)
                                                aria-expanded={false}
                                                className="MuiAccordionSummary-root"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="div"
                                                disableRipple={true}
                                                disabled={false}
                                                focusRipple={false}
                                                focusVisibleClassName="Mui-focusVisible Mui-focused"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "alignItems": "center",
                                                    "marginTop": "20px",
                                                  }
                                                }
                                              >
                                                <div
                                                  aria-disabled={false}
                                                  aria-expanded={false}
                                                  className="MuiButtonBase-root MuiAccordionSummary-root"
                                                  onBlur={[Function]}
                                                  onClick={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  role="button"
                                                  style={
                                                    Object {
                                                      "alignItems": "center",
                                                      "marginTop": "20px",
                                                    }
                                                  }
                                                  tabIndex={0}
                                                >
                                                  <div
                                                    className="MuiAccordionSummary-content"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))>
                                                      <ForwardRef(Typography)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root MuiTypography-body1"
                                                        >
                                                          <ForwardRef(DashboardOutlinedIcon)>
                                                            <WithStyles(ForwardRef(SvgIcon))>
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(DashboardOutlinedIcon)>
                                                        </p>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                    <WithStyles(ForwardRef(Typography))
                                                      className="ListItemText"
                                                    >
                                                      <ForwardRef(Typography)
                                                        className="ListItemText"
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                      >
                                                        <p
                                                          className="MuiTypography-root ListItemText MuiTypography-body1"
                                                        />
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </div>
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-hidden={true}
                                                    className="MuiAccordionSummary-expandIcon"
                                                    component="div"
                                                    edge="end"
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(IconButton)
                                                      aria-hidden={true}
                                                      className="MuiAccordionSummary-expandIcon"
                                                      classes={
                                                        Object {
                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                          "label": "MuiIconButton-label",
                                                          "root": "MuiIconButton-root",
                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                        }
                                                      }
                                                      component="div"
                                                      edge="end"
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <WithStyles(ForwardRef(ButtonBase))
                                                        aria-hidden={true}
                                                        centerRipple={true}
                                                        className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        component="div"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <ForwardRef(ButtonBase)
                                                          aria-hidden={true}
                                                          centerRipple={true}
                                                          className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "focusVisible": "Mui-focusVisible",
                                                              "root": "MuiButtonBase-root",
                                                            }
                                                          }
                                                          component="div"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          role={null}
                                                          tabIndex={null}
                                                        >
                                                          <div
                                                            aria-disabled={false}
                                                            aria-hidden={true}
                                                            className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                            onBlur={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            role={null}
                                                            tabIndex={null}
                                                          >
                                                            <span
                                                              className="MuiIconButton-label"
                                                            >
                                                              <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <WithStyles(ForwardRef(SvgIcon))
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                >
                                                                  <ForwardRef(SvgIcon)
                                                                    classes={
                                                                      Object {
                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                        "root": "MuiSvgIcon-root",
                                                                      }
                                                                    }
                                                                    style={
                                                                      Object {
                                                                        "height": 16,
                                                                        "width": 16,
                                                                      }
                                                                    }
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      className="MuiSvgIcon-root"
                                                                      focusable="false"
                                                                      style={
                                                                        Object {
                                                                          "height": 16,
                                                                          "width": 16,
                                                                        }
                                                                      }
                                                                      viewBox="0 0 24 24"
                                                                    >
                                                                      <path
                                                                        d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                      />
                                                                    </svg>
                                                                  </ForwardRef(SvgIcon)>
                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                              </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                            </span>
                                                            <WithStyles(memo)
                                                              center={true}
                                                            >
                                                              <ForwardRef(TouchRipple)
                                                                center={true}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </ForwardRef(TouchRipple)>
                                                            </WithStyles(memo)>
                                                          </div>
                                                        </ForwardRef(ButtonBase)>
                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                    </ForwardRef(IconButton)>
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(AccordionSummary)>
                                        </WithStyles(ForwardRef(AccordionSummary))>
                                        <WithStyles(ForwardRef(Collapse))
                                          in={false}
                                          timeout="auto"
                                        >
                                          <ForwardRef(Collapse)
                                            classes={
                                              Object {
                                                "entered": "MuiCollapse-entered",
                                                "hidden": "MuiCollapse-hidden",
                                                "root": "MuiCollapse-root",
                                                "wrapper": "MuiCollapse-wrapper",
                                                "wrapperInner": "MuiCollapse-wrapperInner",
                                              }
                                            }
                                            in={false}
                                            timeout="auto"
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              enter={true}
                                              exit={true}
                                              in={false}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={null}
                                              unmountOnExit={false}
                                            >
                                              <div
                                                className="MuiCollapse-root MuiCollapse-hidden"
                                                style={
                                                  Object {
                                                    "minHeight": "0px",
                                                  }
                                                }
                                              >
                                                <div
                                                  className="MuiCollapse-wrapper"
                                                >
                                                  <div
                                                    className="MuiCollapse-wrapperInner"
                                                  >
                                                    <div
                                                      role="region"
                                                    >
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".1"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "cursor": "pointer",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "pointer",
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".2"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "cursor": "pointer",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "pointer",
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                      <WithStyles(ForwardRef(AccordionDetails))
                                                        key=".3"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(AccordionDetails)
                                                          classes={
                                                            Object {
                                                              "root": "MuiAccordionDetails-root",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                          style={
                                                            Object {
                                                              "cursor": "pointer",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="MuiAccordionDetails-root"
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "pointer",
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(Typography))
                                                              className="cursor-pointer"
                                                              variant="body2"
                                                            >
                                                              <ForwardRef(Typography)
                                                                className="cursor-pointer"
                                                                classes={
                                                                  Object {
                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                    "alignRight": "MuiTypography-alignRight",
                                                                    "body1": "MuiTypography-body1",
                                                                    "body2": "MuiTypography-body2",
                                                                    "button": "MuiTypography-button",
                                                                    "caption": "MuiTypography-caption",
                                                                    "colorError": "MuiTypography-colorError",
                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                    "displayInline": "MuiTypography-displayInline",
                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                    "h1": "MuiTypography-h1",
                                                                    "h2": "MuiTypography-h2",
                                                                    "h3": "MuiTypography-h3",
                                                                    "h4": "MuiTypography-h4",
                                                                    "h5": "MuiTypography-h5",
                                                                    "h6": "MuiTypography-h6",
                                                                    "noWrap": "MuiTypography-noWrap",
                                                                    "overline": "MuiTypography-overline",
                                                                    "paragraph": "MuiTypography-paragraph",
                                                                    "root": "MuiTypography-root",
                                                                    "srOnly": "MuiTypography-srOnly",
                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                  }
                                                                }
                                                                variant="body2"
                                                              >
                                                                <p
                                                                  className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                                />
                                                              </ForwardRef(Typography)>
                                                            </WithStyles(ForwardRef(Typography))>
                                                          </div>
                                                        </ForwardRef(AccordionDetails)>
                                                      </WithStyles(ForwardRef(AccordionDetails))>
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </Transition>
                                          </ForwardRef(Collapse)>
                                        </WithStyles(ForwardRef(Collapse))>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </ForwardRef(Accordion)>
                              </WithStyles(ForwardRef(Accordion))>
                              <Styled(MuiBox)
                                className="SingleLink"
                              >
                                <div
                                  className="MuiBox-root MuiBox-root-11 SingleLink"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    className="SingleLinkSize"
                                  >
                                    <ForwardRef(Typography)
                                      className="SingleLinkSize"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                    >
                                      <p
                                        className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                      >
                                        <ForwardRef(DashboardOutlinedIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(DashboardOutlinedIcon)>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <div
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      className="SingleLinkSize"
                                    >
                                      <ForwardRef(Typography)
                                        className="SingleLinkSize"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                      >
                                        <p
                                          className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                        />
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </div>
                                </div>
                              </Styled(MuiBox)>
                              <Styled(MuiBox)
                                className="SingleLink"
                              >
                                <div
                                  className="MuiBox-root MuiBox-root-12 SingleLink"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    className="SingleLinkSize"
                                  >
                                    <ForwardRef(Typography)
                                      className="SingleLinkSize"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                    >
                                      <p
                                        className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                      >
                                        <ForwardRef(DashboardOutlinedIcon)>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(DashboardOutlinedIcon)>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <div
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      className="SingleLinkSize"
                                    >
                                      <ForwardRef(Typography)
                                        className="SingleLinkSize"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                      >
                                        <p
                                          className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                        />
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </div>
                                </div>
                              </Styled(MuiBox)>
                            </div>
                          </Styled(MuiBox)>
                          <Styled(MuiBox)
                            className="SideBarBottom"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-13 SideBarBottom"
                            >
                              <Styled(MuiBox)>
                                <div
                                  className="MuiBox-root MuiBox-root-14"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    style={
                                      Object {
                                        "fontSize": 10,
                                        "fontWeight": 600,
                                      }
                                    }
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      style={
                                        Object {
                                          "fontSize": 10,
                                          "fontWeight": 600,
                                        }
                                      }
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1"
                                        style={
                                          Object {
                                            "fontSize": 10,
                                            "fontWeight": 600,
                                          }
                                        }
                                      >
                                        <Styled(MuiBox)
                                          component="span"
                                          style={
                                            Object {
                                              "background": "#ff8100",
                                              "borderRadius": "5px",
                                              "marginRight": 8,
                                              "padding": 8,
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiBox-root MuiBox-root-15"
                                            style={
                                              Object {
                                                "background": "#ff8100",
                                                "borderRadius": "5px",
                                                "marginRight": 8,
                                                "padding": 8,
                                              }
                                            }
                                          />
                                        </Styled(MuiBox)>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Typography))
                                    style={
                                      Object {
                                        "fontSize": 12,
                                        "marginTop": 10,
                                      }
                                    }
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      style={
                                        Object {
                                          "fontSize": 12,
                                          "marginTop": 10,
                                        }
                                      }
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1"
                                        style={
                                          Object {
                                            "fontSize": 12,
                                            "marginTop": 10,
                                          }
                                        }
                                      >
                                         125 
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                              </Styled(MuiBox)>
                              <Styled(MuiBox)>
                                <div
                                  className="MuiBox-root MuiBox-root-16"
                                >
                                  <img
                                    alt="TenantLogo"
                                    width={110}
                                  />
                                </div>
                              </Styled(MuiBox)>
                            </div>
                          </Styled(MuiBox)>
                        </ChairmanSidebar>
                      </Route>
                    </withRouter(ChairmanSidebar)>
                  </div>
                </ForwardRef(Grid)>
              </WithStyles(ForwardRef(Grid))>
              <WithStyles(ForwardRef(Grid))
                md={9}
                sm={9}
                spacing={4}
                style={
                  Object {
                    "paddingTop": 35,
                  }
                }
                xs={9}
              >
                <ForwardRef(Grid)
                  classes={
                    Object {
                      "align-content-xs-center": "MuiGrid-align-content-xs-center",
                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                      "align-items-xs-center": "MuiGrid-align-items-xs-center",
                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                      "container": "MuiGrid-container",
                      "direction-xs-column": "MuiGrid-direction-xs-column",
                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                      "grid-lg-1": "MuiGrid-grid-lg-1",
                      "grid-lg-10": "MuiGrid-grid-lg-10",
                      "grid-lg-11": "MuiGrid-grid-lg-11",
                      "grid-lg-12": "MuiGrid-grid-lg-12",
                      "grid-lg-2": "MuiGrid-grid-lg-2",
                      "grid-lg-3": "MuiGrid-grid-lg-3",
                      "grid-lg-4": "MuiGrid-grid-lg-4",
                      "grid-lg-5": "MuiGrid-grid-lg-5",
                      "grid-lg-6": "MuiGrid-grid-lg-6",
                      "grid-lg-7": "MuiGrid-grid-lg-7",
                      "grid-lg-8": "MuiGrid-grid-lg-8",
                      "grid-lg-9": "MuiGrid-grid-lg-9",
                      "grid-lg-auto": "MuiGrid-grid-lg-auto",
                      "grid-lg-true": "MuiGrid-grid-lg-true",
                      "grid-md-1": "MuiGrid-grid-md-1",
                      "grid-md-10": "MuiGrid-grid-md-10",
                      "grid-md-11": "MuiGrid-grid-md-11",
                      "grid-md-12": "MuiGrid-grid-md-12",
                      "grid-md-2": "MuiGrid-grid-md-2",
                      "grid-md-3": "MuiGrid-grid-md-3",
                      "grid-md-4": "MuiGrid-grid-md-4",
                      "grid-md-5": "MuiGrid-grid-md-5",
                      "grid-md-6": "MuiGrid-grid-md-6",
                      "grid-md-7": "MuiGrid-grid-md-7",
                      "grid-md-8": "MuiGrid-grid-md-8",
                      "grid-md-9": "MuiGrid-grid-md-9",
                      "grid-md-auto": "MuiGrid-grid-md-auto",
                      "grid-md-true": "MuiGrid-grid-md-true",
                      "grid-sm-1": "MuiGrid-grid-sm-1",
                      "grid-sm-10": "MuiGrid-grid-sm-10",
                      "grid-sm-11": "MuiGrid-grid-sm-11",
                      "grid-sm-12": "MuiGrid-grid-sm-12",
                      "grid-sm-2": "MuiGrid-grid-sm-2",
                      "grid-sm-3": "MuiGrid-grid-sm-3",
                      "grid-sm-4": "MuiGrid-grid-sm-4",
                      "grid-sm-5": "MuiGrid-grid-sm-5",
                      "grid-sm-6": "MuiGrid-grid-sm-6",
                      "grid-sm-7": "MuiGrid-grid-sm-7",
                      "grid-sm-8": "MuiGrid-grid-sm-8",
                      "grid-sm-9": "MuiGrid-grid-sm-9",
                      "grid-sm-auto": "MuiGrid-grid-sm-auto",
                      "grid-sm-true": "MuiGrid-grid-sm-true",
                      "grid-xl-1": "MuiGrid-grid-xl-1",
                      "grid-xl-10": "MuiGrid-grid-xl-10",
                      "grid-xl-11": "MuiGrid-grid-xl-11",
                      "grid-xl-12": "MuiGrid-grid-xl-12",
                      "grid-xl-2": "MuiGrid-grid-xl-2",
                      "grid-xl-3": "MuiGrid-grid-xl-3",
                      "grid-xl-4": "MuiGrid-grid-xl-4",
                      "grid-xl-5": "MuiGrid-grid-xl-5",
                      "grid-xl-6": "MuiGrid-grid-xl-6",
                      "grid-xl-7": "MuiGrid-grid-xl-7",
                      "grid-xl-8": "MuiGrid-grid-xl-8",
                      "grid-xl-9": "MuiGrid-grid-xl-9",
                      "grid-xl-auto": "MuiGrid-grid-xl-auto",
                      "grid-xl-true": "MuiGrid-grid-xl-true",
                      "grid-xs-1": "MuiGrid-grid-xs-1",
                      "grid-xs-10": "MuiGrid-grid-xs-10",
                      "grid-xs-11": "MuiGrid-grid-xs-11",
                      "grid-xs-12": "MuiGrid-grid-xs-12",
                      "grid-xs-2": "MuiGrid-grid-xs-2",
                      "grid-xs-3": "MuiGrid-grid-xs-3",
                      "grid-xs-4": "MuiGrid-grid-xs-4",
                      "grid-xs-5": "MuiGrid-grid-xs-5",
                      "grid-xs-6": "MuiGrid-grid-xs-6",
                      "grid-xs-7": "MuiGrid-grid-xs-7",
                      "grid-xs-8": "MuiGrid-grid-xs-8",
                      "grid-xs-9": "MuiGrid-grid-xs-9",
                      "grid-xs-auto": "MuiGrid-grid-xs-auto",
                      "grid-xs-true": "MuiGrid-grid-xs-true",
                      "item": "MuiGrid-item",
                      "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                      "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                      "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                      "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                      "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                      "root": "MuiGrid-root",
                      "spacing-xs-1": "MuiGrid-spacing-xs-1",
                      "spacing-xs-10": "MuiGrid-spacing-xs-10",
                      "spacing-xs-2": "MuiGrid-spacing-xs-2",
                      "spacing-xs-3": "MuiGrid-spacing-xs-3",
                      "spacing-xs-4": "MuiGrid-spacing-xs-4",
                      "spacing-xs-5": "MuiGrid-spacing-xs-5",
                      "spacing-xs-6": "MuiGrid-spacing-xs-6",
                      "spacing-xs-7": "MuiGrid-spacing-xs-7",
                      "spacing-xs-8": "MuiGrid-spacing-xs-8",
                      "spacing-xs-9": "MuiGrid-spacing-xs-9",
                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                      "zeroMinWidth": "MuiGrid-zeroMinWidth",
                    }
                  }
                  md={9}
                  sm={9}
                  spacing={4}
                  style={
                    Object {
                      "paddingTop": 35,
                    }
                  }
                  xs={9}
                >
                  <div
                    className="MuiGrid-root MuiGrid-grid-xs-9 MuiGrid-grid-sm-9 MuiGrid-grid-md-9"
                    style={
                      Object {
                        "paddingTop": 35,
                      }
                    }
                  >
                    <WithStyles(ForwardRef(Container))>
                      <ForwardRef(Container)
                        classes={
                          Object {
                            "disableGutters": "MuiContainer-disableGutters",
                            "fixed": "MuiContainer-fixed",
                            "maxWidthLg": "MuiContainer-maxWidthLg",
                            "maxWidthMd": "MuiContainer-maxWidthMd",
                            "maxWidthSm": "MuiContainer-maxWidthSm",
                            "maxWidthXl": "MuiContainer-maxWidthXl",
                            "maxWidthXs": "MuiContainer-maxWidthXs",
                            "root": "MuiContainer-root",
                          }
                        }
                      >
                        <div
                          className="MuiContainer-root MuiContainer-maxWidthLg"
                        >
                          <Styled(MuiBox)
                            className="navigation"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-17 navigation"
                            >
                              <WithStyles(ForwardRef(Typography))
                                variant="body1"
                              >
                                <ForwardRef(Typography)
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  variant="body1"
                                >
                                  <p
                                    className="MuiTypography-root MuiTypography-body1"
                                  >
                                     /
                                     
                                    <Styled(MuiBox)
                                      component="span"
                                      style={
                                        Object {
                                          "color": "blue",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiBox-root MuiBox-root-18"
                                        style={
                                          Object {
                                            "color": "blue",
                                          }
                                        }
                                      />
                                    </Styled(MuiBox)>
                                  </p>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <Styled(MuiBox)
                                className="sub-heading-box"
                              >
                                <div
                                  className="MuiBox-root MuiBox-root-19 sub-heading-box"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    variant="h5"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      variant="h5"
                                    >
                                      <h5
                                        className="MuiTypography-root MuiTypography-h5"
                                      />
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </div>
                              </Styled(MuiBox)>
                              <Styled(MuiBox)
                                className="action-filter-box"
                              >
                                <div
                                  className="MuiBox-root MuiBox-root-20 action-filter-box"
                                >
                                  <WithStyles(ForwardRef(NativeSelect))
                                    className="select-year"
                                  >
                                    <ForwardRef(NativeSelect)
                                      className="select-year"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiNativeSelect-filled",
                                          "icon": "MuiNativeSelect-icon",
                                          "iconFilled": "MuiNativeSelect-iconFilled",
                                          "iconOpen": "MuiNativeSelect-iconOpen",
                                          "iconOutlined": "MuiNativeSelect-iconOutlined",
                                          "nativeInput": "MuiNativeSelect-nativeInput",
                                          "outlined": "MuiNativeSelect-outlined",
                                          "root": "MuiNativeSelect-root",
                                          "select": "MuiNativeSelect-select",
                                          "selectMenu": "MuiNativeSelect-selectMenu",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(Input))
                                        className="select-year"
                                        inputComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "IconComponent": [Function],
                                              "children": [Function],
                                              "className": [Function],
                                              "classes": [Function],
                                              "disabled": [Function],
                                              "inputRef": [Function],
                                              "multiple": [Function],
                                              "name": [Function],
                                              "onChange": [Function],
                                              "value": [Function],
                                              "variant": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        inputProps={
                                          Object {
                                            "IconComponent": Object {
                                              "$$typeof": Symbol(react.memo),
                                              "compare": null,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                            },
                                            "children": Array [
                                              <option
                                                value={2022}
                                              >
                                                Select Building
                                              </option>,
                                              <option
                                                value={2021}
                                              >
                                                2021
                                              </option>,
                                              <option
                                                value={2020}
                                              >
                                                2020
                                              </option>,
                                              <option
                                                value={2019}
                                              >
                                                2019
                                              </option>,
                                            ],
                                            "classes": Object {
                                              "disabled": "Mui-disabled",
                                              "filled": "MuiNativeSelect-filled",
                                              "icon": "MuiNativeSelect-icon",
                                              "iconFilled": "MuiNativeSelect-iconFilled",
                                              "iconOpen": "MuiNativeSelect-iconOpen",
                                              "iconOutlined": "MuiNativeSelect-iconOutlined",
                                              "nativeInput": "MuiNativeSelect-nativeInput",
                                              "outlined": "MuiNativeSelect-outlined",
                                              "root": "MuiNativeSelect-root",
                                              "select": "MuiNativeSelect-select",
                                              "selectMenu": "MuiNativeSelect-selectMenu",
                                            },
                                            "type": undefined,
                                            "variant": undefined,
                                          }
                                        }
                                      >
                                        <ForwardRef(Input)
                                          className="select-year"
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root",
                                              "underline": "MuiInput-underline",
                                            }
                                          }
                                          inputComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "IconComponent": [Function],
                                                "children": [Function],
                                                "className": [Function],
                                                "classes": [Function],
                                                "disabled": [Function],
                                                "inputRef": [Function],
                                                "multiple": [Function],
                                                "name": [Function],
                                                "onChange": [Function],
                                                "value": [Function],
                                                "variant": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          inputProps={
                                            Object {
                                              "IconComponent": Object {
                                                "$$typeof": Symbol(react.memo),
                                                "compare": null,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                              },
                                              "children": Array [
                                                <option
                                                  value={2022}
                                                >
                                                  Select Building
                                                </option>,
                                                <option
                                                  value={2021}
                                                >
                                                  2021
                                                </option>,
                                                <option
                                                  value={2020}
                                                >
                                                  2020
                                                </option>,
                                                <option
                                                  value={2019}
                                                >
                                                  2019
                                                </option>,
                                              ],
                                              "classes": Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiNativeSelect-filled",
                                                "icon": "MuiNativeSelect-icon",
                                                "iconFilled": "MuiNativeSelect-iconFilled",
                                                "iconOpen": "MuiNativeSelect-iconOpen",
                                                "iconOutlined": "MuiNativeSelect-iconOutlined",
                                                "nativeInput": "MuiNativeSelect-nativeInput",
                                                "outlined": "MuiNativeSelect-outlined",
                                                "root": "MuiNativeSelect-root",
                                                "select": "MuiNativeSelect-select",
                                                "selectMenu": "MuiNativeSelect-selectMenu",
                                              },
                                              "type": undefined,
                                              "variant": undefined,
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(InputBase))
                                            className="select-year"
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root MuiInput-underline",
                                                "underline": null,
                                              }
                                            }
                                            fullWidth={false}
                                            inputComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "IconComponent": [Function],
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "disabled": [Function],
                                                  "inputRef": [Function],
                                                  "multiple": [Function],
                                                  "name": [Function],
                                                  "onChange": [Function],
                                                  "value": [Function],
                                                  "variant": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            inputProps={
                                              Object {
                                                "IconComponent": Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "compare": null,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                },
                                                "children": Array [
                                                  <option
                                                    value={2022}
                                                  >
                                                    Select Building
                                                  </option>,
                                                  <option
                                                    value={2021}
                                                  >
                                                    2021
                                                  </option>,
                                                  <option
                                                    value={2020}
                                                  >
                                                    2020
                                                  </option>,
                                                  <option
                                                    value={2019}
                                                  >
                                                    2019
                                                  </option>,
                                                ],
                                                "classes": Object {
                                                  "disabled": "Mui-disabled",
                                                  "filled": "MuiNativeSelect-filled",
                                                  "icon": "MuiNativeSelect-icon",
                                                  "iconFilled": "MuiNativeSelect-iconFilled",
                                                  "iconOpen": "MuiNativeSelect-iconOpen",
                                                  "iconOutlined": "MuiNativeSelect-iconOutlined",
                                                  "nativeInput": "MuiNativeSelect-nativeInput",
                                                  "outlined": "MuiNativeSelect-outlined",
                                                  "root": "MuiNativeSelect-root",
                                                  "select": "MuiNativeSelect-select",
                                                  "selectMenu": "MuiNativeSelect-selectMenu",
                                                },
                                                "type": undefined,
                                                "variant": undefined,
                                              }
                                            }
                                            multiline={false}
                                            type="text"
                                          >
                                            <ForwardRef(InputBase)
                                              className="select-year"
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                  "input": "MuiInputBase-input MuiInput-input",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                }
                                              }
                                              fullWidth={false}
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "disabled": [Function],
                                                    "inputRef": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onChange": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "children": Array [
                                                    <option
                                                      value={2022}
                                                    >
                                                      Select Building
                                                    </option>,
                                                    <option
                                                      value={2021}
                                                    >
                                                      2021
                                                    </option>,
                                                    <option
                                                      value={2020}
                                                    >
                                                      2020
                                                    </option>,
                                                    <option
                                                      value={2019}
                                                    >
                                                      2019
                                                    </option>,
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiNativeSelect-filled",
                                                    "icon": "MuiNativeSelect-icon",
                                                    "iconFilled": "MuiNativeSelect-iconFilled",
                                                    "iconOpen": "MuiNativeSelect-iconOpen",
                                                    "iconOutlined": "MuiNativeSelect-iconOutlined",
                                                    "nativeInput": "MuiNativeSelect-nativeInput",
                                                    "outlined": "MuiNativeSelect-outlined",
                                                    "root": "MuiNativeSelect-root",
                                                    "select": "MuiNativeSelect-select",
                                                    "selectMenu": "MuiNativeSelect-selectMenu",
                                                  },
                                                  "type": undefined,
                                                  "variant": undefined,
                                                }
                                              }
                                              multiline={false}
                                              type="text"
                                            >
                                              <div
                                                className="MuiInputBase-root MuiInput-root MuiInput-underline select-year"
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(NativeSelectInput)
                                                  IconComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    }
                                                  }
                                                  className="MuiInputBase-input MuiInput-input"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiNativeSelect-filled",
                                                      "icon": "MuiNativeSelect-icon",
                                                      "iconFilled": "MuiNativeSelect-iconFilled",
                                                      "iconOpen": "MuiNativeSelect-iconOpen",
                                                      "iconOutlined": "MuiNativeSelect-iconOutlined",
                                                      "nativeInput": "MuiNativeSelect-nativeInput",
                                                      "outlined": "MuiNativeSelect-outlined",
                                                      "root": "MuiNativeSelect-root",
                                                      "select": "MuiNativeSelect-select",
                                                      "selectMenu": "MuiNativeSelect-selectMenu",
                                                    }
                                                  }
                                                  inputRef={[Function]}
                                                  onAnimationStart={[Function]}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                >
                                                  <select
                                                    className="MuiNativeSelect-root MuiNativeSelect-select MuiInputBase-input MuiInput-input"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                  >
                                                    <option
                                                      value={2022}
                                                    >
                                                      Select Building
                                                    </option>
                                                    <option
                                                      value={2021}
                                                    >
                                                      2021
                                                    </option>
                                                    <option
                                                      value={2020}
                                                    >
                                                      2020
                                                    </option>
                                                    <option
                                                      value={2019}
                                                    >
                                                      2019
                                                    </option>
                                                  </select>
                                                  <ForwardRef(ArrowDropDownIcon)
                                                    className="MuiNativeSelect-icon"
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="MuiNativeSelect-icon"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="MuiNativeSelect-icon"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiNativeSelect-icon"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M7 10l5 5 5-5z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(ArrowDropDownIcon)>
                                                </ForwardRef(NativeSelectInput)>
                                              </div>
                                            </ForwardRef(InputBase)>
                                          </WithStyles(ForwardRef(InputBase))>
                                        </ForwardRef(Input)>
                                      </WithStyles(ForwardRef(Input))>
                                    </ForwardRef(NativeSelect)>
                                  </WithStyles(ForwardRef(NativeSelect))>
                                  <WithStyles(ForwardRef(NativeSelect))
                                    className="select-year"
                                  >
                                    <ForwardRef(NativeSelect)
                                      className="select-year"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiNativeSelect-filled",
                                          "icon": "MuiNativeSelect-icon",
                                          "iconFilled": "MuiNativeSelect-iconFilled",
                                          "iconOpen": "MuiNativeSelect-iconOpen",
                                          "iconOutlined": "MuiNativeSelect-iconOutlined",
                                          "nativeInput": "MuiNativeSelect-nativeInput",
                                          "outlined": "MuiNativeSelect-outlined",
                                          "root": "MuiNativeSelect-root",
                                          "select": "MuiNativeSelect-select",
                                          "selectMenu": "MuiNativeSelect-selectMenu",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(Input))
                                        className="select-year"
                                        inputComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "IconComponent": [Function],
                                              "children": [Function],
                                              "className": [Function],
                                              "classes": [Function],
                                              "disabled": [Function],
                                              "inputRef": [Function],
                                              "multiple": [Function],
                                              "name": [Function],
                                              "onChange": [Function],
                                              "value": [Function],
                                              "variant": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        inputProps={
                                          Object {
                                            "IconComponent": Object {
                                              "$$typeof": Symbol(react.memo),
                                              "compare": null,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                            },
                                            "children": Array [
                                              <option
                                                value={2022}
                                              >
                                                Sort By
                                              </option>,
                                              <option
                                                value={2021}
                                              >
                                                2021
                                              </option>,
                                              <option
                                                value={2020}
                                              >
                                                2020
                                              </option>,
                                              <option
                                                value={2019}
                                              >
                                                2019
                                              </option>,
                                            ],
                                            "classes": Object {
                                              "disabled": "Mui-disabled",
                                              "filled": "MuiNativeSelect-filled",
                                              "icon": "MuiNativeSelect-icon",
                                              "iconFilled": "MuiNativeSelect-iconFilled",
                                              "iconOpen": "MuiNativeSelect-iconOpen",
                                              "iconOutlined": "MuiNativeSelect-iconOutlined",
                                              "nativeInput": "MuiNativeSelect-nativeInput",
                                              "outlined": "MuiNativeSelect-outlined",
                                              "root": "MuiNativeSelect-root",
                                              "select": "MuiNativeSelect-select",
                                              "selectMenu": "MuiNativeSelect-selectMenu",
                                            },
                                            "type": undefined,
                                            "variant": undefined,
                                          }
                                        }
                                      >
                                        <ForwardRef(Input)
                                          className="select-year"
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root",
                                              "underline": "MuiInput-underline",
                                            }
                                          }
                                          inputComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "IconComponent": [Function],
                                                "children": [Function],
                                                "className": [Function],
                                                "classes": [Function],
                                                "disabled": [Function],
                                                "inputRef": [Function],
                                                "multiple": [Function],
                                                "name": [Function],
                                                "onChange": [Function],
                                                "value": [Function],
                                                "variant": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          inputProps={
                                            Object {
                                              "IconComponent": Object {
                                                "$$typeof": Symbol(react.memo),
                                                "compare": null,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                              },
                                              "children": Array [
                                                <option
                                                  value={2022}
                                                >
                                                  Sort By
                                                </option>,
                                                <option
                                                  value={2021}
                                                >
                                                  2021
                                                </option>,
                                                <option
                                                  value={2020}
                                                >
                                                  2020
                                                </option>,
                                                <option
                                                  value={2019}
                                                >
                                                  2019
                                                </option>,
                                              ],
                                              "classes": Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiNativeSelect-filled",
                                                "icon": "MuiNativeSelect-icon",
                                                "iconFilled": "MuiNativeSelect-iconFilled",
                                                "iconOpen": "MuiNativeSelect-iconOpen",
                                                "iconOutlined": "MuiNativeSelect-iconOutlined",
                                                "nativeInput": "MuiNativeSelect-nativeInput",
                                                "outlined": "MuiNativeSelect-outlined",
                                                "root": "MuiNativeSelect-root",
                                                "select": "MuiNativeSelect-select",
                                                "selectMenu": "MuiNativeSelect-selectMenu",
                                              },
                                              "type": undefined,
                                              "variant": undefined,
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(InputBase))
                                            className="select-year"
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root MuiInput-underline",
                                                "underline": null,
                                              }
                                            }
                                            fullWidth={false}
                                            inputComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "IconComponent": [Function],
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "disabled": [Function],
                                                  "inputRef": [Function],
                                                  "multiple": [Function],
                                                  "name": [Function],
                                                  "onChange": [Function],
                                                  "value": [Function],
                                                  "variant": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            inputProps={
                                              Object {
                                                "IconComponent": Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "compare": null,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                },
                                                "children": Array [
                                                  <option
                                                    value={2022}
                                                  >
                                                    Sort By
                                                  </option>,
                                                  <option
                                                    value={2021}
                                                  >
                                                    2021
                                                  </option>,
                                                  <option
                                                    value={2020}
                                                  >
                                                    2020
                                                  </option>,
                                                  <option
                                                    value={2019}
                                                  >
                                                    2019
                                                  </option>,
                                                ],
                                                "classes": Object {
                                                  "disabled": "Mui-disabled",
                                                  "filled": "MuiNativeSelect-filled",
                                                  "icon": "MuiNativeSelect-icon",
                                                  "iconFilled": "MuiNativeSelect-iconFilled",
                                                  "iconOpen": "MuiNativeSelect-iconOpen",
                                                  "iconOutlined": "MuiNativeSelect-iconOutlined",
                                                  "nativeInput": "MuiNativeSelect-nativeInput",
                                                  "outlined": "MuiNativeSelect-outlined",
                                                  "root": "MuiNativeSelect-root",
                                                  "select": "MuiNativeSelect-select",
                                                  "selectMenu": "MuiNativeSelect-selectMenu",
                                                },
                                                "type": undefined,
                                                "variant": undefined,
                                              }
                                            }
                                            multiline={false}
                                            type="text"
                                          >
                                            <ForwardRef(InputBase)
                                              className="select-year"
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                  "input": "MuiInputBase-input MuiInput-input",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                }
                                              }
                                              fullWidth={false}
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "disabled": [Function],
                                                    "inputRef": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onChange": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "children": Array [
                                                    <option
                                                      value={2022}
                                                    >
                                                      Sort By
                                                    </option>,
                                                    <option
                                                      value={2021}
                                                    >
                                                      2021
                                                    </option>,
                                                    <option
                                                      value={2020}
                                                    >
                                                      2020
                                                    </option>,
                                                    <option
                                                      value={2019}
                                                    >
                                                      2019
                                                    </option>,
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiNativeSelect-filled",
                                                    "icon": "MuiNativeSelect-icon",
                                                    "iconFilled": "MuiNativeSelect-iconFilled",
                                                    "iconOpen": "MuiNativeSelect-iconOpen",
                                                    "iconOutlined": "MuiNativeSelect-iconOutlined",
                                                    "nativeInput": "MuiNativeSelect-nativeInput",
                                                    "outlined": "MuiNativeSelect-outlined",
                                                    "root": "MuiNativeSelect-root",
                                                    "select": "MuiNativeSelect-select",
                                                    "selectMenu": "MuiNativeSelect-selectMenu",
                                                  },
                                                  "type": undefined,
                                                  "variant": undefined,
                                                }
                                              }
                                              multiline={false}
                                              type="text"
                                            >
                                              <div
                                                className="MuiInputBase-root MuiInput-root MuiInput-underline select-year"
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(NativeSelectInput)
                                                  IconComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    }
                                                  }
                                                  className="MuiInputBase-input MuiInput-input"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiNativeSelect-filled",
                                                      "icon": "MuiNativeSelect-icon",
                                                      "iconFilled": "MuiNativeSelect-iconFilled",
                                                      "iconOpen": "MuiNativeSelect-iconOpen",
                                                      "iconOutlined": "MuiNativeSelect-iconOutlined",
                                                      "nativeInput": "MuiNativeSelect-nativeInput",
                                                      "outlined": "MuiNativeSelect-outlined",
                                                      "root": "MuiNativeSelect-root",
                                                      "select": "MuiNativeSelect-select",
                                                      "selectMenu": "MuiNativeSelect-selectMenu",
                                                    }
                                                  }
                                                  inputRef={[Function]}
                                                  onAnimationStart={[Function]}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                >
                                                  <select
                                                    className="MuiNativeSelect-root MuiNativeSelect-select MuiInputBase-input MuiInput-input"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                  >
                                                    <option
                                                      value={2022}
                                                    >
                                                      Sort By
                                                    </option>
                                                    <option
                                                      value={2021}
                                                    >
                                                      2021
                                                    </option>
                                                    <option
                                                      value={2020}
                                                    >
                                                      2020
                                                    </option>
                                                    <option
                                                      value={2019}
                                                    >
                                                      2019
                                                    </option>
                                                  </select>
                                                  <ForwardRef(ArrowDropDownIcon)
                                                    className="MuiNativeSelect-icon"
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="MuiNativeSelect-icon"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="MuiNativeSelect-icon"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiNativeSelect-icon"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M7 10l5 5 5-5z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(ArrowDropDownIcon)>
                                                </ForwardRef(NativeSelectInput)>
                                              </div>
                                            </ForwardRef(InputBase)>
                                          </WithStyles(ForwardRef(InputBase))>
                                        </ForwardRef(Input)>
                                      </WithStyles(ForwardRef(Input))>
                                    </ForwardRef(NativeSelect)>
                                  </WithStyles(ForwardRef(NativeSelect))>
                                  <WithStyles(ForwardRef(NativeSelect))
                                    className="select-year"
                                  >
                                    <ForwardRef(NativeSelect)
                                      className="select-year"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiNativeSelect-filled",
                                          "icon": "MuiNativeSelect-icon",
                                          "iconFilled": "MuiNativeSelect-iconFilled",
                                          "iconOpen": "MuiNativeSelect-iconOpen",
                                          "iconOutlined": "MuiNativeSelect-iconOutlined",
                                          "nativeInput": "MuiNativeSelect-nativeInput",
                                          "outlined": "MuiNativeSelect-outlined",
                                          "root": "MuiNativeSelect-root",
                                          "select": "MuiNativeSelect-select",
                                          "selectMenu": "MuiNativeSelect-selectMenu",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(Input))
                                        className="select-year"
                                        inputComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "propTypes": Object {
                                              "IconComponent": [Function],
                                              "children": [Function],
                                              "className": [Function],
                                              "classes": [Function],
                                              "disabled": [Function],
                                              "inputRef": [Function],
                                              "multiple": [Function],
                                              "name": [Function],
                                              "onChange": [Function],
                                              "value": [Function],
                                              "variant": [Function],
                                            },
                                            "render": [Function],
                                          }
                                        }
                                        inputProps={
                                          Object {
                                            "IconComponent": Object {
                                              "$$typeof": Symbol(react.memo),
                                              "compare": null,
                                              "type": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "render": [Function],
                                              },
                                            },
                                            "children": Array [
                                              <option
                                                value={2022}
                                              >
                                                Category
                                              </option>,
                                              <option
                                                value={2021}
                                              >
                                                2021
                                              </option>,
                                              <option
                                                value={2020}
                                              >
                                                2020
                                              </option>,
                                              <option
                                                value={2019}
                                              >
                                                2019
                                              </option>,
                                            ],
                                            "classes": Object {
                                              "disabled": "Mui-disabled",
                                              "filled": "MuiNativeSelect-filled",
                                              "icon": "MuiNativeSelect-icon",
                                              "iconFilled": "MuiNativeSelect-iconFilled",
                                              "iconOpen": "MuiNativeSelect-iconOpen",
                                              "iconOutlined": "MuiNativeSelect-iconOutlined",
                                              "nativeInput": "MuiNativeSelect-nativeInput",
                                              "outlined": "MuiNativeSelect-outlined",
                                              "root": "MuiNativeSelect-root",
                                              "select": "MuiNativeSelect-select",
                                              "selectMenu": "MuiNativeSelect-selectMenu",
                                            },
                                            "type": undefined,
                                            "variant": undefined,
                                          }
                                        }
                                      >
                                        <ForwardRef(Input)
                                          className="select-year"
                                          classes={
                                            Object {
                                              "colorSecondary": "MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "error": "Mui-error",
                                              "focused": "Mui-focused",
                                              "formControl": "MuiInput-formControl",
                                              "fullWidth": "MuiInput-fullWidth",
                                              "input": "MuiInput-input",
                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInput-marginDense",
                                              "multiline": "MuiInput-multiline",
                                              "root": "MuiInput-root",
                                              "underline": "MuiInput-underline",
                                            }
                                          }
                                          inputComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "IconComponent": [Function],
                                                "children": [Function],
                                                "className": [Function],
                                                "classes": [Function],
                                                "disabled": [Function],
                                                "inputRef": [Function],
                                                "multiple": [Function],
                                                "name": [Function],
                                                "onChange": [Function],
                                                "value": [Function],
                                                "variant": [Function],
                                              },
                                              "render": [Function],
                                            }
                                          }
                                          inputProps={
                                            Object {
                                              "IconComponent": Object {
                                                "$$typeof": Symbol(react.memo),
                                                "compare": null,
                                                "type": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "render": [Function],
                                                },
                                              },
                                              "children": Array [
                                                <option
                                                  value={2022}
                                                >
                                                  Category
                                                </option>,
                                                <option
                                                  value={2021}
                                                >
                                                  2021
                                                </option>,
                                                <option
                                                  value={2020}
                                                >
                                                  2020
                                                </option>,
                                                <option
                                                  value={2019}
                                                >
                                                  2019
                                                </option>,
                                              ],
                                              "classes": Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiNativeSelect-filled",
                                                "icon": "MuiNativeSelect-icon",
                                                "iconFilled": "MuiNativeSelect-iconFilled",
                                                "iconOpen": "MuiNativeSelect-iconOpen",
                                                "iconOutlined": "MuiNativeSelect-iconOutlined",
                                                "nativeInput": "MuiNativeSelect-nativeInput",
                                                "outlined": "MuiNativeSelect-outlined",
                                                "root": "MuiNativeSelect-root",
                                                "select": "MuiNativeSelect-select",
                                                "selectMenu": "MuiNativeSelect-selectMenu",
                                              },
                                              "type": undefined,
                                              "variant": undefined,
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(InputBase))
                                            className="select-year"
                                            classes={
                                              Object {
                                                "colorSecondary": "MuiInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInput-formControl",
                                                "fullWidth": "MuiInput-fullWidth",
                                                "input": "MuiInput-input",
                                                "inputMarginDense": "MuiInput-inputMarginDense",
                                                "inputMultiline": "MuiInput-inputMultiline",
                                                "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                "marginDense": "MuiInput-marginDense",
                                                "multiline": "MuiInput-multiline",
                                                "root": "MuiInput-root MuiInput-underline",
                                                "underline": null,
                                              }
                                            }
                                            fullWidth={false}
                                            inputComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "propTypes": Object {
                                                  "IconComponent": [Function],
                                                  "children": [Function],
                                                  "className": [Function],
                                                  "classes": [Function],
                                                  "disabled": [Function],
                                                  "inputRef": [Function],
                                                  "multiple": [Function],
                                                  "name": [Function],
                                                  "onChange": [Function],
                                                  "value": [Function],
                                                  "variant": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            inputProps={
                                              Object {
                                                "IconComponent": Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "compare": null,
                                                  "type": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "render": [Function],
                                                  },
                                                },
                                                "children": Array [
                                                  <option
                                                    value={2022}
                                                  >
                                                    Category
                                                  </option>,
                                                  <option
                                                    value={2021}
                                                  >
                                                    2021
                                                  </option>,
                                                  <option
                                                    value={2020}
                                                  >
                                                    2020
                                                  </option>,
                                                  <option
                                                    value={2019}
                                                  >
                                                    2019
                                                  </option>,
                                                ],
                                                "classes": Object {
                                                  "disabled": "Mui-disabled",
                                                  "filled": "MuiNativeSelect-filled",
                                                  "icon": "MuiNativeSelect-icon",
                                                  "iconFilled": "MuiNativeSelect-iconFilled",
                                                  "iconOpen": "MuiNativeSelect-iconOpen",
                                                  "iconOutlined": "MuiNativeSelect-iconOutlined",
                                                  "nativeInput": "MuiNativeSelect-nativeInput",
                                                  "outlined": "MuiNativeSelect-outlined",
                                                  "root": "MuiNativeSelect-root",
                                                  "select": "MuiNativeSelect-select",
                                                  "selectMenu": "MuiNativeSelect-selectMenu",
                                                },
                                                "type": undefined,
                                                "variant": undefined,
                                              }
                                            }
                                            multiline={false}
                                            type="text"
                                          >
                                            <ForwardRef(InputBase)
                                              className="select-year"
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                                  "adornedStart": "MuiInputBase-adornedStart",
                                                  "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                  "disabled": "Mui-disabled Mui-disabled",
                                                  "error": "Mui-error Mui-error",
                                                  "focused": "Mui-focused Mui-focused",
                                                  "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                  "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                  "input": "MuiInputBase-input MuiInput-input",
                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                  "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                  "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                  "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                }
                                              }
                                              fullWidth={false}
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "disabled": [Function],
                                                    "inputRef": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onChange": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "children": Array [
                                                    <option
                                                      value={2022}
                                                    >
                                                      Category
                                                    </option>,
                                                    <option
                                                      value={2021}
                                                    >
                                                      2021
                                                    </option>,
                                                    <option
                                                      value={2020}
                                                    >
                                                      2020
                                                    </option>,
                                                    <option
                                                      value={2019}
                                                    >
                                                      2019
                                                    </option>,
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiNativeSelect-filled",
                                                    "icon": "MuiNativeSelect-icon",
                                                    "iconFilled": "MuiNativeSelect-iconFilled",
                                                    "iconOpen": "MuiNativeSelect-iconOpen",
                                                    "iconOutlined": "MuiNativeSelect-iconOutlined",
                                                    "nativeInput": "MuiNativeSelect-nativeInput",
                                                    "outlined": "MuiNativeSelect-outlined",
                                                    "root": "MuiNativeSelect-root",
                                                    "select": "MuiNativeSelect-select",
                                                    "selectMenu": "MuiNativeSelect-selectMenu",
                                                  },
                                                  "type": undefined,
                                                  "variant": undefined,
                                                }
                                              }
                                              multiline={false}
                                              type="text"
                                            >
                                              <div
                                                className="MuiInputBase-root MuiInput-root MuiInput-underline select-year"
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(NativeSelectInput)
                                                  IconComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    }
                                                  }
                                                  className="MuiInputBase-input MuiInput-input"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiNativeSelect-filled",
                                                      "icon": "MuiNativeSelect-icon",
                                                      "iconFilled": "MuiNativeSelect-iconFilled",
                                                      "iconOpen": "MuiNativeSelect-iconOpen",
                                                      "iconOutlined": "MuiNativeSelect-iconOutlined",
                                                      "nativeInput": "MuiNativeSelect-nativeInput",
                                                      "outlined": "MuiNativeSelect-outlined",
                                                      "root": "MuiNativeSelect-root",
                                                      "select": "MuiNativeSelect-select",
                                                      "selectMenu": "MuiNativeSelect-selectMenu",
                                                    }
                                                  }
                                                  inputRef={[Function]}
                                                  onAnimationStart={[Function]}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                >
                                                  <select
                                                    className="MuiNativeSelect-root MuiNativeSelect-select MuiInputBase-input MuiInput-input"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                  >
                                                    <option
                                                      value={2022}
                                                    >
                                                      Category
                                                    </option>
                                                    <option
                                                      value={2021}
                                                    >
                                                      2021
                                                    </option>
                                                    <option
                                                      value={2020}
                                                    >
                                                      2020
                                                    </option>
                                                    <option
                                                      value={2019}
                                                    >
                                                      2019
                                                    </option>
                                                  </select>
                                                  <ForwardRef(ArrowDropDownIcon)
                                                    className="MuiNativeSelect-icon"
                                                  >
                                                    <WithStyles(ForwardRef(SvgIcon))
                                                      className="MuiNativeSelect-icon"
                                                    >
                                                      <ForwardRef(SvgIcon)
                                                        className="MuiNativeSelect-icon"
                                                        classes={
                                                          Object {
                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                            "colorError": "MuiSvgIcon-colorError",
                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                            "root": "MuiSvgIcon-root",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiNativeSelect-icon"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M7 10l5 5 5-5z"
                                                          />
                                                        </svg>
                                                      </ForwardRef(SvgIcon)>
                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                  </ForwardRef(ArrowDropDownIcon)>
                                                </ForwardRef(NativeSelectInput)>
                                              </div>
                                            </ForwardRef(InputBase)>
                                          </WithStyles(ForwardRef(InputBase))>
                                        </ForwardRef(Input)>
                                      </WithStyles(ForwardRef(Input))>
                                    </ForwardRef(NativeSelect)>
                                  </WithStyles(ForwardRef(NativeSelect))>
                                  <WithStyles(ForwardRef(Button))
                                    startIcon={<Memo />}
                                  >
                                    <ForwardRef(Button)
                                      classes={
                                        Object {
                                          "colorInherit": "MuiButton-colorInherit",
                                          "contained": "MuiButton-contained",
                                          "containedPrimary": "MuiButton-containedPrimary",
                                          "containedSecondary": "MuiButton-containedSecondary",
                                          "containedSizeLarge": "MuiButton-containedSizeLarge",
                                          "containedSizeSmall": "MuiButton-containedSizeSmall",
                                          "disableElevation": "MuiButton-disableElevation",
                                          "disabled": "Mui-disabled",
                                          "endIcon": "MuiButton-endIcon",
                                          "focusVisible": "Mui-focusVisible",
                                          "fullWidth": "MuiButton-fullWidth",
                                          "iconSizeLarge": "MuiButton-iconSizeLarge",
                                          "iconSizeMedium": "MuiButton-iconSizeMedium",
                                          "iconSizeSmall": "MuiButton-iconSizeSmall",
                                          "label": "MuiButton-label",
                                          "outlined": "MuiButton-outlined",
                                          "outlinedPrimary": "MuiButton-outlinedPrimary",
                                          "outlinedSecondary": "MuiButton-outlinedSecondary",
                                          "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                          "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                          "root": "MuiButton-root",
                                          "sizeLarge": "MuiButton-sizeLarge",
                                          "sizeSmall": "MuiButton-sizeSmall",
                                          "startIcon": "MuiButton-startIcon",
                                          "text": "MuiButton-text",
                                          "textPrimary": "MuiButton-textPrimary",
                                          "textSecondary": "MuiButton-textSecondary",
                                          "textSizeLarge": "MuiButton-textSizeLarge",
                                          "textSizeSmall": "MuiButton-textSizeSmall",
                                        }
                                      }
                                      startIcon={<Memo />}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        className="MuiButton-root MuiButton-text"
                                        component="button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName="Mui-focusVisible"
                                        type="button"
                                      >
                                        <ForwardRef(ButtonBase)
                                          className="MuiButton-root MuiButton-text"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          component="button"
                                          disabled={false}
                                          focusRipple={true}
                                          focusVisibleClassName="Mui-focusVisible"
                                          type="button"
                                        >
                                          <button
                                            className="MuiButtonBase-root MuiButton-root MuiButton-text"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <span
                                              className="MuiButton-label"
                                            >
                                              <span
                                                className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                              >
                                                <ForwardRef(SearchIcon)>
                                                  <WithStyles(ForwardRef(SvgIcon))>
                                                    <ForwardRef(SvgIcon)
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                          "colorError": "MuiSvgIcon-colorError",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                          "root": "MuiSvgIcon-root",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="MuiSvgIcon-root"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                        />
                                                      </svg>
                                                    </ForwardRef(SvgIcon)>
                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                </ForwardRef(SearchIcon)>
                                              </span>
                                              Search
                                            </span>
                                            <WithStyles(memo)
                                              center={false}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={false}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(Button)>
                                  </WithStyles(ForwardRef(Button))>
                                </div>
                              </Styled(MuiBox)>
                            </div>
                          </Styled(MuiBox)>
                          <Styled(MuiBox)>
                            <div
                              className="MuiBox-root MuiBox-root-21"
                            >
                              <WithStyles(ForwardRef(Grid))
                                container={true}
                                spacing={2}
                              >
                                <ForwardRef(Grid)
                                  classes={
                                    Object {
                                      "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                      "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                      "container": "MuiGrid-container",
                                      "direction-xs-column": "MuiGrid-direction-xs-column",
                                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                      "grid-lg-1": "MuiGrid-grid-lg-1",
                                      "grid-lg-10": "MuiGrid-grid-lg-10",
                                      "grid-lg-11": "MuiGrid-grid-lg-11",
                                      "grid-lg-12": "MuiGrid-grid-lg-12",
                                      "grid-lg-2": "MuiGrid-grid-lg-2",
                                      "grid-lg-3": "MuiGrid-grid-lg-3",
                                      "grid-lg-4": "MuiGrid-grid-lg-4",
                                      "grid-lg-5": "MuiGrid-grid-lg-5",
                                      "grid-lg-6": "MuiGrid-grid-lg-6",
                                      "grid-lg-7": "MuiGrid-grid-lg-7",
                                      "grid-lg-8": "MuiGrid-grid-lg-8",
                                      "grid-lg-9": "MuiGrid-grid-lg-9",
                                      "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                      "grid-lg-true": "MuiGrid-grid-lg-true",
                                      "grid-md-1": "MuiGrid-grid-md-1",
                                      "grid-md-10": "MuiGrid-grid-md-10",
                                      "grid-md-11": "MuiGrid-grid-md-11",
                                      "grid-md-12": "MuiGrid-grid-md-12",
                                      "grid-md-2": "MuiGrid-grid-md-2",
                                      "grid-md-3": "MuiGrid-grid-md-3",
                                      "grid-md-4": "MuiGrid-grid-md-4",
                                      "grid-md-5": "MuiGrid-grid-md-5",
                                      "grid-md-6": "MuiGrid-grid-md-6",
                                      "grid-md-7": "MuiGrid-grid-md-7",
                                      "grid-md-8": "MuiGrid-grid-md-8",
                                      "grid-md-9": "MuiGrid-grid-md-9",
                                      "grid-md-auto": "MuiGrid-grid-md-auto",
                                      "grid-md-true": "MuiGrid-grid-md-true",
                                      "grid-sm-1": "MuiGrid-grid-sm-1",
                                      "grid-sm-10": "MuiGrid-grid-sm-10",
                                      "grid-sm-11": "MuiGrid-grid-sm-11",
                                      "grid-sm-12": "MuiGrid-grid-sm-12",
                                      "grid-sm-2": "MuiGrid-grid-sm-2",
                                      "grid-sm-3": "MuiGrid-grid-sm-3",
                                      "grid-sm-4": "MuiGrid-grid-sm-4",
                                      "grid-sm-5": "MuiGrid-grid-sm-5",
                                      "grid-sm-6": "MuiGrid-grid-sm-6",
                                      "grid-sm-7": "MuiGrid-grid-sm-7",
                                      "grid-sm-8": "MuiGrid-grid-sm-8",
                                      "grid-sm-9": "MuiGrid-grid-sm-9",
                                      "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                      "grid-sm-true": "MuiGrid-grid-sm-true",
                                      "grid-xl-1": "MuiGrid-grid-xl-1",
                                      "grid-xl-10": "MuiGrid-grid-xl-10",
                                      "grid-xl-11": "MuiGrid-grid-xl-11",
                                      "grid-xl-12": "MuiGrid-grid-xl-12",
                                      "grid-xl-2": "MuiGrid-grid-xl-2",
                                      "grid-xl-3": "MuiGrid-grid-xl-3",
                                      "grid-xl-4": "MuiGrid-grid-xl-4",
                                      "grid-xl-5": "MuiGrid-grid-xl-5",
                                      "grid-xl-6": "MuiGrid-grid-xl-6",
                                      "grid-xl-7": "MuiGrid-grid-xl-7",
                                      "grid-xl-8": "MuiGrid-grid-xl-8",
                                      "grid-xl-9": "MuiGrid-grid-xl-9",
                                      "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                      "grid-xl-true": "MuiGrid-grid-xl-true",
                                      "grid-xs-1": "MuiGrid-grid-xs-1",
                                      "grid-xs-10": "MuiGrid-grid-xs-10",
                                      "grid-xs-11": "MuiGrid-grid-xs-11",
                                      "grid-xs-12": "MuiGrid-grid-xs-12",
                                      "grid-xs-2": "MuiGrid-grid-xs-2",
                                      "grid-xs-3": "MuiGrid-grid-xs-3",
                                      "grid-xs-4": "MuiGrid-grid-xs-4",
                                      "grid-xs-5": "MuiGrid-grid-xs-5",
                                      "grid-xs-6": "MuiGrid-grid-xs-6",
                                      "grid-xs-7": "MuiGrid-grid-xs-7",
                                      "grid-xs-8": "MuiGrid-grid-xs-8",
                                      "grid-xs-9": "MuiGrid-grid-xs-9",
                                      "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                      "grid-xs-true": "MuiGrid-grid-xs-true",
                                      "item": "MuiGrid-item",
                                      "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                      "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                      "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                      "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                      "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                      "root": "MuiGrid-root",
                                      "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                      "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                      "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                      "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                      "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                      "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                      "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                      "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                      "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                      "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                      "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                    }
                                  }
                                  container={true}
                                  spacing={2}
                                >
                                  <div
                                    className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                                  >
                                    <WithStyles(ForwardRef(Grid))
                                      item={true}
                                      sm={12}
                                    >
                                      <ForwardRef(Grid)
                                        classes={
                                          Object {
                                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                            "container": "MuiGrid-container",
                                            "direction-xs-column": "MuiGrid-direction-xs-column",
                                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                            "grid-lg-1": "MuiGrid-grid-lg-1",
                                            "grid-lg-10": "MuiGrid-grid-lg-10",
                                            "grid-lg-11": "MuiGrid-grid-lg-11",
                                            "grid-lg-12": "MuiGrid-grid-lg-12",
                                            "grid-lg-2": "MuiGrid-grid-lg-2",
                                            "grid-lg-3": "MuiGrid-grid-lg-3",
                                            "grid-lg-4": "MuiGrid-grid-lg-4",
                                            "grid-lg-5": "MuiGrid-grid-lg-5",
                                            "grid-lg-6": "MuiGrid-grid-lg-6",
                                            "grid-lg-7": "MuiGrid-grid-lg-7",
                                            "grid-lg-8": "MuiGrid-grid-lg-8",
                                            "grid-lg-9": "MuiGrid-grid-lg-9",
                                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                            "grid-lg-true": "MuiGrid-grid-lg-true",
                                            "grid-md-1": "MuiGrid-grid-md-1",
                                            "grid-md-10": "MuiGrid-grid-md-10",
                                            "grid-md-11": "MuiGrid-grid-md-11",
                                            "grid-md-12": "MuiGrid-grid-md-12",
                                            "grid-md-2": "MuiGrid-grid-md-2",
                                            "grid-md-3": "MuiGrid-grid-md-3",
                                            "grid-md-4": "MuiGrid-grid-md-4",
                                            "grid-md-5": "MuiGrid-grid-md-5",
                                            "grid-md-6": "MuiGrid-grid-md-6",
                                            "grid-md-7": "MuiGrid-grid-md-7",
                                            "grid-md-8": "MuiGrid-grid-md-8",
                                            "grid-md-9": "MuiGrid-grid-md-9",
                                            "grid-md-auto": "MuiGrid-grid-md-auto",
                                            "grid-md-true": "MuiGrid-grid-md-true",
                                            "grid-sm-1": "MuiGrid-grid-sm-1",
                                            "grid-sm-10": "MuiGrid-grid-sm-10",
                                            "grid-sm-11": "MuiGrid-grid-sm-11",
                                            "grid-sm-12": "MuiGrid-grid-sm-12",
                                            "grid-sm-2": "MuiGrid-grid-sm-2",
                                            "grid-sm-3": "MuiGrid-grid-sm-3",
                                            "grid-sm-4": "MuiGrid-grid-sm-4",
                                            "grid-sm-5": "MuiGrid-grid-sm-5",
                                            "grid-sm-6": "MuiGrid-grid-sm-6",
                                            "grid-sm-7": "MuiGrid-grid-sm-7",
                                            "grid-sm-8": "MuiGrid-grid-sm-8",
                                            "grid-sm-9": "MuiGrid-grid-sm-9",
                                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                            "grid-sm-true": "MuiGrid-grid-sm-true",
                                            "grid-xl-1": "MuiGrid-grid-xl-1",
                                            "grid-xl-10": "MuiGrid-grid-xl-10",
                                            "grid-xl-11": "MuiGrid-grid-xl-11",
                                            "grid-xl-12": "MuiGrid-grid-xl-12",
                                            "grid-xl-2": "MuiGrid-grid-xl-2",
                                            "grid-xl-3": "MuiGrid-grid-xl-3",
                                            "grid-xl-4": "MuiGrid-grid-xl-4",
                                            "grid-xl-5": "MuiGrid-grid-xl-5",
                                            "grid-xl-6": "MuiGrid-grid-xl-6",
                                            "grid-xl-7": "MuiGrid-grid-xl-7",
                                            "grid-xl-8": "MuiGrid-grid-xl-8",
                                            "grid-xl-9": "MuiGrid-grid-xl-9",
                                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                            "grid-xl-true": "MuiGrid-grid-xl-true",
                                            "grid-xs-1": "MuiGrid-grid-xs-1",
                                            "grid-xs-10": "MuiGrid-grid-xs-10",
                                            "grid-xs-11": "MuiGrid-grid-xs-11",
                                            "grid-xs-12": "MuiGrid-grid-xs-12",
                                            "grid-xs-2": "MuiGrid-grid-xs-2",
                                            "grid-xs-3": "MuiGrid-grid-xs-3",
                                            "grid-xs-4": "MuiGrid-grid-xs-4",
                                            "grid-xs-5": "MuiGrid-grid-xs-5",
                                            "grid-xs-6": "MuiGrid-grid-xs-6",
                                            "grid-xs-7": "MuiGrid-grid-xs-7",
                                            "grid-xs-8": "MuiGrid-grid-xs-8",
                                            "grid-xs-9": "MuiGrid-grid-xs-9",
                                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                            "grid-xs-true": "MuiGrid-grid-xs-true",
                                            "item": "MuiGrid-item",
                                            "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                            "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                            "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                            "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                            "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                            "root": "MuiGrid-root",
                                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                          }
                                        }
                                        item={true}
                                        sm={12}
                                      >
                                        <div
                                          className="MuiGrid-root MuiGrid-item MuiGrid-grid-sm-12"
                                        >
                                          <WithStyles(ForwardRef(Card))
                                            className="action-card"
                                          >
                                            <ForwardRef(Card)
                                              className="action-card"
                                              classes={
                                                Object {
                                                  "root": "MuiCard-root",
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(Paper))
                                                className="MuiCard-root action-card"
                                                elevation={1}
                                              >
                                                <ForwardRef(Paper)
                                                  className="MuiCard-root action-card"
                                                  classes={
                                                    Object {
                                                      "elevation0": "MuiPaper-elevation0",
                                                      "elevation1": "MuiPaper-elevation1",
                                                      "elevation10": "MuiPaper-elevation10",
                                                      "elevation11": "MuiPaper-elevation11",
                                                      "elevation12": "MuiPaper-elevation12",
                                                      "elevation13": "MuiPaper-elevation13",
                                                      "elevation14": "MuiPaper-elevation14",
                                                      "elevation15": "MuiPaper-elevation15",
                                                      "elevation16": "MuiPaper-elevation16",
                                                      "elevation17": "MuiPaper-elevation17",
                                                      "elevation18": "MuiPaper-elevation18",
                                                      "elevation19": "MuiPaper-elevation19",
                                                      "elevation2": "MuiPaper-elevation2",
                                                      "elevation20": "MuiPaper-elevation20",
                                                      "elevation21": "MuiPaper-elevation21",
                                                      "elevation22": "MuiPaper-elevation22",
                                                      "elevation23": "MuiPaper-elevation23",
                                                      "elevation24": "MuiPaper-elevation24",
                                                      "elevation3": "MuiPaper-elevation3",
                                                      "elevation4": "MuiPaper-elevation4",
                                                      "elevation5": "MuiPaper-elevation5",
                                                      "elevation6": "MuiPaper-elevation6",
                                                      "elevation7": "MuiPaper-elevation7",
                                                      "elevation8": "MuiPaper-elevation8",
                                                      "elevation9": "MuiPaper-elevation9",
                                                      "outlined": "MuiPaper-outlined",
                                                      "root": "MuiPaper-root",
                                                      "rounded": "MuiPaper-rounded",
                                                    }
                                                  }
                                                  elevation={1}
                                                >
                                                  <div
                                                    className="MuiPaper-root MuiCard-root action-card MuiPaper-elevation1 MuiPaper-rounded"
                                                  >
                                                    <h4>
                                                      To approve a budget report 2022
                                                    </h4>
                                                    <p
                                                      className="description"
                                                    >
                                                      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque gravida, enim ut tincidunt vehicula, liberoan te laoreet nisl, nec vulputate nibh ligula quis risus.
                                                    </p>
                                                    <Styled(MuiBox)
                                                      className="action-info-box"
                                                    >
                                                      <div
                                                        className="MuiBox-root MuiBox-root-22 action-info-box"
                                                      >
                                                        <Styled(MuiBox)
                                                          className="action-content-box"
                                                        >
                                                          <div
                                                            className="MuiBox-root MuiBox-root-23 action-content-box"
                                                          >
                                                            <Styled(MuiBox)
                                                              className="action-info"
                                                            >
                                                              <div
                                                                className="MuiBox-root MuiBox-root-24 action-info"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/dashboard/assets/action-building.png",
                                                                    }
                                                                  }
                                                                />
                                                                <Styled(MuiBox)>
                                                                  <div
                                                                    className="MuiBox-root MuiBox-root-25"
                                                                  >
                                                                    <span>
                                                                      Building
                                                                    </span>
                                                                    <p>
                                                                      Building 1
                                                                    </p>
                                                                  </div>
                                                                </Styled(MuiBox)>
                                                              </div>
                                                            </Styled(MuiBox)>
                                                            <Styled(MuiBox)
                                                              className="action-info"
                                                            >
                                                              <div
                                                                className="MuiBox-root MuiBox-root-26 action-info"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/dashboard/assets/action-assign.png",
                                                                    }
                                                                  }
                                                                />
                                                                <Styled(MuiBox)>
                                                                  <div
                                                                    className="MuiBox-root MuiBox-root-27"
                                                                  >
                                                                    <span>
                                                                      Assigned by
                                                                    </span>
                                                                    <p>
                                                                      John Deo
                                                                    </p>
                                                                  </div>
                                                                </Styled(MuiBox)>
                                                              </div>
                                                            </Styled(MuiBox)>
                                                            <Styled(MuiBox)
                                                              className="action-info"
                                                            >
                                                              <div
                                                                className="MuiBox-root MuiBox-root-28 action-info"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/dashboard/assets/action-calender.png",
                                                                    }
                                                                  }
                                                                />
                                                                <Styled(MuiBox)>
                                                                  <div
                                                                    className="MuiBox-root MuiBox-root-29"
                                                                  >
                                                                    <span>
                                                                      Assigned on
                                                                    </span>
                                                                    <p>
                                                                      June 14, 2023
                                                                    </p>
                                                                  </div>
                                                                </Styled(MuiBox)>
                                                              </div>
                                                            </Styled(MuiBox)>
                                                            <Styled(MuiBox)
                                                              className="action-info"
                                                            >
                                                              <div
                                                                className="MuiBox-root MuiBox-root-30 action-info"
                                                              >
                                                                <img
                                                                  alt=""
                                                                  src={
                                                                    Object {
                                                                      "testUri": "../../../packages/blocks/dashboard/assets/action-calender.png",
                                                                    }
                                                                  }
                                                                />
                                                                <Styled(MuiBox)>
                                                                  <div
                                                                    className="MuiBox-root MuiBox-root-31"
                                                                  >
                                                                    <span>
                                                                      Due till
                                                                    </span>
                                                                    <p>
                                                                      June 14, 2023
                                                                    </p>
                                                                  </div>
                                                                </Styled(MuiBox)>
                                                              </div>
                                                            </Styled(MuiBox)>
                                                          </div>
                                                        </Styled(MuiBox)>
                                                        <WithStyles(ForwardRef(Button))>
                                                          <ForwardRef(Button)
                                                            classes={
                                                              Object {
                                                                "colorInherit": "MuiButton-colorInherit",
                                                                "contained": "MuiButton-contained",
                                                                "containedPrimary": "MuiButton-containedPrimary",
                                                                "containedSecondary": "MuiButton-containedSecondary",
                                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                "disableElevation": "MuiButton-disableElevation",
                                                                "disabled": "Mui-disabled",
                                                                "endIcon": "MuiButton-endIcon",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "fullWidth": "MuiButton-fullWidth",
                                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                "label": "MuiButton-label",
                                                                "outlined": "MuiButton-outlined",
                                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                "root": "MuiButton-root",
                                                                "sizeLarge": "MuiButton-sizeLarge",
                                                                "sizeSmall": "MuiButton-sizeSmall",
                                                                "startIcon": "MuiButton-startIcon",
                                                                "text": "MuiButton-text",
                                                                "textPrimary": "MuiButton-textPrimary",
                                                                "textSecondary": "MuiButton-textSecondary",
                                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(ButtonBase))
                                                              className="MuiButton-root MuiButton-text"
                                                              component="button"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              focusVisibleClassName="Mui-focusVisible"
                                                              type="button"
                                                            >
                                                              <ForwardRef(ButtonBase)
                                                                className="MuiButton-root MuiButton-text"
                                                                classes={
                                                                  Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiButtonBase-root",
                                                                  }
                                                                }
                                                                component="button"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                focusVisibleClassName="Mui-focusVisible"
                                                                type="button"
                                                              >
                                                                <button
                                                                  className="MuiButtonBase-root MuiButton-root MuiButton-text"
                                                                  disabled={false}
                                                                  onBlur={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  tabIndex={0}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="MuiButton-label"
                                                                  >
                                                                     View Assigned Task
                                                                  </span>
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </button>
                                                              </ForwardRef(ButtonBase)>
                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                          </ForwardRef(Button)>
                                                        </WithStyles(ForwardRef(Button))>
                                                      </div>
                                                    </Styled(MuiBox)>
                                                  </div>
                                                </ForwardRef(Paper)>
                                              </WithStyles(ForwardRef(Paper))>
                                            </ForwardRef(Card)>
                                          </WithStyles(ForwardRef(Card))>
                                        </div>
                                      </ForwardRef(Grid)>
                                    </WithStyles(ForwardRef(Grid))>
                                  </div>
                                </ForwardRef(Grid)>
                              </WithStyles(ForwardRef(Grid))>
                            </div>
                          </Styled(MuiBox)>
                        </div>
                      </ForwardRef(Container)>
                    </WithStyles(ForwardRef(Container))>
                  </div>
                </ForwardRef(Grid)>
              </WithStyles(ForwardRef(Grid))>
            </div>
          </Styled(MuiBox)>
        </div>
      </Styled(MuiBox)>
    </DashboardActions>
  </Route>
</withRouter(DashboardActions)>
`;
