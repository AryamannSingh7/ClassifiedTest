// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChairmanSidebar User navigates to ChairmanSidebar 1`] = `
<withRouter(ChairmanSidebar)
  classes={
    Object {
      "generalDashboard": Object {
        "& .action-card": Object {
          "& .action-info-box": Object {
            "& .action-content-box": Object {
              "alignItems": "center",
              "display": "flex",
              "gap": "50px",
            },
            "& .action-info": Object {
              "& p": Object {
                "fontWeight": "600",
              },
              "& span": Object {
                "color": "#FC8434",
                "fontSize": "14px",
              },
              "alignItems": "center",
              "display": "flex",
              "gap": "15px",
            },
            "& button": Object {
              "background": "#2B6FED",
              "borderRadius": "8px",
              "color": "white",
              "fontWeight": "600",
              "padding": "7px 18px",
            },
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
          },
          "& p.description": Object {
            "margin": "16px 0",
          },
          "background": "#fff",
          "borderRadius": 8,
          "boxShadow": "none",
          "padding": "20px",
        },
        "& .action-filter-box": Object {
          "& button": Object {
            "background": "#2B6FED",
            "borderRadius": "8px",
            "color": "white",
            "fontWeight": "600",
            "padding": "7px 18px",
          },
          "alignItems": "center",
          "display": "flex",
          "gap": "18px",
          "margin": "15px 0",
        },
        "& .budget-table-content-box": Object {
          "& .body": Object {
            "& .table-content": Object {
              "& span": Object {
                "fontWeight": "600",
              },
              "alignItems": "center",
              "borderTop": "1px solid #F4F6FB",
              "display": "flex",
              "justifyContent": "space-between",
              "padding": "10px 0",
            },
            "& .table-header": Object {
              "& span": Object {
                "color": "#999",
              },
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "padding": "10px 0",
            },
            "padding": "20px 15px",
          },
          "& .footer": Object {
            "& h4": Object {
              "color": "#FC8434",
              "fontSize": "18px",
              "fontWeight": "600",
            },
            "& p": Object {
              "fontSize": "18px",
              "fontWeight": "600",
            },
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
            "padding": "20px 15px",
          },
          "& .header": Object {
            "fontSize": "24px",
            "fontWeight": "600",
            "padding": "20px 15px",
          },
          "& hr": Object {
            "color": "#F4F6FB",
            "margin": "0",
          },
          "background": "#fff",
          "borderRadius": 8,
          "boxShadow": "none",
        },
        "& .chairman-filter": Object {
          "& .action-filter-box": Object {
            "margin": "0",
          },
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "margin": "10px 0 15px 0",
          "width": "100%",
        },
        "& .configuration-day": Object {
          "& .config": Object {
            "color": "#2B6FED",
            "cursor": "pointer",
            "fontWeight": "600",
          },
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
        },
        "& .content-boxes": Object {
          "background": "white",
          "borderRadius": "8px",
          "marginTop": "30px",
        },
        "& .content-boxes .MuiPaginationItem-page.Mui-selected": Object {
          "background": "#FC8434",
          "border": "0",
          "color": "white",
        },
        "& .content-boxes .MuiTableCell-head": Object {
          "color": "#9198a3",
        },
        "& .content-boxes .search-unit .MuiInput-root": Object {
          "border": "1px solid lightgray",
          "borderRadius": "8px",
          "padding": "5px 10px",
        },
        "& .content-boxes .search-unit .MuiInput-root::after": Object {
          "border": 0,
          "content": "",
          "outline": "none",
          "position": "unset",
        },
        "& .content-boxes .search-unit .MuiInput-root::before": Object {
          "border": 0,
          "content": "",
          "outline": "none",
          "position": "unset",
        },
        "& .content-boxes .search-unit svg": Object {
          "fill": "darkgrey",
        },
        "& .content-boxes .top-content": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "padding": "20px",
        },
        "& .content-boxes .top-content .heading h2": Object {
          "fontSize": "22px",
          "fontWeight": 600,
        },
        "& .content-boxes .top-content .right-content": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "5px",
        },
        "& .content-boxes .top-content .right-content span": Object {
          "color": "#FC8434",
          "fontWeight": 600,
        },
        "& .content-boxes .unit-pagination": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "padding": "20px",
        },
        "& .content-boxes .unit-pagination p": Object {
          "fontWeight": 600,
        },
        "& .content-boxes .unit-pagination p span": Object {
          "color": "#FC8434",
          "fontWeight": 600,
        },
        "& .content-boxes .unit-select": Object {
          "border": "1px solid lightgray",
          "borderRadius": "8px",
          "fontWeight": 600,
          "padding": "12px 40px 12px 10px",
        },
        "& .content-boxes .unit-table th": Object {
          "fontWeight": 600,
        },
        "& .content-boxes.ticket-table": Object {
          "marginTop": "0",
        },
        "& .content-boxes.ticket-table .status": Object {
          "background": "#D4FFE3",
          "borderRadius": "25px",
          "color": "#1EC65B",
          "fontSize": "14px",
          "fontWeight": 600,
          "padding": "5px 10px",
        },
        "& .content-boxes.ticket-table input": Object {
          "width": "220px",
        },
        "& .dashboard-card-box": Object {
          "& .card-bottom-info": Object {
            "alignItems": "center",
            "display": "flex",
            "gap": "10px",
          },
          "& .card-image": Object {
            "& img": Object {
              "height": "28px",
              "width": "28px",
            },
            "alignItems": "center",
            "border": "1px solid #d9d4d3",
            "borderRadius": "50%",
            "display": "flex",
            "height": "40px",
            "justifyContent": "center",
            "padding": "10px",
            "width": "40px",
          },
          "& .info-box": Object {
            "& span": Object {
              "color": "#FC8434",
              "fontWeight": "600",
            },
            "alignItems": "center",
            "display": "flex",
            "gap": "8px",
          },
          "& h4": Object {
            "fontSize": "17px",
            "fontWeight": "600",
            "margin": "12px 0",
          },
          "background": "#fff",
          "borderRadius": 8,
          "boxShadow": "none",
          "padding": "40px 20px 20px 20px",
        },
        "& .event-card": Object {
          "& .event-content-box": Object {
            "& .event-content": Object {
              "alignItems": "center",
              "display": "flex",
              "gap": "10px",
              "margin": "5px 0",
            },
            "& .meeting-state-box": Object {
              "& .meeting-state": Object {
                "alignItems": "center",
                "display": "flex",
                "gap": "10px",
              },
              "alignItems": "center",
              "display": "flex",
              "gap": "20px",
            },
          },
          "& .event-heading": Object {
            "& h4": Object {
              "marginBottom": "5px",
            },
            "& span": Object {
              "background": "#D4FFE3",
              "borderRadius": "25px",
              "color": "#1EC65B",
              "fontSize": "14px",
              "fontWeight": 600,
              "padding": "5px 10px",
            },
            "alignItems": "center",
            "display": "flex",
            "gap": "10px",
            "justifyContent": "space-between",
            "marginBottom": "13px",
          },
          "background": "#fff",
          "borderRadius": 8,
          "boxShadow": "none",
          "padding": "20px 20px 20px 20px",
        },
        "& .navigation": Object {
          "& .sub-heading-box": Object {
            "& h5": Object {
              "fontSize": "22px",
              "fontWeight": "600",
            },
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
            "marginBottom": "10px",
            "marginTop": "10px",
            "width": "100%",
          },
          "alignItems": "flex-start",
          "display": "flex",
          "flexDirection": "column",
        },
        "& .select-box": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "14px",
        },
        "& .select-year": Object {
          "& select": Object {
            "background": "#fff !important",
          },
          "background": "#fff",
          "border": "1px solid lightgrey",
          "borderRadius": 5,
          "padding": "2px 12px",
        },
        "& .select-year:after": Object {
          "border": 0,
          "content": "",
          "outline": "none",
          "position": "unset",
        },
        "& .select-year:before": Object {
          "border": 0,
          "content": "",
          "outline": "none",
          "position": "unset",
        },
        "& .upcoming-events-box": Object {
          "marginBottom": "30px",
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
        "background": "rgb(244, 247, 255)",
      },
      "ownerDashboard": Object {
        "& .MuiCard-root": Object {
          "boxShadow": "none",
          "padding": "20px 0",
          "textAlign": "center",
        },
        "& .MuiCard-root .content-box": Object {
          "alignItems": "flex-end",
          "display": "flex",
          "justifyContent": "space-evenly",
        },
        "& .MuiCard-root .content-box .center-content": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "width": "20%",
        },
        "& .MuiCard-root .content-box .center-content .image": Object {
          "marginBottom": "0px",
        },
        "& .MuiCard-root .content-box .center-content .image.text": Object {
          "padding": "15px",
        },
        "& .MuiCard-root .content-box .center-content .image.text h4": Object {
          "color": "#FD9048",
          "marginBottom": "0px",
        },
        "& .MuiCard-root .content-box .center-content .vertical-line": Object {
          "background": "#F8F9FE",
          "height": "30px",
          "width": "3px",
        },
        "& .MuiCard-root .content-box .left-content": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "marginBottom": "20px",
          "textAlign": "center",
          "width": "40%",
        },
        "& .MuiCard-root .content-box .left-content .state": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
        },
        "& .MuiCard-root .content-box .right-content": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "marginBottom": "20px",
          "textAlign": "center",
          "width": "40%",
        },
        "& .MuiCard-root .content-box .right-content .state": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
        },
        "& .MuiCard-root .image": Object {
          "border": "3px solid #F8F9FE",
          "borderRadius": "50%",
          "display": "inline-block",
          "marginBottom": "20px",
          "padding": "20px",
        },
        "& .MuiCard-root .state p": Object {
          "marginBottom": "5px",
          "textTransform": "capitalize",
        },
        "& .MuiCard-root button": Object {
          "background": "#F6F6F6",
          "borderRadius": "25px",
          "color": "#8A8A8A",
          "fontWeight": "600",
          "minWidth": "125px",
          "padding": "5px 11px",
        },
        "& .MuiCard-root button.yellow": Object {
          "background": "#FEF9F3",
          "color": "#FD9048",
        },
        "& .MuiCard-root h4": Object {
          "marginBottom": "20px",
          "textTransform": "capitalize",
        },
        "& .MuiCard-root.big-box": Object {
          "paddingBottom": "0",
        },
        "& .dashboard": Object {
          "height": "85vh",
          "overflowX": "hidden",
          "overflowY": "auto",
        },
        "& .dashboard .title": Object {
          "paddingBottom": "5px",
        },
        "& .dashboard .title h5": Object {
          "fontWeight": "600",
        },
        "& .menu": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "justifyContent": "space-between",
          "marginBottom": "18px",
          "padding": "10px 20px",
        },
        "& .menu .left-icon": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        },
        "& .menu .left-icon span.complex-name": Object {
          "color": "blue",
          "marginLeft": "10px",
        },
        "& .menu .right-icon a": Object {
          "marginLeft": "15px",
        },
        "& .notification-slider": Object {
          "marginBottom": "20px",
          "width": "100%",
        },
        "& .notification-slider .slick-list .slick-track": Object {
          "display": "flex",
          "gap": "20px",
        },
        "& .notification-slider .slick-next": Object {
          "display": "none !important",
        },
        "& .notification-slider .slick-prev": Object {
          "display": "none !important",
        },
        "& .notification-slider .slide-box": Object {
          "background": "white",
          "borderRadius": "8px",
          "cursor": "pointer",
          "padding": "20px",
          "width": "95% !important",
        },
        "& .notification-slider .slide-box .heading": Object {
          "alignItems": "center",
          "display": "flex",
          "gap": "15px",
        },
        "& .notification-slider .slide-box .heading span": Object {
          "fontWeight": "600",
        },
        "& .notification-slider .slide-box p": Object {
          "marginTop": "10px",
        },
        "& .right-image": Object {
          "padding": "25px 60px",
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
      },
    }
  }
  history={[MockFunction]}
  id="ChairmanSidebar"
  location={[MockFunction]}
  match={[MockFunction]}
  navigation={
    Object {
      "getParam": [MockFunction],
      "goBack": [MockFunction],
      "navigate": [MockFunction],
    }
  }
  t={[Function]}
>
  <Route>
    <ChairmanSidebar
      classes={
        Object {
          "generalDashboard": Object {
            "& .action-card": Object {
              "& .action-info-box": Object {
                "& .action-content-box": Object {
                  "alignItems": "center",
                  "display": "flex",
                  "gap": "50px",
                },
                "& .action-info": Object {
                  "& p": Object {
                    "fontWeight": "600",
                  },
                  "& span": Object {
                    "color": "#FC8434",
                    "fontSize": "14px",
                  },
                  "alignItems": "center",
                  "display": "flex",
                  "gap": "15px",
                },
                "& button": Object {
                  "background": "#2B6FED",
                  "borderRadius": "8px",
                  "color": "white",
                  "fontWeight": "600",
                  "padding": "7px 18px",
                },
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
              },
              "& p.description": Object {
                "margin": "16px 0",
              },
              "background": "#fff",
              "borderRadius": 8,
              "boxShadow": "none",
              "padding": "20px",
            },
            "& .action-filter-box": Object {
              "& button": Object {
                "background": "#2B6FED",
                "borderRadius": "8px",
                "color": "white",
                "fontWeight": "600",
                "padding": "7px 18px",
              },
              "alignItems": "center",
              "display": "flex",
              "gap": "18px",
              "margin": "15px 0",
            },
            "& .budget-table-content-box": Object {
              "& .body": Object {
                "& .table-content": Object {
                  "& span": Object {
                    "fontWeight": "600",
                  },
                  "alignItems": "center",
                  "borderTop": "1px solid #F4F6FB",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "padding": "10px 0",
                },
                "& .table-header": Object {
                  "& span": Object {
                    "color": "#999",
                  },
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "space-between",
                  "padding": "10px 0",
                },
                "padding": "20px 15px",
              },
              "& .footer": Object {
                "& h4": Object {
                  "color": "#FC8434",
                  "fontSize": "18px",
                  "fontWeight": "600",
                },
                "& p": Object {
                  "fontSize": "18px",
                  "fontWeight": "600",
                },
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
                "padding": "20px 15px",
              },
              "& .header": Object {
                "fontSize": "24px",
                "fontWeight": "600",
                "padding": "20px 15px",
              },
              "& hr": Object {
                "color": "#F4F6FB",
                "margin": "0",
              },
              "background": "#fff",
              "borderRadius": 8,
              "boxShadow": "none",
            },
            "& .chairman-filter": Object {
              "& .action-filter-box": Object {
                "margin": "0",
              },
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "margin": "10px 0 15px 0",
              "width": "100%",
            },
            "& .configuration-day": Object {
              "& .config": Object {
                "color": "#2B6FED",
                "cursor": "pointer",
                "fontWeight": "600",
              },
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
            },
            "& .content-boxes": Object {
              "background": "white",
              "borderRadius": "8px",
              "marginTop": "30px",
            },
            "& .content-boxes .MuiPaginationItem-page.Mui-selected": Object {
              "background": "#FC8434",
              "border": "0",
              "color": "white",
            },
            "& .content-boxes .MuiTableCell-head": Object {
              "color": "#9198a3",
            },
            "& .content-boxes .search-unit .MuiInput-root": Object {
              "border": "1px solid lightgray",
              "borderRadius": "8px",
              "padding": "5px 10px",
            },
            "& .content-boxes .search-unit .MuiInput-root::after": Object {
              "border": 0,
              "content": "",
              "outline": "none",
              "position": "unset",
            },
            "& .content-boxes .search-unit .MuiInput-root::before": Object {
              "border": 0,
              "content": "",
              "outline": "none",
              "position": "unset",
            },
            "& .content-boxes .search-unit svg": Object {
              "fill": "darkgrey",
            },
            "& .content-boxes .top-content": Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "padding": "20px",
            },
            "& .content-boxes .top-content .heading h2": Object {
              "fontSize": "22px",
              "fontWeight": 600,
            },
            "& .content-boxes .top-content .right-content": Object {
              "alignItems": "center",
              "display": "flex",
              "gap": "5px",
            },
            "& .content-boxes .top-content .right-content span": Object {
              "color": "#FC8434",
              "fontWeight": 600,
            },
            "& .content-boxes .unit-pagination": Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "space-between",
              "padding": "20px",
            },
            "& .content-boxes .unit-pagination p": Object {
              "fontWeight": 600,
            },
            "& .content-boxes .unit-pagination p span": Object {
              "color": "#FC8434",
              "fontWeight": 600,
            },
            "& .content-boxes .unit-select": Object {
              "border": "1px solid lightgray",
              "borderRadius": "8px",
              "fontWeight": 600,
              "padding": "12px 40px 12px 10px",
            },
            "& .content-boxes .unit-table th": Object {
              "fontWeight": 600,
            },
            "& .content-boxes.ticket-table": Object {
              "marginTop": "0",
            },
            "& .content-boxes.ticket-table .status": Object {
              "background": "#D4FFE3",
              "borderRadius": "25px",
              "color": "#1EC65B",
              "fontSize": "14px",
              "fontWeight": 600,
              "padding": "5px 10px",
            },
            "& .content-boxes.ticket-table input": Object {
              "width": "220px",
            },
            "& .dashboard-card-box": Object {
              "& .card-bottom-info": Object {
                "alignItems": "center",
                "display": "flex",
                "gap": "10px",
              },
              "& .card-image": Object {
                "& img": Object {
                  "height": "28px",
                  "width": "28px",
                },
                "alignItems": "center",
                "border": "1px solid #d9d4d3",
                "borderRadius": "50%",
                "display": "flex",
                "height": "40px",
                "justifyContent": "center",
                "padding": "10px",
                "width": "40px",
              },
              "& .info-box": Object {
                "& span": Object {
                  "color": "#FC8434",
                  "fontWeight": "600",
                },
                "alignItems": "center",
                "display": "flex",
                "gap": "8px",
              },
              "& h4": Object {
                "fontSize": "17px",
                "fontWeight": "600",
                "margin": "12px 0",
              },
              "background": "#fff",
              "borderRadius": 8,
              "boxShadow": "none",
              "padding": "40px 20px 20px 20px",
            },
            "& .event-card": Object {
              "& .event-content-box": Object {
                "& .event-content": Object {
                  "alignItems": "center",
                  "display": "flex",
                  "gap": "10px",
                  "margin": "5px 0",
                },
                "& .meeting-state-box": Object {
                  "& .meeting-state": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "gap": "10px",
                  },
                  "alignItems": "center",
                  "display": "flex",
                  "gap": "20px",
                },
              },
              "& .event-heading": Object {
                "& h4": Object {
                  "marginBottom": "5px",
                },
                "& span": Object {
                  "background": "#D4FFE3",
                  "borderRadius": "25px",
                  "color": "#1EC65B",
                  "fontSize": "14px",
                  "fontWeight": 600,
                  "padding": "5px 10px",
                },
                "alignItems": "center",
                "display": "flex",
                "gap": "10px",
                "justifyContent": "space-between",
                "marginBottom": "13px",
              },
              "background": "#fff",
              "borderRadius": 8,
              "boxShadow": "none",
              "padding": "20px 20px 20px 20px",
            },
            "& .navigation": Object {
              "& .sub-heading-box": Object {
                "& h5": Object {
                  "fontSize": "22px",
                  "fontWeight": "600",
                },
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
                "marginBottom": "10px",
                "marginTop": "10px",
                "width": "100%",
              },
              "alignItems": "flex-start",
              "display": "flex",
              "flexDirection": "column",
            },
            "& .select-box": Object {
              "alignItems": "center",
              "display": "flex",
              "gap": "14px",
            },
            "& .select-year": Object {
              "& select": Object {
                "background": "#fff !important",
              },
              "background": "#fff",
              "border": "1px solid lightgrey",
              "borderRadius": 5,
              "padding": "2px 12px",
            },
            "& .select-year:after": Object {
              "border": 0,
              "content": "",
              "outline": "none",
              "position": "unset",
            },
            "& .select-year:before": Object {
              "border": 0,
              "content": "",
              "outline": "none",
              "position": "unset",
            },
            "& .upcoming-events-box": Object {
              "marginBottom": "30px",
            },
            "& a": Object {
              "textDecoration": "none !important",
            },
            "background": "rgb(244, 247, 255)",
          },
          "ownerDashboard": Object {
            "& .MuiCard-root": Object {
              "boxShadow": "none",
              "padding": "20px 0",
              "textAlign": "center",
            },
            "& .MuiCard-root .content-box": Object {
              "alignItems": "flex-end",
              "display": "flex",
              "justifyContent": "space-evenly",
            },
            "& .MuiCard-root .content-box .center-content": Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "column",
              "width": "20%",
            },
            "& .MuiCard-root .content-box .center-content .image": Object {
              "marginBottom": "0px",
            },
            "& .MuiCard-root .content-box .center-content .image.text": Object {
              "padding": "15px",
            },
            "& .MuiCard-root .content-box .center-content .image.text h4": Object {
              "color": "#FD9048",
              "marginBottom": "0px",
            },
            "& .MuiCard-root .content-box .center-content .vertical-line": Object {
              "background": "#F8F9FE",
              "height": "30px",
              "width": "3px",
            },
            "& .MuiCard-root .content-box .left-content": Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "column",
              "marginBottom": "20px",
              "textAlign": "center",
              "width": "40%",
            },
            "& .MuiCard-root .content-box .left-content .state": Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "column",
            },
            "& .MuiCard-root .content-box .right-content": Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "column",
              "marginBottom": "20px",
              "textAlign": "center",
              "width": "40%",
            },
            "& .MuiCard-root .content-box .right-content .state": Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "column",
            },
            "& .MuiCard-root .image": Object {
              "border": "3px solid #F8F9FE",
              "borderRadius": "50%",
              "display": "inline-block",
              "marginBottom": "20px",
              "padding": "20px",
            },
            "& .MuiCard-root .state p": Object {
              "marginBottom": "5px",
              "textTransform": "capitalize",
            },
            "& .MuiCard-root button": Object {
              "background": "#F6F6F6",
              "borderRadius": "25px",
              "color": "#8A8A8A",
              "fontWeight": "600",
              "minWidth": "125px",
              "padding": "5px 11px",
            },
            "& .MuiCard-root button.yellow": Object {
              "background": "#FEF9F3",
              "color": "#FD9048",
            },
            "& .MuiCard-root h4": Object {
              "marginBottom": "20px",
              "textTransform": "capitalize",
            },
            "& .MuiCard-root.big-box": Object {
              "paddingBottom": "0",
            },
            "& .dashboard": Object {
              "height": "85vh",
              "overflowX": "hidden",
              "overflowY": "auto",
            },
            "& .dashboard .title": Object {
              "paddingBottom": "5px",
            },
            "& .dashboard .title h5": Object {
              "fontWeight": "600",
            },
            "& .menu": Object {
              "alignItems": "center",
              "background": "#FFFFFF",
              "cursor": "pointer",
              "display": "flex",
              "fontWeight": "600",
              "justifyContent": "space-between",
              "marginBottom": "18px",
              "padding": "10px 20px",
            },
            "& .menu .left-icon": Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            },
            "& .menu .left-icon span.complex-name": Object {
              "color": "blue",
              "marginLeft": "10px",
            },
            "& .menu .right-icon a": Object {
              "marginLeft": "15px",
            },
            "& .notification-slider": Object {
              "marginBottom": "20px",
              "width": "100%",
            },
            "& .notification-slider .slick-list .slick-track": Object {
              "display": "flex",
              "gap": "20px",
            },
            "& .notification-slider .slick-next": Object {
              "display": "none !important",
            },
            "& .notification-slider .slick-prev": Object {
              "display": "none !important",
            },
            "& .notification-slider .slide-box": Object {
              "background": "white",
              "borderRadius": "8px",
              "cursor": "pointer",
              "padding": "20px",
              "width": "95% !important",
            },
            "& .notification-slider .slide-box .heading": Object {
              "alignItems": "center",
              "display": "flex",
              "gap": "15px",
            },
            "& .notification-slider .slide-box .heading span": Object {
              "fontWeight": "600",
            },
            "& .notification-slider .slide-box p": Object {
              "marginTop": "10px",
            },
            "& .right-image": Object {
              "padding": "25px 60px",
            },
            "& a": Object {
              "textDecoration": "none !important",
            },
          },
        }
      }
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      id="ChairmanSidebar"
      location={
        Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        }
      }
      match={
        Object {
          "isExact": true,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
      navigation={
        Object {
          "getParam": [MockFunction],
          "goBack": [MockFunction],
          "navigate": [MockFunction],
        }
      }
      t={[Function]}
    >
      <Styled(MuiBox)
        className="AccordinoList"
      >
        <div
          className="MuiBox-root MuiBox-root-1 AccordinoList"
        >
          <WithStyles(ForwardRef(Accordion))
            expanded={false}
            onChange={[Function]}
          >
            <ForwardRef(Accordion)
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "expanded": "Mui-expanded",
                  "root": "MuiAccordion-root",
                  "rounded": "MuiAccordion-rounded",
                }
              }
              expanded={false}
              onChange={[Function]}
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiAccordion-root MuiAccordion-rounded"
                square={false}
              >
                <ForwardRef(Paper)
                  className="MuiAccordion-root MuiAccordion-rounded"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  square={false}
                >
                  <div
                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <WithStyles(ForwardRef(AccordionSummary))
                      aria-controls="panel2bh-content"
                      expandIcon={
                        <Memo
                          style={
                            Object {
                              "height": 16,
                              "width": 16,
                            }
                          }
                        />
                      }
                      id="Dashboards"
                      key=".0"
                      style={
                        Object {
                          "alignItems": "center",
                          "marginTop": "20px",
                        }
                      }
                    >
                      <ForwardRef(AccordionSummary)
                        aria-controls="panel2bh-content"
                        classes={
                          Object {
                            "content": "MuiAccordionSummary-content",
                            "disabled": "Mui-disabled",
                            "expandIcon": "MuiAccordionSummary-expandIcon",
                            "expanded": "Mui-expanded",
                            "focusVisible": "Mui-focusVisible",
                            "focused": "Mui-focused",
                            "root": "MuiAccordionSummary-root",
                          }
                        }
                        expandIcon={
                          <Memo
                            style={
                              Object {
                                "height": 16,
                                "width": 16,
                              }
                            }
                          />
                        }
                        id="Dashboards"
                        style={
                          Object {
                            "alignItems": "center",
                            "marginTop": "20px",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-controls="panel2bh-content"
                          aria-expanded={false}
                          className="MuiAccordionSummary-root"
                          component="div"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={false}
                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                          id="Dashboards"
                          onClick={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "marginTop": "20px",
                            }
                          }
                        >
                          <ForwardRef(ButtonBase)
                            aria-controls="panel2bh-content"
                            aria-expanded={false}
                            className="MuiAccordionSummary-root"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                            id="Dashboards"
                            onClick={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "marginTop": "20px",
                              }
                            }
                          >
                            <div
                              aria-controls="panel2bh-content"
                              aria-disabled={false}
                              aria-expanded={false}
                              className="MuiButtonBase-root MuiAccordionSummary-root"
                              id="Dashboards"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              style={
                                Object {
                                  "alignItems": "center",
                                  "marginTop": "20px",
                                }
                              }
                              tabIndex={0}
                            >
                              <div
                                className="MuiAccordionSummary-content"
                              >
                                <WithStyles(ForwardRef(Typography))>
                                  <ForwardRef(Typography)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root MuiTypography-body1"
                                    >
                                      <ForwardRef(DashboardOutlinedIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(DashboardOutlinedIcon)>
                                    </p>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                                <WithStyles(ForwardRef(Typography))
                                  className="ListItemText"
                                >
                                  <ForwardRef(Typography)
                                    className="ListItemText"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                    />
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                              <WithStyles(ForwardRef(IconButton))
                                aria-hidden={true}
                                className="MuiAccordionSummary-expandIcon"
                                component="div"
                                edge="end"
                                role={null}
                                tabIndex={null}
                              >
                                <ForwardRef(IconButton)
                                  aria-hidden={true}
                                  className="MuiAccordionSummary-expandIcon"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  component="div"
                                  edge="end"
                                  role={null}
                                  tabIndex={null}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-hidden={true}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                    component="div"
                                    disabled={false}
                                    focusRipple={true}
                                    role={null}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-hidden={true}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="div"
                                      disabled={false}
                                      focusRipple={true}
                                      role={null}
                                      tabIndex={null}
                                    >
                                      <div
                                        aria-disabled={false}
                                        aria-hidden={true}
                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role={null}
                                        tabIndex={null}
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(SvgIcon))
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            >
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  style={
                                                    Object {
                                                      "height": 16,
                                                      "width": 16,
                                                    }
                                                  }
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </div>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(AccordionSummary)>
                    </WithStyles(ForwardRef(AccordionSummary))>
                    <WithStyles(ForwardRef(Collapse))
                      in={false}
                      timeout="auto"
                    >
                      <ForwardRef(Collapse)
                        classes={
                          Object {
                            "entered": "MuiCollapse-entered",
                            "hidden": "MuiCollapse-hidden",
                            "root": "MuiCollapse-root",
                            "wrapper": "MuiCollapse-wrapper",
                            "wrapperInner": "MuiCollapse-wrapperInner",
                          }
                        }
                        in={false}
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <div
                            className="MuiCollapse-root MuiCollapse-hidden"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="MuiCollapse-wrapper"
                            >
                              <div
                                className="MuiCollapse-wrapperInner"
                              >
                                <div
                                  aria-labelledby="Dashboards"
                                  id="panel2bh-content"
                                  role="region"
                                >
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".1"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".2"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".3"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".4"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".5"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                </div>
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </ForwardRef(Collapse)>
                    </WithStyles(ForwardRef(Collapse))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(Accordion)>
          </WithStyles(ForwardRef(Accordion))>
          <WithStyles(ForwardRef(Accordion))
            expanded={false}
            onChange={[Function]}
          >
            <ForwardRef(Accordion)
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "expanded": "Mui-expanded",
                  "root": "MuiAccordion-root",
                  "rounded": "MuiAccordion-rounded",
                }
              }
              expanded={false}
              onChange={[Function]}
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiAccordion-root MuiAccordion-rounded"
                square={false}
              >
                <ForwardRef(Paper)
                  className="MuiAccordion-root MuiAccordion-rounded"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  square={false}
                >
                  <div
                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <WithStyles(ForwardRef(AccordionSummary))
                      className="ListItem"
                      expandIcon={
                        <Memo
                          style={
                            Object {
                              "height": 16,
                              "width": 16,
                            }
                          }
                        />
                      }
                      id="ListItem"
                      key=".0"
                    >
                      <ForwardRef(AccordionSummary)
                        className="ListItem"
                        classes={
                          Object {
                            "content": "MuiAccordionSummary-content",
                            "disabled": "Mui-disabled",
                            "expandIcon": "MuiAccordionSummary-expandIcon",
                            "expanded": "Mui-expanded",
                            "focusVisible": "Mui-focusVisible",
                            "focused": "Mui-focused",
                            "root": "MuiAccordionSummary-root",
                          }
                        }
                        expandIcon={
                          <Memo
                            style={
                              Object {
                                "height": 16,
                                "width": 16,
                              }
                            }
                          />
                        }
                        id="ListItem"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-expanded={false}
                          className="MuiAccordionSummary-root ListItem"
                          component="div"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={false}
                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                          id="ListItem"
                          onClick={[Function]}
                        >
                          <ForwardRef(ButtonBase)
                            aria-expanded={false}
                            className="MuiAccordionSummary-root ListItem"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                            id="ListItem"
                            onClick={[Function]}
                          >
                            <div
                              aria-disabled={false}
                              aria-expanded={false}
                              className="MuiButtonBase-root MuiAccordionSummary-root ListItem"
                              id="ListItem"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex={0}
                            >
                              <div
                                className="MuiAccordionSummary-content"
                              >
                                <WithStyles(ForwardRef(Typography))>
                                  <ForwardRef(Typography)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root MuiTypography-body1"
                                    >
                                      <img
                                        alt=""
                                        src={
                                          Object {
                                            "testUri": "../../../packages/blocks/dashboard/assets/myteam.png",
                                          }
                                        }
                                      />
                                    </p>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                                <WithStyles(ForwardRef(Typography))
                                  className="ListItemText"
                                >
                                  <ForwardRef(Typography)
                                    className="ListItemText"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                    />
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                              <WithStyles(ForwardRef(IconButton))
                                aria-hidden={true}
                                className="MuiAccordionSummary-expandIcon"
                                component="div"
                                edge="end"
                                role={null}
                                tabIndex={null}
                              >
                                <ForwardRef(IconButton)
                                  aria-hidden={true}
                                  className="MuiAccordionSummary-expandIcon"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  component="div"
                                  edge="end"
                                  role={null}
                                  tabIndex={null}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-hidden={true}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                    component="div"
                                    disabled={false}
                                    focusRipple={true}
                                    role={null}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-hidden={true}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="div"
                                      disabled={false}
                                      focusRipple={true}
                                      role={null}
                                      tabIndex={null}
                                    >
                                      <div
                                        aria-disabled={false}
                                        aria-hidden={true}
                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role={null}
                                        tabIndex={null}
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(SvgIcon))
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            >
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  style={
                                                    Object {
                                                      "height": 16,
                                                      "width": 16,
                                                    }
                                                  }
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </div>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(AccordionSummary)>
                    </WithStyles(ForwardRef(AccordionSummary))>
                    <WithStyles(ForwardRef(Collapse))
                      in={false}
                      timeout="auto"
                    >
                      <ForwardRef(Collapse)
                        classes={
                          Object {
                            "entered": "MuiCollapse-entered",
                            "hidden": "MuiCollapse-hidden",
                            "root": "MuiCollapse-root",
                            "wrapper": "MuiCollapse-wrapper",
                            "wrapperInner": "MuiCollapse-wrapperInner",
                          }
                        }
                        in={false}
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <div
                            className="MuiCollapse-root MuiCollapse-hidden"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="MuiCollapse-wrapper"
                            >
                              <div
                                className="MuiCollapse-wrapperInner"
                              >
                                <div
                                  aria-labelledby="ListItem"
                                  role="region"
                                >
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".1"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".2"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".3"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                </div>
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </ForwardRef(Collapse)>
                    </WithStyles(ForwardRef(Collapse))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(Accordion)>
          </WithStyles(ForwardRef(Accordion))>
          <WithStyles(ForwardRef(Accordion))
            expanded={false}
            onChange={[Function]}
          >
            <ForwardRef(Accordion)
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "expanded": "Mui-expanded",
                  "root": "MuiAccordion-root",
                  "rounded": "MuiAccordion-rounded",
                }
              }
              expanded={false}
              onChange={[Function]}
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiAccordion-root MuiAccordion-rounded"
                square={false}
              >
                <ForwardRef(Paper)
                  className="MuiAccordion-root MuiAccordion-rounded"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  square={false}
                >
                  <div
                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <WithStyles(ForwardRef(AccordionSummary))
                      aria-controls="panel2bh-content"
                      expandIcon={
                        <Memo
                          style={
                            Object {
                              "height": 16,
                              "width": 16,
                            }
                          }
                        />
                      }
                      id="Dashboards"
                      key=".0"
                      style={
                        Object {
                          "alignItems": "center",
                          "marginTop": "20px",
                        }
                      }
                    >
                      <ForwardRef(AccordionSummary)
                        aria-controls="panel2bh-content"
                        classes={
                          Object {
                            "content": "MuiAccordionSummary-content",
                            "disabled": "Mui-disabled",
                            "expandIcon": "MuiAccordionSummary-expandIcon",
                            "expanded": "Mui-expanded",
                            "focusVisible": "Mui-focusVisible",
                            "focused": "Mui-focused",
                            "root": "MuiAccordionSummary-root",
                          }
                        }
                        expandIcon={
                          <Memo
                            style={
                              Object {
                                "height": 16,
                                "width": 16,
                              }
                            }
                          />
                        }
                        id="Dashboards"
                        style={
                          Object {
                            "alignItems": "center",
                            "marginTop": "20px",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-controls="panel2bh-content"
                          aria-expanded={false}
                          className="MuiAccordionSummary-root"
                          component="div"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={false}
                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                          id="Dashboards"
                          onClick={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "marginTop": "20px",
                            }
                          }
                        >
                          <ForwardRef(ButtonBase)
                            aria-controls="panel2bh-content"
                            aria-expanded={false}
                            className="MuiAccordionSummary-root"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                            id="Dashboards"
                            onClick={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "marginTop": "20px",
                              }
                            }
                          >
                            <div
                              aria-controls="panel2bh-content"
                              aria-disabled={false}
                              aria-expanded={false}
                              className="MuiButtonBase-root MuiAccordionSummary-root"
                              id="Dashboards"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              style={
                                Object {
                                  "alignItems": "center",
                                  "marginTop": "20px",
                                }
                              }
                              tabIndex={0}
                            >
                              <div
                                className="MuiAccordionSummary-content"
                              >
                                <WithStyles(ForwardRef(Typography))>
                                  <ForwardRef(Typography)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root MuiTypography-body1"
                                    >
                                      <img
                                        alt=""
                                        src={
                                          Object {
                                            "testUri": "../../../packages/blocks/dashboard/assets/community.png",
                                          }
                                        }
                                      />
                                    </p>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                                <WithStyles(ForwardRef(Typography))
                                  className="ListItemText"
                                >
                                  <ForwardRef(Typography)
                                    className="ListItemText"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                    />
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                              <WithStyles(ForwardRef(IconButton))
                                aria-hidden={true}
                                className="MuiAccordionSummary-expandIcon"
                                component="div"
                                edge="end"
                                role={null}
                                tabIndex={null}
                              >
                                <ForwardRef(IconButton)
                                  aria-hidden={true}
                                  className="MuiAccordionSummary-expandIcon"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  component="div"
                                  edge="end"
                                  role={null}
                                  tabIndex={null}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-hidden={true}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                    component="div"
                                    disabled={false}
                                    focusRipple={true}
                                    role={null}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-hidden={true}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="div"
                                      disabled={false}
                                      focusRipple={true}
                                      role={null}
                                      tabIndex={null}
                                    >
                                      <div
                                        aria-disabled={false}
                                        aria-hidden={true}
                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role={null}
                                        tabIndex={null}
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(SvgIcon))
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            >
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  style={
                                                    Object {
                                                      "height": 16,
                                                      "width": 16,
                                                    }
                                                  }
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </div>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(AccordionSummary)>
                    </WithStyles(ForwardRef(AccordionSummary))>
                    <WithStyles(ForwardRef(Collapse))
                      in={false}
                      timeout="auto"
                    >
                      <ForwardRef(Collapse)
                        classes={
                          Object {
                            "entered": "MuiCollapse-entered",
                            "hidden": "MuiCollapse-hidden",
                            "root": "MuiCollapse-root",
                            "wrapper": "MuiCollapse-wrapper",
                            "wrapperInner": "MuiCollapse-wrapperInner",
                          }
                        }
                        in={false}
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <div
                            className="MuiCollapse-root MuiCollapse-hidden"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="MuiCollapse-wrapper"
                            >
                              <div
                                className="MuiCollapse-wrapperInner"
                              >
                                <div
                                  aria-labelledby="Dashboards"
                                  id="panel2bh-content"
                                  role="region"
                                >
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".1"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".2"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".3"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".4"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                </div>
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </ForwardRef(Collapse)>
                    </WithStyles(ForwardRef(Collapse))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(Accordion)>
          </WithStyles(ForwardRef(Accordion))>
          <WithStyles(ForwardRef(Accordion))
            expanded={false}
            onChange={[Function]}
          >
            <ForwardRef(Accordion)
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "expanded": "Mui-expanded",
                  "root": "MuiAccordion-root",
                  "rounded": "MuiAccordion-rounded",
                }
              }
              expanded={false}
              onChange={[Function]}
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiAccordion-root MuiAccordion-rounded"
                square={false}
              >
                <ForwardRef(Paper)
                  className="MuiAccordion-root MuiAccordion-rounded"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  square={false}
                >
                  <div
                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <WithStyles(ForwardRef(AccordionSummary))
                      aria-controls="panel2bh-content"
                      expandIcon={
                        <Memo
                          style={
                            Object {
                              "height": 16,
                              "width": 16,
                            }
                          }
                        />
                      }
                      id="panel2bh-header"
                      key=".0"
                      style={
                        Object {
                          "alignItems": "center",
                          "marginTop": "20px",
                        }
                      }
                    >
                      <ForwardRef(AccordionSummary)
                        aria-controls="panel2bh-content"
                        classes={
                          Object {
                            "content": "MuiAccordionSummary-content",
                            "disabled": "Mui-disabled",
                            "expandIcon": "MuiAccordionSummary-expandIcon",
                            "expanded": "Mui-expanded",
                            "focusVisible": "Mui-focusVisible",
                            "focused": "Mui-focused",
                            "root": "MuiAccordionSummary-root",
                          }
                        }
                        expandIcon={
                          <Memo
                            style={
                              Object {
                                "height": 16,
                                "width": 16,
                              }
                            }
                          />
                        }
                        id="panel2bh-header"
                        style={
                          Object {
                            "alignItems": "center",
                            "marginTop": "20px",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-controls="panel2bh-content"
                          aria-expanded={false}
                          className="MuiAccordionSummary-root"
                          component="div"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={false}
                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                          id="panel2bh-header"
                          onClick={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "marginTop": "20px",
                            }
                          }
                        >
                          <ForwardRef(ButtonBase)
                            aria-controls="panel2bh-content"
                            aria-expanded={false}
                            className="MuiAccordionSummary-root"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                            id="panel2bh-header"
                            onClick={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "marginTop": "20px",
                              }
                            }
                          >
                            <div
                              aria-controls="panel2bh-content"
                              aria-disabled={false}
                              aria-expanded={false}
                              className="MuiButtonBase-root MuiAccordionSummary-root"
                              id="panel2bh-header"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              style={
                                Object {
                                  "alignItems": "center",
                                  "marginTop": "20px",
                                }
                              }
                              tabIndex={0}
                            >
                              <div
                                className="MuiAccordionSummary-content"
                              >
                                <WithStyles(ForwardRef(Typography))>
                                  <ForwardRef(Typography)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root MuiTypography-body1"
                                    >
                                      <ForwardRef(DashboardOutlinedIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(DashboardOutlinedIcon)>
                                    </p>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                                <WithStyles(ForwardRef(Typography))
                                  className="ListItemText"
                                >
                                  <ForwardRef(Typography)
                                    className="ListItemText"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                    />
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                              <WithStyles(ForwardRef(IconButton))
                                aria-hidden={true}
                                className="MuiAccordionSummary-expandIcon"
                                component="div"
                                edge="end"
                                role={null}
                                tabIndex={null}
                              >
                                <ForwardRef(IconButton)
                                  aria-hidden={true}
                                  className="MuiAccordionSummary-expandIcon"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  component="div"
                                  edge="end"
                                  role={null}
                                  tabIndex={null}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-hidden={true}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                    component="div"
                                    disabled={false}
                                    focusRipple={true}
                                    role={null}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-hidden={true}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="div"
                                      disabled={false}
                                      focusRipple={true}
                                      role={null}
                                      tabIndex={null}
                                    >
                                      <div
                                        aria-disabled={false}
                                        aria-hidden={true}
                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role={null}
                                        tabIndex={null}
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(SvgIcon))
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            >
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  style={
                                                    Object {
                                                      "height": 16,
                                                      "width": 16,
                                                    }
                                                  }
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </div>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(AccordionSummary)>
                    </WithStyles(ForwardRef(AccordionSummary))>
                    <WithStyles(ForwardRef(Collapse))
                      in={false}
                      timeout="auto"
                    >
                      <ForwardRef(Collapse)
                        classes={
                          Object {
                            "entered": "MuiCollapse-entered",
                            "hidden": "MuiCollapse-hidden",
                            "root": "MuiCollapse-root",
                            "wrapper": "MuiCollapse-wrapper",
                            "wrapperInner": "MuiCollapse-wrapperInner",
                          }
                        }
                        in={false}
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <div
                            className="MuiCollapse-root MuiCollapse-hidden"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="MuiCollapse-wrapper"
                            >
                              <div
                                className="MuiCollapse-wrapperInner"
                              >
                                <div
                                  aria-labelledby="panel2bh-header"
                                  id="panel2bh-content"
                                  role="region"
                                >
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".1"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".2"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".3"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                </div>
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </ForwardRef(Collapse)>
                    </WithStyles(ForwardRef(Collapse))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(Accordion)>
          </WithStyles(ForwardRef(Accordion))>
          <Styled(MuiBox)
            className="SingleLink"
          >
            <div
              className="MuiBox-root MuiBox-root-2 SingleLink"
            >
              <WithStyles(ForwardRef(Typography))
                className="SingleLinkSize"
              >
                <ForwardRef(Typography)
                  className="SingleLinkSize"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                >
                  <p
                    className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                  >
                    <ForwardRef(DashboardOutlinedIcon)>
                      <WithStyles(ForwardRef(SvgIcon))>
                        <ForwardRef(SvgIcon)
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden={true}
                            className="MuiSvgIcon-root"
                            focusable="false"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef(DashboardOutlinedIcon)>
                  </p>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
              <div
                onClick={[Function]}
              >
                <WithStyles(ForwardRef(Typography))
                  className="SingleLinkSize"
                >
                  <ForwardRef(Typography)
                    className="SingleLinkSize"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                  >
                    <p
                      className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                    />
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
              </div>
            </div>
          </Styled(MuiBox)>
          <WithStyles(ForwardRef(Accordion))
            expanded={false}
            onChange={[Function]}
          >
            <ForwardRef(Accordion)
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "expanded": "Mui-expanded",
                  "root": "MuiAccordion-root",
                  "rounded": "MuiAccordion-rounded",
                }
              }
              expanded={false}
              onChange={[Function]}
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiAccordion-root MuiAccordion-rounded"
                square={false}
              >
                <ForwardRef(Paper)
                  className="MuiAccordion-root MuiAccordion-rounded"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  square={false}
                >
                  <div
                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <WithStyles(ForwardRef(AccordionSummary))
                      expandIcon={
                        <Memo
                          style={
                            Object {
                              "height": 16,
                              "width": 16,
                            }
                          }
                        />
                      }
                      key=".0"
                      style={
                        Object {
                          "alignItems": "center",
                          "marginTop": "20px",
                        }
                      }
                    >
                      <ForwardRef(AccordionSummary)
                        classes={
                          Object {
                            "content": "MuiAccordionSummary-content",
                            "disabled": "Mui-disabled",
                            "expandIcon": "MuiAccordionSummary-expandIcon",
                            "expanded": "Mui-expanded",
                            "focusVisible": "Mui-focusVisible",
                            "focused": "Mui-focused",
                            "root": "MuiAccordionSummary-root",
                          }
                        }
                        expandIcon={
                          <Memo
                            style={
                              Object {
                                "height": 16,
                                "width": 16,
                              }
                            }
                          />
                        }
                        style={
                          Object {
                            "alignItems": "center",
                            "marginTop": "20px",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-expanded={false}
                          className="MuiAccordionSummary-root"
                          component="div"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={false}
                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                          onClick={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "marginTop": "20px",
                            }
                          }
                        >
                          <ForwardRef(ButtonBase)
                            aria-expanded={false}
                            className="MuiAccordionSummary-root"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                            onClick={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "marginTop": "20px",
                              }
                            }
                          >
                            <div
                              aria-disabled={false}
                              aria-expanded={false}
                              className="MuiButtonBase-root MuiAccordionSummary-root"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              style={
                                Object {
                                  "alignItems": "center",
                                  "marginTop": "20px",
                                }
                              }
                              tabIndex={0}
                            >
                              <div
                                className="MuiAccordionSummary-content"
                              >
                                <WithStyles(ForwardRef(Typography))>
                                  <ForwardRef(Typography)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root MuiTypography-body1"
                                    >
                                      <img
                                        alt=""
                                        src={
                                          Object {
                                            "testUri": "../../../packages/blocks/dashboard/assets/meetings.png",
                                          }
                                        }
                                      />
                                    </p>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                                <WithStyles(ForwardRef(Typography))
                                  className="ListItemText"
                                >
                                  <ForwardRef(Typography)
                                    className="ListItemText"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                    />
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                              <WithStyles(ForwardRef(IconButton))
                                aria-hidden={true}
                                className="MuiAccordionSummary-expandIcon"
                                component="div"
                                edge="end"
                                role={null}
                                tabIndex={null}
                              >
                                <ForwardRef(IconButton)
                                  aria-hidden={true}
                                  className="MuiAccordionSummary-expandIcon"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  component="div"
                                  edge="end"
                                  role={null}
                                  tabIndex={null}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-hidden={true}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                    component="div"
                                    disabled={false}
                                    focusRipple={true}
                                    role={null}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-hidden={true}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="div"
                                      disabled={false}
                                      focusRipple={true}
                                      role={null}
                                      tabIndex={null}
                                    >
                                      <div
                                        aria-disabled={false}
                                        aria-hidden={true}
                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role={null}
                                        tabIndex={null}
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(SvgIcon))
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            >
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  style={
                                                    Object {
                                                      "height": 16,
                                                      "width": 16,
                                                    }
                                                  }
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </div>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(AccordionSummary)>
                    </WithStyles(ForwardRef(AccordionSummary))>
                    <WithStyles(ForwardRef(Collapse))
                      in={false}
                      timeout="auto"
                    >
                      <ForwardRef(Collapse)
                        classes={
                          Object {
                            "entered": "MuiCollapse-entered",
                            "hidden": "MuiCollapse-hidden",
                            "root": "MuiCollapse-root",
                            "wrapper": "MuiCollapse-wrapper",
                            "wrapperInner": "MuiCollapse-wrapperInner",
                          }
                        }
                        in={false}
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <div
                            className="MuiCollapse-root MuiCollapse-hidden"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="MuiCollapse-wrapper"
                            >
                              <div
                                className="MuiCollapse-wrapperInner"
                              >
                                <div
                                  role="region"
                                >
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".1"
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "cursor": "pointer",
                                      }
                                    }
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "cursor": "pointer",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "cursor": "pointer",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".2"
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "cursor": "pointer",
                                      }
                                    }
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "cursor": "pointer",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "cursor": "pointer",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                </div>
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </ForwardRef(Collapse)>
                    </WithStyles(ForwardRef(Collapse))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(Accordion)>
          </WithStyles(ForwardRef(Accordion))>
          <Styled(MuiBox)
            className="SingleLink"
          >
            <div
              className="MuiBox-root MuiBox-root-3 SingleLink"
            >
              <WithStyles(ForwardRef(Typography))
                className="SingleLinkSize"
              >
                <ForwardRef(Typography)
                  className="SingleLinkSize"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                >
                  <p
                    className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                  >
                    <ForwardRef(DashboardOutlinedIcon)>
                      <WithStyles(ForwardRef(SvgIcon))>
                        <ForwardRef(SvgIcon)
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden={true}
                            className="MuiSvgIcon-root"
                            focusable="false"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef(DashboardOutlinedIcon)>
                  </p>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
              <div
                onClick={[Function]}
              >
                <WithStyles(ForwardRef(Typography))
                  className="SingleLinkSize"
                >
                  <ForwardRef(Typography)
                    className="SingleLinkSize"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                  >
                    <p
                      className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                    />
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
              </div>
            </div>
          </Styled(MuiBox)>
          <WithStyles(ForwardRef(Accordion))
            expanded={false}
            onChange={[Function]}
          >
            <ForwardRef(Accordion)
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "expanded": "Mui-expanded",
                  "root": "MuiAccordion-root",
                  "rounded": "MuiAccordion-rounded",
                }
              }
              expanded={false}
              onChange={[Function]}
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiAccordion-root MuiAccordion-rounded"
                square={false}
              >
                <ForwardRef(Paper)
                  className="MuiAccordion-root MuiAccordion-rounded"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  square={false}
                >
                  <div
                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <WithStyles(ForwardRef(AccordionSummary))
                      expandIcon={
                        <Memo
                          style={
                            Object {
                              "height": 16,
                              "width": 16,
                            }
                          }
                        />
                      }
                      key=".0"
                      style={
                        Object {
                          "alignItems": "center",
                          "marginTop": "20px",
                        }
                      }
                    >
                      <ForwardRef(AccordionSummary)
                        classes={
                          Object {
                            "content": "MuiAccordionSummary-content",
                            "disabled": "Mui-disabled",
                            "expandIcon": "MuiAccordionSummary-expandIcon",
                            "expanded": "Mui-expanded",
                            "focusVisible": "Mui-focusVisible",
                            "focused": "Mui-focused",
                            "root": "MuiAccordionSummary-root",
                          }
                        }
                        expandIcon={
                          <Memo
                            style={
                              Object {
                                "height": 16,
                                "width": 16,
                              }
                            }
                          />
                        }
                        style={
                          Object {
                            "alignItems": "center",
                            "marginTop": "20px",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-expanded={false}
                          className="MuiAccordionSummary-root"
                          component="div"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={false}
                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                          onClick={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "marginTop": "20px",
                            }
                          }
                        >
                          <ForwardRef(ButtonBase)
                            aria-expanded={false}
                            className="MuiAccordionSummary-root"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                            onClick={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "marginTop": "20px",
                              }
                            }
                          >
                            <div
                              aria-disabled={false}
                              aria-expanded={false}
                              className="MuiButtonBase-root MuiAccordionSummary-root"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              style={
                                Object {
                                  "alignItems": "center",
                                  "marginTop": "20px",
                                }
                              }
                              tabIndex={0}
                            >
                              <div
                                className="MuiAccordionSummary-content"
                              >
                                <WithStyles(ForwardRef(Typography))>
                                  <ForwardRef(Typography)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root MuiTypography-body1"
                                    >
                                      <ForwardRef(DashboardOutlinedIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(DashboardOutlinedIcon)>
                                    </p>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                                <WithStyles(ForwardRef(Typography))
                                  className="ListItemText"
                                >
                                  <ForwardRef(Typography)
                                    className="ListItemText"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                    />
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                              <WithStyles(ForwardRef(IconButton))
                                aria-hidden={true}
                                className="MuiAccordionSummary-expandIcon"
                                component="div"
                                edge="end"
                                role={null}
                                tabIndex={null}
                              >
                                <ForwardRef(IconButton)
                                  aria-hidden={true}
                                  className="MuiAccordionSummary-expandIcon"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  component="div"
                                  edge="end"
                                  role={null}
                                  tabIndex={null}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-hidden={true}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                    component="div"
                                    disabled={false}
                                    focusRipple={true}
                                    role={null}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-hidden={true}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="div"
                                      disabled={false}
                                      focusRipple={true}
                                      role={null}
                                      tabIndex={null}
                                    >
                                      <div
                                        aria-disabled={false}
                                        aria-hidden={true}
                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role={null}
                                        tabIndex={null}
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(SvgIcon))
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            >
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  style={
                                                    Object {
                                                      "height": 16,
                                                      "width": 16,
                                                    }
                                                  }
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </div>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(AccordionSummary)>
                    </WithStyles(ForwardRef(AccordionSummary))>
                    <WithStyles(ForwardRef(Collapse))
                      in={false}
                      timeout="auto"
                    >
                      <ForwardRef(Collapse)
                        classes={
                          Object {
                            "entered": "MuiCollapse-entered",
                            "hidden": "MuiCollapse-hidden",
                            "root": "MuiCollapse-root",
                            "wrapper": "MuiCollapse-wrapper",
                            "wrapperInner": "MuiCollapse-wrapperInner",
                          }
                        }
                        in={false}
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <div
                            className="MuiCollapse-root MuiCollapse-hidden"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="MuiCollapse-wrapper"
                            >
                              <div
                                className="MuiCollapse-wrapperInner"
                              >
                                <div
                                  role="region"
                                >
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".1"
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "cursor": "pointer",
                                      }
                                    }
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "cursor": "pointer",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "cursor": "pointer",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".2"
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "cursor": "pointer",
                                      }
                                    }
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "cursor": "pointer",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "cursor": "pointer",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                </div>
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </ForwardRef(Collapse)>
                    </WithStyles(ForwardRef(Collapse))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(Accordion)>
          </WithStyles(ForwardRef(Accordion))>
          <Styled(MuiBox)
            className="SingleLink"
          >
            <div
              className="MuiBox-root MuiBox-root-4 SingleLink"
            >
              <WithStyles(ForwardRef(Typography))
                className="SingleLinkSize"
              >
                <ForwardRef(Typography)
                  className="SingleLinkSize"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                >
                  <p
                    className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                  >
                    <ForwardRef(DashboardOutlinedIcon)>
                      <WithStyles(ForwardRef(SvgIcon))>
                        <ForwardRef(SvgIcon)
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden={true}
                            className="MuiSvgIcon-root"
                            focusable="false"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef(DashboardOutlinedIcon)>
                  </p>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
              <div
                onClick={[Function]}
              >
                <WithStyles(ForwardRef(Typography))
                  className="SingleLinkSize"
                >
                  <ForwardRef(Typography)
                    className="SingleLinkSize"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                  >
                    <p
                      className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                    />
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
              </div>
            </div>
          </Styled(MuiBox)>
          <WithStyles(ForwardRef(Accordion))
            expanded={false}
            onChange={[Function]}
          >
            <ForwardRef(Accordion)
              classes={
                Object {
                  "disabled": "Mui-disabled",
                  "expanded": "Mui-expanded",
                  "root": "MuiAccordion-root",
                  "rounded": "MuiAccordion-rounded",
                }
              }
              expanded={false}
              onChange={[Function]}
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiAccordion-root MuiAccordion-rounded"
                square={false}
              >
                <ForwardRef(Paper)
                  className="MuiAccordion-root MuiAccordion-rounded"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  square={false}
                >
                  <div
                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                  >
                    <WithStyles(ForwardRef(AccordionSummary))
                      expandIcon={
                        <Memo
                          style={
                            Object {
                              "height": 16,
                              "width": 16,
                            }
                          }
                        />
                      }
                      key=".0"
                      style={
                        Object {
                          "alignItems": "center",
                          "marginTop": "20px",
                        }
                      }
                    >
                      <ForwardRef(AccordionSummary)
                        classes={
                          Object {
                            "content": "MuiAccordionSummary-content",
                            "disabled": "Mui-disabled",
                            "expandIcon": "MuiAccordionSummary-expandIcon",
                            "expanded": "Mui-expanded",
                            "focusVisible": "Mui-focusVisible",
                            "focused": "Mui-focused",
                            "root": "MuiAccordionSummary-root",
                          }
                        }
                        expandIcon={
                          <Memo
                            style={
                              Object {
                                "height": 16,
                                "width": 16,
                              }
                            }
                          />
                        }
                        style={
                          Object {
                            "alignItems": "center",
                            "marginTop": "20px",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          aria-expanded={false}
                          className="MuiAccordionSummary-root"
                          component="div"
                          disableRipple={true}
                          disabled={false}
                          focusRipple={false}
                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                          onClick={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "marginTop": "20px",
                            }
                          }
                        >
                          <ForwardRef(ButtonBase)
                            aria-expanded={false}
                            className="MuiAccordionSummary-root"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="div"
                            disableRipple={true}
                            disabled={false}
                            focusRipple={false}
                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                            onClick={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "marginTop": "20px",
                              }
                            }
                          >
                            <div
                              aria-disabled={false}
                              aria-expanded={false}
                              className="MuiButtonBase-root MuiAccordionSummary-root"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              style={
                                Object {
                                  "alignItems": "center",
                                  "marginTop": "20px",
                                }
                              }
                              tabIndex={0}
                            >
                              <div
                                className="MuiAccordionSummary-content"
                              >
                                <WithStyles(ForwardRef(Typography))>
                                  <ForwardRef(Typography)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root MuiTypography-body1"
                                    >
                                      <ForwardRef(DashboardOutlinedIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(DashboardOutlinedIcon)>
                                    </p>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                                <WithStyles(ForwardRef(Typography))
                                  className="ListItemText"
                                >
                                  <ForwardRef(Typography)
                                    className="ListItemText"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                    />
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                              <WithStyles(ForwardRef(IconButton))
                                aria-hidden={true}
                                className="MuiAccordionSummary-expandIcon"
                                component="div"
                                edge="end"
                                role={null}
                                tabIndex={null}
                              >
                                <ForwardRef(IconButton)
                                  aria-hidden={true}
                                  className="MuiAccordionSummary-expandIcon"
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  component="div"
                                  edge="end"
                                  role={null}
                                  tabIndex={null}
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-hidden={true}
                                    centerRipple={true}
                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                    component="div"
                                    disabled={false}
                                    focusRipple={true}
                                    role={null}
                                    tabIndex={null}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-hidden={true}
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="div"
                                      disabled={false}
                                      focusRipple={true}
                                      role={null}
                                      tabIndex={null}
                                    >
                                      <div
                                        aria-disabled={false}
                                        aria-hidden={true}
                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role={null}
                                        tabIndex={null}
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(SvgIcon))
                                              style={
                                                Object {
                                                  "height": 16,
                                                  "width": 16,
                                                }
                                              }
                                            >
                                              <ForwardRef(SvgIcon)
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                                style={
                                                  Object {
                                                    "height": 16,
                                                    "width": 16,
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  className="MuiSvgIcon-root"
                                                  focusable="false"
                                                  style={
                                                    Object {
                                                      "height": 16,
                                                      "width": 16,
                                                    }
                                                  }
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </div>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                            </div>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(AccordionSummary)>
                    </WithStyles(ForwardRef(AccordionSummary))>
                    <WithStyles(ForwardRef(Collapse))
                      in={false}
                      timeout="auto"
                    >
                      <ForwardRef(Collapse)
                        classes={
                          Object {
                            "entered": "MuiCollapse-entered",
                            "hidden": "MuiCollapse-hidden",
                            "root": "MuiCollapse-root",
                            "wrapper": "MuiCollapse-wrapper",
                            "wrapperInner": "MuiCollapse-wrapperInner",
                          }
                        }
                        in={false}
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={false}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <div
                            className="MuiCollapse-root MuiCollapse-hidden"
                            style={
                              Object {
                                "minHeight": "0px",
                              }
                            }
                          >
                            <div
                              className="MuiCollapse-wrapper"
                            >
                              <div
                                className="MuiCollapse-wrapperInner"
                              >
                                <div
                                  role="region"
                                >
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".1"
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "cursor": "pointer",
                                      }
                                    }
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "cursor": "pointer",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "cursor": "pointer",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".2"
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "cursor": "pointer",
                                      }
                                    }
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "cursor": "pointer",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "cursor": "pointer",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                  <WithStyles(ForwardRef(AccordionDetails))
                                    key=".3"
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "cursor": "pointer",
                                      }
                                    }
                                  >
                                    <ForwardRef(AccordionDetails)
                                      classes={
                                        Object {
                                          "root": "MuiAccordionDetails-root",
                                        }
                                      }
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "cursor": "pointer",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiAccordionDetails-root"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "cursor": "pointer",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          className="cursor-pointer"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="cursor-pointer"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                            />
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                      </div>
                                    </ForwardRef(AccordionDetails)>
                                  </WithStyles(ForwardRef(AccordionDetails))>
                                </div>
                              </div>
                            </div>
                          </div>
                        </Transition>
                      </ForwardRef(Collapse)>
                    </WithStyles(ForwardRef(Collapse))>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(Accordion)>
          </WithStyles(ForwardRef(Accordion))>
          <Styled(MuiBox)
            className="SingleLink"
          >
            <div
              className="MuiBox-root MuiBox-root-5 SingleLink"
            >
              <WithStyles(ForwardRef(Typography))
                className="SingleLinkSize"
              >
                <ForwardRef(Typography)
                  className="SingleLinkSize"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                >
                  <p
                    className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                  >
                    <ForwardRef(DashboardOutlinedIcon)>
                      <WithStyles(ForwardRef(SvgIcon))>
                        <ForwardRef(SvgIcon)
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden={true}
                            className="MuiSvgIcon-root"
                            focusable="false"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef(DashboardOutlinedIcon)>
                  </p>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
              <div
                onClick={[Function]}
              >
                <WithStyles(ForwardRef(Typography))
                  className="SingleLinkSize"
                >
                  <ForwardRef(Typography)
                    className="SingleLinkSize"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                  >
                    <p
                      className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                    />
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
              </div>
            </div>
          </Styled(MuiBox)>
          <Styled(MuiBox)
            className="SingleLink"
          >
            <div
              className="MuiBox-root MuiBox-root-6 SingleLink"
            >
              <WithStyles(ForwardRef(Typography))
                className="SingleLinkSize"
              >
                <ForwardRef(Typography)
                  className="SingleLinkSize"
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                >
                  <p
                    className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                  >
                    <ForwardRef(DashboardOutlinedIcon)>
                      <WithStyles(ForwardRef(SvgIcon))>
                        <ForwardRef(SvgIcon)
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction",
                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                              "colorError": "MuiSvgIcon-colorError",
                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                              "root": "MuiSvgIcon-root",
                            }
                          }
                        >
                          <svg
                            aria-hidden={true}
                            className="MuiSvgIcon-root"
                            focusable="false"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                            />
                          </svg>
                        </ForwardRef(SvgIcon)>
                      </WithStyles(ForwardRef(SvgIcon))>
                    </ForwardRef(DashboardOutlinedIcon)>
                  </p>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
              <div
                onClick={[Function]}
              >
                <WithStyles(ForwardRef(Typography))
                  className="SingleLinkSize"
                >
                  <ForwardRef(Typography)
                    className="SingleLinkSize"
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                  >
                    <p
                      className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                    />
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
              </div>
            </div>
          </Styled(MuiBox)>
        </div>
      </Styled(MuiBox)>
      <Styled(MuiBox)
        className="SideBarBottom"
      >
        <div
          className="MuiBox-root MuiBox-root-7 SideBarBottom"
        >
          <Styled(MuiBox)>
            <div
              className="MuiBox-root MuiBox-root-8"
            >
              <WithStyles(ForwardRef(Typography))
                style={
                  Object {
                    "fontSize": 10,
                    "fontWeight": 600,
                  }
                }
              >
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  style={
                    Object {
                      "fontSize": 10,
                      "fontWeight": 600,
                    }
                  }
                >
                  <p
                    className="MuiTypography-root MuiTypography-body1"
                    style={
                      Object {
                        "fontSize": 10,
                        "fontWeight": 600,
                      }
                    }
                  >
                    <Styled(MuiBox)
                      component="span"
                      style={
                        Object {
                          "background": "#ff8100",
                          "borderRadius": "5px",
                          "marginRight": 8,
                          "padding": 8,
                        }
                      }
                    >
                      <span
                        className="MuiBox-root MuiBox-root-9"
                        style={
                          Object {
                            "background": "#ff8100",
                            "borderRadius": "5px",
                            "marginRight": 8,
                            "padding": 8,
                          }
                        }
                      />
                    </Styled(MuiBox)>
                  </p>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
              <WithStyles(ForwardRef(Typography))
                style={
                  Object {
                    "fontSize": 12,
                    "marginTop": 10,
                  }
                }
              >
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  style={
                    Object {
                      "fontSize": 12,
                      "marginTop": 10,
                    }
                  }
                >
                  <p
                    className="MuiTypography-root MuiTypography-body1"
                    style={
                      Object {
                        "fontSize": 12,
                        "marginTop": 10,
                      }
                    }
                  >
                     125 
                  </p>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
            </div>
          </Styled(MuiBox)>
          <Styled(MuiBox)>
            <div
              className="MuiBox-root MuiBox-root-10"
            >
              <img
                alt="TenantLogo"
                width={110}
              />
            </div>
          </Styled(MuiBox)>
        </div>
      </Styled(MuiBox)>
    </ChairmanSidebar>
  </Route>
</withRouter(ChairmanSidebar)>
`;
