// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FacilityReservation User navigates to FacilityReservation 1`] = `
<FacilityReservation
  history={
    Object {
      "push": [MockFunction],
    }
  }
  id="FacilityReservation"
  location={[MockFunction]}
  match={[MockFunction]}
  navigation={Object {}}
  t={[MockFunction]}
>
  <Styled(MuiBox)
    className="login-wrapper incident-wrapper"
  >
    <div
      className="MuiBox-root MuiBox-root-1 login-wrapper incident-wrapper"
    >
      <WithStyles(ForwardRef(Grid))
        className="auth-container"
        container={true}
        spacing={2}
      >
        <ForwardRef(Grid)
          className="auth-container"
          classes={
            Object {
              "align-content-xs-center": "MuiGrid-align-content-xs-center",
              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
              "align-items-xs-center": "MuiGrid-align-items-xs-center",
              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
              "container": "MuiGrid-container",
              "direction-xs-column": "MuiGrid-direction-xs-column",
              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
              "grid-lg-1": "MuiGrid-grid-lg-1",
              "grid-lg-10": "MuiGrid-grid-lg-10",
              "grid-lg-11": "MuiGrid-grid-lg-11",
              "grid-lg-12": "MuiGrid-grid-lg-12",
              "grid-lg-2": "MuiGrid-grid-lg-2",
              "grid-lg-3": "MuiGrid-grid-lg-3",
              "grid-lg-4": "MuiGrid-grid-lg-4",
              "grid-lg-5": "MuiGrid-grid-lg-5",
              "grid-lg-6": "MuiGrid-grid-lg-6",
              "grid-lg-7": "MuiGrid-grid-lg-7",
              "grid-lg-8": "MuiGrid-grid-lg-8",
              "grid-lg-9": "MuiGrid-grid-lg-9",
              "grid-lg-auto": "MuiGrid-grid-lg-auto",
              "grid-lg-true": "MuiGrid-grid-lg-true",
              "grid-md-1": "MuiGrid-grid-md-1",
              "grid-md-10": "MuiGrid-grid-md-10",
              "grid-md-11": "MuiGrid-grid-md-11",
              "grid-md-12": "MuiGrid-grid-md-12",
              "grid-md-2": "MuiGrid-grid-md-2",
              "grid-md-3": "MuiGrid-grid-md-3",
              "grid-md-4": "MuiGrid-grid-md-4",
              "grid-md-5": "MuiGrid-grid-md-5",
              "grid-md-6": "MuiGrid-grid-md-6",
              "grid-md-7": "MuiGrid-grid-md-7",
              "grid-md-8": "MuiGrid-grid-md-8",
              "grid-md-9": "MuiGrid-grid-md-9",
              "grid-md-auto": "MuiGrid-grid-md-auto",
              "grid-md-true": "MuiGrid-grid-md-true",
              "grid-sm-1": "MuiGrid-grid-sm-1",
              "grid-sm-10": "MuiGrid-grid-sm-10",
              "grid-sm-11": "MuiGrid-grid-sm-11",
              "grid-sm-12": "MuiGrid-grid-sm-12",
              "grid-sm-2": "MuiGrid-grid-sm-2",
              "grid-sm-3": "MuiGrid-grid-sm-3",
              "grid-sm-4": "MuiGrid-grid-sm-4",
              "grid-sm-5": "MuiGrid-grid-sm-5",
              "grid-sm-6": "MuiGrid-grid-sm-6",
              "grid-sm-7": "MuiGrid-grid-sm-7",
              "grid-sm-8": "MuiGrid-grid-sm-8",
              "grid-sm-9": "MuiGrid-grid-sm-9",
              "grid-sm-auto": "MuiGrid-grid-sm-auto",
              "grid-sm-true": "MuiGrid-grid-sm-true",
              "grid-xl-1": "MuiGrid-grid-xl-1",
              "grid-xl-10": "MuiGrid-grid-xl-10",
              "grid-xl-11": "MuiGrid-grid-xl-11",
              "grid-xl-12": "MuiGrid-grid-xl-12",
              "grid-xl-2": "MuiGrid-grid-xl-2",
              "grid-xl-3": "MuiGrid-grid-xl-3",
              "grid-xl-4": "MuiGrid-grid-xl-4",
              "grid-xl-5": "MuiGrid-grid-xl-5",
              "grid-xl-6": "MuiGrid-grid-xl-6",
              "grid-xl-7": "MuiGrid-grid-xl-7",
              "grid-xl-8": "MuiGrid-grid-xl-8",
              "grid-xl-9": "MuiGrid-grid-xl-9",
              "grid-xl-auto": "MuiGrid-grid-xl-auto",
              "grid-xl-true": "MuiGrid-grid-xl-true",
              "grid-xs-1": "MuiGrid-grid-xs-1",
              "grid-xs-10": "MuiGrid-grid-xs-10",
              "grid-xs-11": "MuiGrid-grid-xs-11",
              "grid-xs-12": "MuiGrid-grid-xs-12",
              "grid-xs-2": "MuiGrid-grid-xs-2",
              "grid-xs-3": "MuiGrid-grid-xs-3",
              "grid-xs-4": "MuiGrid-grid-xs-4",
              "grid-xs-5": "MuiGrid-grid-xs-5",
              "grid-xs-6": "MuiGrid-grid-xs-6",
              "grid-xs-7": "MuiGrid-grid-xs-7",
              "grid-xs-8": "MuiGrid-grid-xs-8",
              "grid-xs-9": "MuiGrid-grid-xs-9",
              "grid-xs-auto": "MuiGrid-grid-xs-auto",
              "grid-xs-true": "MuiGrid-grid-xs-true",
              "item": "MuiGrid-item",
              "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
              "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
              "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
              "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
              "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
              "root": "MuiGrid-root",
              "spacing-xs-1": "MuiGrid-spacing-xs-1",
              "spacing-xs-10": "MuiGrid-spacing-xs-10",
              "spacing-xs-2": "MuiGrid-spacing-xs-2",
              "spacing-xs-3": "MuiGrid-spacing-xs-3",
              "spacing-xs-4": "MuiGrid-spacing-xs-4",
              "spacing-xs-5": "MuiGrid-spacing-xs-5",
              "spacing-xs-6": "MuiGrid-spacing-xs-6",
              "spacing-xs-7": "MuiGrid-spacing-xs-7",
              "spacing-xs-8": "MuiGrid-spacing-xs-8",
              "spacing-xs-9": "MuiGrid-spacing-xs-9",
              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
              "zeroMinWidth": "MuiGrid-zeroMinWidth",
            }
          }
          container={true}
          spacing={2}
        >
          <div
            className="MuiGrid-root auth-container MuiGrid-container MuiGrid-spacing-xs-2"
          >
            <WithStyles(ForwardRef(Grid))
              className="auth-cols"
              item={true}
              md={7}
              xs={12}
            >
              <ForwardRef(Grid)
                className="auth-cols"
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={7}
                xs={12}
              >
                <div
                  className="MuiGrid-root auth-cols MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-7"
                >
                  <Styled(MuiBox)
                    className="content-block"
                  >
                    <div
                      className="MuiBox-root MuiBox-root-2 content-block"
                    >
                      <Styled(MuiBox)
                        className="content-header"
                      >
                        <div
                          className="MuiBox-root MuiBox-root-3 content-header"
                        >
                          <Styled(MuiBox)
                            className="left-block blocks"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-4 left-block blocks"
                            >
                              <Styled(MuiBox)
                                className="backIcons"
                                id="backIcons"
                                onClick={[Function]}
                              >
                                <div
                                  className="MuiBox-root MuiBox-root-5 backIcons"
                                  id="backIcons"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(KeyboardBackspaceIcon)>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(KeyboardBackspaceIcon)>
                                </div>
                              </Styled(MuiBox)>
                              <h4>
                                Facility Reservation
                              </h4>
                            </div>
                          </Styled(MuiBox)>
                        </div>
                      </Styled(MuiBox)>
                      <Styled(MuiBox)
                        className="content-block-wrapper facility-block-wrapper"
                      >
                        <div
                          className="MuiBox-root MuiBox-root-6 content-block-wrapper facility-block-wrapper"
                        >
                          <Styled(MuiBox)
                            className="incident-content-wrapper"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-7 incident-content-wrapper"
                            >
                              <WithStyles(ForwardRef(Card))
                                className="card facilityReserve-card"
                                onClick={[Function]}
                              >
                                <ForwardRef(Card)
                                  className="card facilityReserve-card"
                                  classes={
                                    Object {
                                      "root": "MuiCard-root",
                                    }
                                  }
                                  onClick={[Function]}
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MuiCard-root card facilityReserve-card"
                                    elevation={1}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(Paper)
                                      className="MuiCard-root card facilityReserve-card"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      elevation={1}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiPaper-root MuiCard-root card facilityReserve-card MuiPaper-elevation1 MuiPaper-rounded"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(CardContent))
                                          className="costom-card-content"
                                        >
                                          <ForwardRef(CardContent)
                                            className="costom-card-content"
                                            classes={
                                              Object {
                                                "root": "MuiCardContent-root",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCardContent-root costom-card-content"
                                            >
                                              <img
                                                alt="House Icon"
                                                className="frm-icons"
                                                src={
                                                  Object {
                                                    "testUri": "../../../packages/blocks/RequestManagement/assets/upcoming.png",
                                                  }
                                                }
                                              />
                                              <WithStyles(ForwardRef(Typography))
                                                component="h4"
                                              >
                                                <ForwardRef(Typography)
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="h4"
                                                >
                                                  <h4
                                                    className="MuiTypography-root MuiTypography-body1"
                                                  >
                                                    Upcoming Reservations
                                                  </h4>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                              <WithStyles(ForwardRef(Typography))
                                                component="h5"
                                              >
                                                <ForwardRef(Typography)
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="h5"
                                                >
                                                  <h5
                                                    className="MuiTypography-root MuiTypography-body1"
                                                  >
                                                    Total
                                                  </h5>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                              <WithStyles(ForwardRef(CardActions))
                                                className="card-footer"
                                              >
                                                <ForwardRef(CardActions)
                                                  className="card-footer"
                                                  classes={
                                                    Object {
                                                      "root": "MuiCardActions-root",
                                                      "spacing": "MuiCardActions-spacing",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiCardActions-root card-footer MuiCardActions-spacing"
                                                  >
                                                    <Styled(MuiBox)
                                                      className="customButton"
                                                    >
                                                      <div
                                                        className="MuiBox-root MuiBox-root-8 customButton"
                                                      >
                                                        <WithStyles(ForwardRef(Button))
                                                          className="contain warning"
                                                          variant="contained"
                                                        >
                                                          <ForwardRef(Button)
                                                            className="contain warning"
                                                            classes={
                                                              Object {
                                                                "colorInherit": "MuiButton-colorInherit",
                                                                "contained": "MuiButton-contained",
                                                                "containedPrimary": "MuiButton-containedPrimary",
                                                                "containedSecondary": "MuiButton-containedSecondary",
                                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                "disableElevation": "MuiButton-disableElevation",
                                                                "disabled": "Mui-disabled",
                                                                "endIcon": "MuiButton-endIcon",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "fullWidth": "MuiButton-fullWidth",
                                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                "label": "MuiButton-label",
                                                                "outlined": "MuiButton-outlined",
                                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                "root": "MuiButton-root",
                                                                "sizeLarge": "MuiButton-sizeLarge",
                                                                "sizeSmall": "MuiButton-sizeSmall",
                                                                "startIcon": "MuiButton-startIcon",
                                                                "text": "MuiButton-text",
                                                                "textPrimary": "MuiButton-textPrimary",
                                                                "textSecondary": "MuiButton-textSecondary",
                                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                                              }
                                                            }
                                                            variant="contained"
                                                          >
                                                            <WithStyles(ForwardRef(ButtonBase))
                                                              className="MuiButton-root MuiButton-contained contain warning"
                                                              component="button"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              focusVisibleClassName="Mui-focusVisible"
                                                              type="button"
                                                            >
                                                              <ForwardRef(ButtonBase)
                                                                className="MuiButton-root MuiButton-contained contain warning"
                                                                classes={
                                                                  Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiButtonBase-root",
                                                                  }
                                                                }
                                                                component="button"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                focusVisibleClassName="Mui-focusVisible"
                                                                type="button"
                                                              >
                                                                <button
                                                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained contain warning"
                                                                  disabled={false}
                                                                  onBlur={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  tabIndex={0}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="MuiButton-label"
                                                                  />
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </button>
                                                              </ForwardRef(ButtonBase)>
                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                          </ForwardRef(Button)>
                                                        </WithStyles(ForwardRef(Button))>
                                                      </div>
                                                    </Styled(MuiBox)>
                                                  </div>
                                                </ForwardRef(CardActions)>
                                              </WithStyles(ForwardRef(CardActions))>
                                            </div>
                                          </ForwardRef(CardContent)>
                                        </WithStyles(ForwardRef(CardContent))>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </ForwardRef(Card)>
                              </WithStyles(ForwardRef(Card))>
                              <WithStyles(ForwardRef(Card))
                                className="card facilityReserve-card"
                                onClick={[Function]}
                              >
                                <ForwardRef(Card)
                                  className="card facilityReserve-card"
                                  classes={
                                    Object {
                                      "root": "MuiCard-root",
                                    }
                                  }
                                  onClick={[Function]}
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MuiCard-root card facilityReserve-card"
                                    elevation={1}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(Paper)
                                      className="MuiCard-root card facilityReserve-card"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      elevation={1}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiPaper-root MuiCard-root card facilityReserve-card MuiPaper-elevation1 MuiPaper-rounded"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(CardContent))
                                          className="costom-card-content"
                                        >
                                          <ForwardRef(CardContent)
                                            className="costom-card-content"
                                            classes={
                                              Object {
                                                "root": "MuiCardContent-root",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCardContent-root costom-card-content"
                                            >
                                              <img
                                                alt="House Icon"
                                                className="frm-icons"
                                                src={
                                                  Object {
                                                    "testUri": "../../../packages/blocks/RequestManagement/assets/pending.png",
                                                  }
                                                }
                                              />
                                              <WithStyles(ForwardRef(Typography))
                                                component="h4"
                                              >
                                                <ForwardRef(Typography)
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="h4"
                                                >
                                                  <h4
                                                    className="MuiTypography-root MuiTypography-body1"
                                                  >
                                                    Pending Reservations
                                                  </h4>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                              <WithStyles(ForwardRef(Typography))
                                                component="h5"
                                              >
                                                <ForwardRef(Typography)
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="h5"
                                                >
                                                  <h5
                                                    className="MuiTypography-root MuiTypography-body1"
                                                  >
                                                    Total
                                                  </h5>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                              <WithStyles(ForwardRef(CardActions))
                                                className="card-footer"
                                              >
                                                <ForwardRef(CardActions)
                                                  className="card-footer"
                                                  classes={
                                                    Object {
                                                      "root": "MuiCardActions-root",
                                                      "spacing": "MuiCardActions-spacing",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiCardActions-root card-footer MuiCardActions-spacing"
                                                  >
                                                    <Styled(MuiBox)
                                                      className="customButton"
                                                    >
                                                      <div
                                                        className="MuiBox-root MuiBox-root-9 customButton"
                                                      >
                                                        <WithStyles(ForwardRef(Button))
                                                          className="contain warning"
                                                          variant="contained"
                                                        >
                                                          <ForwardRef(Button)
                                                            className="contain warning"
                                                            classes={
                                                              Object {
                                                                "colorInherit": "MuiButton-colorInherit",
                                                                "contained": "MuiButton-contained",
                                                                "containedPrimary": "MuiButton-containedPrimary",
                                                                "containedSecondary": "MuiButton-containedSecondary",
                                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                "disableElevation": "MuiButton-disableElevation",
                                                                "disabled": "Mui-disabled",
                                                                "endIcon": "MuiButton-endIcon",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "fullWidth": "MuiButton-fullWidth",
                                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                "label": "MuiButton-label",
                                                                "outlined": "MuiButton-outlined",
                                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                "root": "MuiButton-root",
                                                                "sizeLarge": "MuiButton-sizeLarge",
                                                                "sizeSmall": "MuiButton-sizeSmall",
                                                                "startIcon": "MuiButton-startIcon",
                                                                "text": "MuiButton-text",
                                                                "textPrimary": "MuiButton-textPrimary",
                                                                "textSecondary": "MuiButton-textSecondary",
                                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                                              }
                                                            }
                                                            variant="contained"
                                                          >
                                                            <WithStyles(ForwardRef(ButtonBase))
                                                              className="MuiButton-root MuiButton-contained contain warning"
                                                              component="button"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              focusVisibleClassName="Mui-focusVisible"
                                                              type="button"
                                                            >
                                                              <ForwardRef(ButtonBase)
                                                                className="MuiButton-root MuiButton-contained contain warning"
                                                                classes={
                                                                  Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiButtonBase-root",
                                                                  }
                                                                }
                                                                component="button"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                focusVisibleClassName="Mui-focusVisible"
                                                                type="button"
                                                              >
                                                                <button
                                                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained contain warning"
                                                                  disabled={false}
                                                                  onBlur={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  tabIndex={0}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="MuiButton-label"
                                                                  />
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </button>
                                                              </ForwardRef(ButtonBase)>
                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                          </ForwardRef(Button)>
                                                        </WithStyles(ForwardRef(Button))>
                                                      </div>
                                                    </Styled(MuiBox)>
                                                  </div>
                                                </ForwardRef(CardActions)>
                                              </WithStyles(ForwardRef(CardActions))>
                                            </div>
                                          </ForwardRef(CardContent)>
                                        </WithStyles(ForwardRef(CardContent))>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </ForwardRef(Card)>
                              </WithStyles(ForwardRef(Card))>
                              <WithStyles(ForwardRef(Card))
                                className="card facilityReserve-card"
                                onClick={[Function]}
                              >
                                <ForwardRef(Card)
                                  className="card facilityReserve-card"
                                  classes={
                                    Object {
                                      "root": "MuiCard-root",
                                    }
                                  }
                                  onClick={[Function]}
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MuiCard-root card facilityReserve-card"
                                    elevation={1}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(Paper)
                                      className="MuiCard-root card facilityReserve-card"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      elevation={1}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiPaper-root MuiCard-root card facilityReserve-card MuiPaper-elevation1 MuiPaper-rounded"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(CardContent))
                                          className="costom-card-content"
                                        >
                                          <ForwardRef(CardContent)
                                            className="costom-card-content"
                                            classes={
                                              Object {
                                                "root": "MuiCardContent-root",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCardContent-root costom-card-content"
                                            >
                                              <img
                                                alt="House Icon"
                                                className="frm-icons"
                                                src={
                                                  Object {
                                                    "testUri": "../../../packages/blocks/RequestManagement/assets/previous.png",
                                                  }
                                                }
                                              />
                                              <WithStyles(ForwardRef(Typography))
                                                component="h4"
                                              >
                                                <ForwardRef(Typography)
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="h4"
                                                >
                                                  <h4
                                                    className="MuiTypography-root MuiTypography-body1"
                                                  >
                                                    Previous Reservations
                                                  </h4>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                              <WithStyles(ForwardRef(Typography))
                                                component="h5"
                                              >
                                                <ForwardRef(Typography)
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="h5"
                                                >
                                                  <h5
                                                    className="MuiTypography-root MuiTypography-body1"
                                                  >
                                                    Total
                                                  </h5>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                              <WithStyles(ForwardRef(CardActions))
                                                className="card-footer"
                                              >
                                                <ForwardRef(CardActions)
                                                  className="card-footer"
                                                  classes={
                                                    Object {
                                                      "root": "MuiCardActions-root",
                                                      "spacing": "MuiCardActions-spacing",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiCardActions-root card-footer MuiCardActions-spacing"
                                                  >
                                                    <Styled(MuiBox)
                                                      className="customButton"
                                                    >
                                                      <div
                                                        className="MuiBox-root MuiBox-root-10 customButton"
                                                      >
                                                        <WithStyles(ForwardRef(Button))
                                                          className="contain warning"
                                                          variant="contained"
                                                        >
                                                          <ForwardRef(Button)
                                                            className="contain warning"
                                                            classes={
                                                              Object {
                                                                "colorInherit": "MuiButton-colorInherit",
                                                                "contained": "MuiButton-contained",
                                                                "containedPrimary": "MuiButton-containedPrimary",
                                                                "containedSecondary": "MuiButton-containedSecondary",
                                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                "disableElevation": "MuiButton-disableElevation",
                                                                "disabled": "Mui-disabled",
                                                                "endIcon": "MuiButton-endIcon",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "fullWidth": "MuiButton-fullWidth",
                                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                "label": "MuiButton-label",
                                                                "outlined": "MuiButton-outlined",
                                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                "root": "MuiButton-root",
                                                                "sizeLarge": "MuiButton-sizeLarge",
                                                                "sizeSmall": "MuiButton-sizeSmall",
                                                                "startIcon": "MuiButton-startIcon",
                                                                "text": "MuiButton-text",
                                                                "textPrimary": "MuiButton-textPrimary",
                                                                "textSecondary": "MuiButton-textSecondary",
                                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                                              }
                                                            }
                                                            variant="contained"
                                                          >
                                                            <WithStyles(ForwardRef(ButtonBase))
                                                              className="MuiButton-root MuiButton-contained contain warning"
                                                              component="button"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              focusVisibleClassName="Mui-focusVisible"
                                                              type="button"
                                                            >
                                                              <ForwardRef(ButtonBase)
                                                                className="MuiButton-root MuiButton-contained contain warning"
                                                                classes={
                                                                  Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiButtonBase-root",
                                                                  }
                                                                }
                                                                component="button"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                focusVisibleClassName="Mui-focusVisible"
                                                                type="button"
                                                              >
                                                                <button
                                                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained contain warning"
                                                                  disabled={false}
                                                                  onBlur={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  tabIndex={0}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="MuiButton-label"
                                                                  />
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </button>
                                                              </ForwardRef(ButtonBase)>
                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                          </ForwardRef(Button)>
                                                        </WithStyles(ForwardRef(Button))>
                                                      </div>
                                                    </Styled(MuiBox)>
                                                  </div>
                                                </ForwardRef(CardActions)>
                                              </WithStyles(ForwardRef(CardActions))>
                                            </div>
                                          </ForwardRef(CardContent)>
                                        </WithStyles(ForwardRef(CardContent))>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </ForwardRef(Card)>
                              </WithStyles(ForwardRef(Card))>
                              <WithStyles(ForwardRef(Card))
                                className="card facilityReserve-card"
                                onClick={[Function]}
                              >
                                <ForwardRef(Card)
                                  className="card facilityReserve-card"
                                  classes={
                                    Object {
                                      "root": "MuiCard-root",
                                    }
                                  }
                                  onClick={[Function]}
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MuiCard-root card facilityReserve-card"
                                    elevation={1}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(Paper)
                                      className="MuiCard-root card facilityReserve-card"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      elevation={1}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiPaper-root MuiCard-root card facilityReserve-card MuiPaper-elevation1 MuiPaper-rounded"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(CardContent))
                                          className="costom-card-content"
                                        >
                                          <ForwardRef(CardContent)
                                            className="costom-card-content"
                                            classes={
                                              Object {
                                                "root": "MuiCardContent-root",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCardContent-root costom-card-content"
                                            >
                                              <img
                                                alt="House Icon"
                                                className="frm-icons"
                                                src={
                                                  Object {
                                                    "testUri": "../../../packages/blocks/RequestManagement/assets/previous.png",
                                                  }
                                                }
                                              />
                                              <WithStyles(ForwardRef(Typography))
                                                component="h4"
                                              >
                                                <ForwardRef(Typography)
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="h4"
                                                >
                                                  <h4
                                                    className="MuiTypography-root MuiTypography-body1"
                                                  >
                                                    Reject Reservations
                                                  </h4>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                              <WithStyles(ForwardRef(Typography))
                                                component="h5"
                                              >
                                                <ForwardRef(Typography)
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="h5"
                                                >
                                                  <h5
                                                    className="MuiTypography-root MuiTypography-body1"
                                                  >
                                                    Total
                                                  </h5>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                              <WithStyles(ForwardRef(CardActions))
                                                className="card-footer"
                                              >
                                                <ForwardRef(CardActions)
                                                  className="card-footer"
                                                  classes={
                                                    Object {
                                                      "root": "MuiCardActions-root",
                                                      "spacing": "MuiCardActions-spacing",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiCardActions-root card-footer MuiCardActions-spacing"
                                                  >
                                                    <Styled(MuiBox)
                                                      className="customButton"
                                                    >
                                                      <div
                                                        className="MuiBox-root MuiBox-root-11 customButton"
                                                      >
                                                        <WithStyles(ForwardRef(Button))
                                                          className="contain warning"
                                                          variant="contained"
                                                        >
                                                          <ForwardRef(Button)
                                                            className="contain warning"
                                                            classes={
                                                              Object {
                                                                "colorInherit": "MuiButton-colorInherit",
                                                                "contained": "MuiButton-contained",
                                                                "containedPrimary": "MuiButton-containedPrimary",
                                                                "containedSecondary": "MuiButton-containedSecondary",
                                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                "disableElevation": "MuiButton-disableElevation",
                                                                "disabled": "Mui-disabled",
                                                                "endIcon": "MuiButton-endIcon",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "fullWidth": "MuiButton-fullWidth",
                                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                "label": "MuiButton-label",
                                                                "outlined": "MuiButton-outlined",
                                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                "root": "MuiButton-root",
                                                                "sizeLarge": "MuiButton-sizeLarge",
                                                                "sizeSmall": "MuiButton-sizeSmall",
                                                                "startIcon": "MuiButton-startIcon",
                                                                "text": "MuiButton-text",
                                                                "textPrimary": "MuiButton-textPrimary",
                                                                "textSecondary": "MuiButton-textSecondary",
                                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                                              }
                                                            }
                                                            variant="contained"
                                                          >
                                                            <WithStyles(ForwardRef(ButtonBase))
                                                              className="MuiButton-root MuiButton-contained contain warning"
                                                              component="button"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              focusVisibleClassName="Mui-focusVisible"
                                                              type="button"
                                                            >
                                                              <ForwardRef(ButtonBase)
                                                                className="MuiButton-root MuiButton-contained contain warning"
                                                                classes={
                                                                  Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiButtonBase-root",
                                                                  }
                                                                }
                                                                component="button"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                focusVisibleClassName="Mui-focusVisible"
                                                                type="button"
                                                              >
                                                                <button
                                                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained contain warning"
                                                                  disabled={false}
                                                                  onBlur={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  tabIndex={0}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="MuiButton-label"
                                                                  />
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </button>
                                                              </ForwardRef(ButtonBase)>
                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                          </ForwardRef(Button)>
                                                        </WithStyles(ForwardRef(Button))>
                                                      </div>
                                                    </Styled(MuiBox)>
                                                  </div>
                                                </ForwardRef(CardActions)>
                                              </WithStyles(ForwardRef(CardActions))>
                                            </div>
                                          </ForwardRef(CardContent)>
                                        </WithStyles(ForwardRef(CardContent))>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </ForwardRef(Card)>
                              </WithStyles(ForwardRef(Card))>
                              <WithStyles(ForwardRef(Card))
                                className="card facilityReserve-card"
                                onClick={[Function]}
                              >
                                <ForwardRef(Card)
                                  className="card facilityReserve-card"
                                  classes={
                                    Object {
                                      "root": "MuiCard-root",
                                    }
                                  }
                                  onClick={[Function]}
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MuiCard-root card facilityReserve-card"
                                    elevation={1}
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(Paper)
                                      className="MuiCard-root card facilityReserve-card"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                      elevation={1}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="MuiPaper-root MuiCard-root card facilityReserve-card MuiPaper-elevation1 MuiPaper-rounded"
                                        onClick={[Function]}
                                      >
                                        <WithStyles(ForwardRef(CardContent))
                                          className="costom-card-content"
                                        >
                                          <ForwardRef(CardContent)
                                            className="costom-card-content"
                                            classes={
                                              Object {
                                                "root": "MuiCardContent-root",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCardContent-root costom-card-content"
                                            >
                                              <img
                                                alt="House Icon"
                                                className="frm-icons"
                                                src={
                                                  Object {
                                                    "testUri": "../../../packages/blocks/RequestManagement/assets/previous.png",
                                                  }
                                                }
                                              />
                                              <WithStyles(ForwardRef(Typography))
                                                component="h4"
                                              >
                                                <ForwardRef(Typography)
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="h4"
                                                >
                                                  <h4
                                                    className="MuiTypography-root MuiTypography-body1"
                                                  >
                                                    Cancelled Reservations
                                                  </h4>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                              <WithStyles(ForwardRef(Typography))
                                                component="h5"
                                              >
                                                <ForwardRef(Typography)
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTypography-alignCenter",
                                                      "alignJustify": "MuiTypography-alignJustify",
                                                      "alignLeft": "MuiTypography-alignLeft",
                                                      "alignRight": "MuiTypography-alignRight",
                                                      "body1": "MuiTypography-body1",
                                                      "body2": "MuiTypography-body2",
                                                      "button": "MuiTypography-button",
                                                      "caption": "MuiTypography-caption",
                                                      "colorError": "MuiTypography-colorError",
                                                      "colorInherit": "MuiTypography-colorInherit",
                                                      "colorPrimary": "MuiTypography-colorPrimary",
                                                      "colorSecondary": "MuiTypography-colorSecondary",
                                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                      "displayBlock": "MuiTypography-displayBlock",
                                                      "displayInline": "MuiTypography-displayInline",
                                                      "gutterBottom": "MuiTypography-gutterBottom",
                                                      "h1": "MuiTypography-h1",
                                                      "h2": "MuiTypography-h2",
                                                      "h3": "MuiTypography-h3",
                                                      "h4": "MuiTypography-h4",
                                                      "h5": "MuiTypography-h5",
                                                      "h6": "MuiTypography-h6",
                                                      "noWrap": "MuiTypography-noWrap",
                                                      "overline": "MuiTypography-overline",
                                                      "paragraph": "MuiTypography-paragraph",
                                                      "root": "MuiTypography-root",
                                                      "srOnly": "MuiTypography-srOnly",
                                                      "subtitle1": "MuiTypography-subtitle1",
                                                      "subtitle2": "MuiTypography-subtitle2",
                                                    }
                                                  }
                                                  component="h5"
                                                >
                                                  <h5
                                                    className="MuiTypography-root MuiTypography-body1"
                                                  >
                                                    Total
                                                  </h5>
                                                </ForwardRef(Typography)>
                                              </WithStyles(ForwardRef(Typography))>
                                              <WithStyles(ForwardRef(CardActions))
                                                className="card-footer"
                                              >
                                                <ForwardRef(CardActions)
                                                  className="card-footer"
                                                  classes={
                                                    Object {
                                                      "root": "MuiCardActions-root",
                                                      "spacing": "MuiCardActions-spacing",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiCardActions-root card-footer MuiCardActions-spacing"
                                                  >
                                                    <Styled(MuiBox)
                                                      className="customButton"
                                                    >
                                                      <div
                                                        className="MuiBox-root MuiBox-root-12 customButton"
                                                      >
                                                        <WithStyles(ForwardRef(Button))
                                                          className="contain warning"
                                                          variant="contained"
                                                        >
                                                          <ForwardRef(Button)
                                                            className="contain warning"
                                                            classes={
                                                              Object {
                                                                "colorInherit": "MuiButton-colorInherit",
                                                                "contained": "MuiButton-contained",
                                                                "containedPrimary": "MuiButton-containedPrimary",
                                                                "containedSecondary": "MuiButton-containedSecondary",
                                                                "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                                "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                                "disableElevation": "MuiButton-disableElevation",
                                                                "disabled": "Mui-disabled",
                                                                "endIcon": "MuiButton-endIcon",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "fullWidth": "MuiButton-fullWidth",
                                                                "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                                "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                                "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                                "label": "MuiButton-label",
                                                                "outlined": "MuiButton-outlined",
                                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                                "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                                "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                                "root": "MuiButton-root",
                                                                "sizeLarge": "MuiButton-sizeLarge",
                                                                "sizeSmall": "MuiButton-sizeSmall",
                                                                "startIcon": "MuiButton-startIcon",
                                                                "text": "MuiButton-text",
                                                                "textPrimary": "MuiButton-textPrimary",
                                                                "textSecondary": "MuiButton-textSecondary",
                                                                "textSizeLarge": "MuiButton-textSizeLarge",
                                                                "textSizeSmall": "MuiButton-textSizeSmall",
                                                              }
                                                            }
                                                            variant="contained"
                                                          >
                                                            <WithStyles(ForwardRef(ButtonBase))
                                                              className="MuiButton-root MuiButton-contained contain warning"
                                                              component="button"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              focusVisibleClassName="Mui-focusVisible"
                                                              type="button"
                                                            >
                                                              <ForwardRef(ButtonBase)
                                                                className="MuiButton-root MuiButton-contained contain warning"
                                                                classes={
                                                                  Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiButtonBase-root",
                                                                  }
                                                                }
                                                                component="button"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                focusVisibleClassName="Mui-focusVisible"
                                                                type="button"
                                                              >
                                                                <button
                                                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained contain warning"
                                                                  disabled={false}
                                                                  onBlur={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  tabIndex={0}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="MuiButton-label"
                                                                  />
                                                                  <WithStyles(memo)
                                                                    center={false}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={false}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </button>
                                                              </ForwardRef(ButtonBase)>
                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                          </ForwardRef(Button)>
                                                        </WithStyles(ForwardRef(Button))>
                                                      </div>
                                                    </Styled(MuiBox)>
                                                  </div>
                                                </ForwardRef(CardActions)>
                                              </WithStyles(ForwardRef(CardActions))>
                                            </div>
                                          </ForwardRef(CardContent)>
                                        </WithStyles(ForwardRef(CardContent))>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </ForwardRef(Card)>
                              </WithStyles(ForwardRef(Card))>
                            </div>
                          </Styled(MuiBox)>
                          <Styled(MuiBox)
                            className="customButton add-incident"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-13 customButton add-incident"
                            >
                              <WithStyles(ForwardRef(Button))
                                onClick={[Function]}
                                variant="contained"
                              >
                                <ForwardRef(Button)
                                  classes={
                                    Object {
                                      "colorInherit": "MuiButton-colorInherit",
                                      "contained": "MuiButton-contained",
                                      "containedPrimary": "MuiButton-containedPrimary",
                                      "containedSecondary": "MuiButton-containedSecondary",
                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                      "disableElevation": "MuiButton-disableElevation",
                                      "disabled": "Mui-disabled",
                                      "endIcon": "MuiButton-endIcon",
                                      "focusVisible": "Mui-focusVisible",
                                      "fullWidth": "MuiButton-fullWidth",
                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                      "label": "MuiButton-label",
                                      "outlined": "MuiButton-outlined",
                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                      "root": "MuiButton-root",
                                      "sizeLarge": "MuiButton-sizeLarge",
                                      "sizeSmall": "MuiButton-sizeSmall",
                                      "startIcon": "MuiButton-startIcon",
                                      "text": "MuiButton-text",
                                      "textPrimary": "MuiButton-textPrimary",
                                      "textSecondary": "MuiButton-textSecondary",
                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                    }
                                  }
                                  onClick={[Function]}
                                  variant="contained"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    className="MuiButton-root MuiButton-contained"
                                    component="button"
                                    disabled={false}
                                    focusRipple={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <ForwardRef(ButtonBase)
                                      className="MuiButton-root MuiButton-contained"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component="button"
                                      disabled={false}
                                      focusRipple={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <button
                                        className="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiButton-label"
                                        >
                                          BOOK A FACILITY
                                        </span>
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(Button)>
                              </WithStyles(ForwardRef(Button))>
                            </div>
                          </Styled(MuiBox)>
                        </div>
                      </Styled(MuiBox)>
                    </div>
                  </Styled(MuiBox)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
            <WithStyles(ForwardRef(Grid))
              className="auth-cols"
              item={true}
              md={5}
              xs={12}
            >
              <ForwardRef(Grid)
                className="auth-cols"
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={5}
                xs={12}
              >
                <div
                  className="MuiGrid-root auth-cols MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-5"
                >
                  <Styled(MuiBox)
                    className="right-block"
                    display={
                      Object {
                        "md": "flex",
                        "xs": "none",
                      }
                    }
                  >
                    <div
                      className="MuiBox-root MuiBox-root-14 right-block"
                    >
                      <img
                        alt=""
                        className="building-logo"
                      />
                    </div>
                  </Styled(MuiBox)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
          </div>
        </ForwardRef(Grid)>
      </WithStyles(ForwardRef(Grid))>
    </div>
  </Styled(MuiBox)>
  <Loader
    loading={true}
  >
    <WithStyles(ForwardRef(Backdrop))
      onClick={[Function]}
      open={true}
      style={
        Object {
          "color": "#ffffff",
          "zIndex": 9999,
        }
      }
    >
      <ForwardRef(Backdrop)
        classes={
          Object {
            "invisible": "MuiBackdrop-invisible",
            "root": "MuiBackdrop-root",
          }
        }
        onClick={[Function]}
        open={true}
        style={
          Object {
            "color": "#ffffff",
            "zIndex": 9999,
          }
        }
      >
        <ForwardRef(Fade)
          in={true}
          onClick={[Function]}
          style={
            Object {
              "color": "#ffffff",
              "zIndex": 9999,
            }
          }
        >
          <Transition
            appear={true}
            enter={true}
            exit={true}
            in={true}
            mountOnEnter={false}
            onClick={[Function]}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={
              Object {
                "enter": 225,
                "exit": 195,
              }
            }
            unmountOnExit={false}
          >
            <div
              aria-hidden={true}
              className="MuiBackdrop-root"
              onClick={[Function]}
              style={
                Object {
                  "color": "#ffffff",
                  "opacity": 1,
                  "visibility": undefined,
                  "zIndex": 9999,
                }
              }
            >
              <WithStyles(ForwardRef(CircularProgress))
                style={
                  Object {
                    "color": "#2c6fed",
                  }
                }
              >
                <ForwardRef(CircularProgress)
                  classes={
                    Object {
                      "circle": "MuiCircularProgress-circle",
                      "circleDeterminate": "MuiCircularProgress-circleDeterminate",
                      "circleDisableShrink": "MuiCircularProgress-circleDisableShrink",
                      "circleIndeterminate": "MuiCircularProgress-circleIndeterminate",
                      "circleStatic": "MuiCircularProgress-circleStatic",
                      "colorPrimary": "MuiCircularProgress-colorPrimary",
                      "colorSecondary": "MuiCircularProgress-colorSecondary",
                      "determinate": "MuiCircularProgress-determinate",
                      "indeterminate": "MuiCircularProgress-indeterminate",
                      "root": "MuiCircularProgress-root",
                      "static": "MuiCircularProgress-static",
                      "svg": "MuiCircularProgress-svg",
                    }
                  }
                  style={
                    Object {
                      "color": "#2c6fed",
                    }
                  }
                >
                  <div
                    className="MuiCircularProgress-root MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
                    role="progressbar"
                    style={
                      Object {
                        "color": "#2c6fed",
                        "height": 40,
                        "width": 40,
                      }
                    }
                  >
                    <svg
                      className="MuiCircularProgress-svg"
                      viewBox="22 22 44 44"
                    >
                      <circle
                        className="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                        cx={44}
                        cy={44}
                        fill="none"
                        r={20.2}
                        strokeWidth={3.6}
                        style={Object {}}
                      />
                    </svg>
                  </div>
                </ForwardRef(CircularProgress)>
              </WithStyles(ForwardRef(CircularProgress))>
            </div>
          </Transition>
        </ForwardRef(Fade)>
      </ForwardRef(Backdrop)>
    </WithStyles(ForwardRef(Backdrop))>
  </Loader>
</FacilityReservation>
`;
