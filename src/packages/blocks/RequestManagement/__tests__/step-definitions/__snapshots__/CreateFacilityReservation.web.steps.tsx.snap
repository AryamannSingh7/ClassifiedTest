// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateFacilityReservation User navigates to CreateFacilityReservation 1`] = `
<CreateFacilityReservation
  history={
    Object {
      "push": [MockFunction],
    }
  }
  id="CreateFacilityReservation"
  location={[MockFunction]}
  match={[MockFunction]}
  navigation={Object {}}
  t={[MockFunction]}
>
  <Styled(MuiBox)
    className="login-wrapper incident-wrapper"
  >
    <div
      className="MuiBox-root MuiBox-root-1 login-wrapper incident-wrapper"
    >
      <WithStyles(ForwardRef(Grid))
        className="auth-container"
        container={true}
        spacing={2}
      >
        <ForwardRef(Grid)
          className="auth-container"
          classes={
            Object {
              "align-content-xs-center": "MuiGrid-align-content-xs-center",
              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
              "align-items-xs-center": "MuiGrid-align-items-xs-center",
              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
              "container": "MuiGrid-container",
              "direction-xs-column": "MuiGrid-direction-xs-column",
              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
              "grid-lg-1": "MuiGrid-grid-lg-1",
              "grid-lg-10": "MuiGrid-grid-lg-10",
              "grid-lg-11": "MuiGrid-grid-lg-11",
              "grid-lg-12": "MuiGrid-grid-lg-12",
              "grid-lg-2": "MuiGrid-grid-lg-2",
              "grid-lg-3": "MuiGrid-grid-lg-3",
              "grid-lg-4": "MuiGrid-grid-lg-4",
              "grid-lg-5": "MuiGrid-grid-lg-5",
              "grid-lg-6": "MuiGrid-grid-lg-6",
              "grid-lg-7": "MuiGrid-grid-lg-7",
              "grid-lg-8": "MuiGrid-grid-lg-8",
              "grid-lg-9": "MuiGrid-grid-lg-9",
              "grid-lg-auto": "MuiGrid-grid-lg-auto",
              "grid-lg-true": "MuiGrid-grid-lg-true",
              "grid-md-1": "MuiGrid-grid-md-1",
              "grid-md-10": "MuiGrid-grid-md-10",
              "grid-md-11": "MuiGrid-grid-md-11",
              "grid-md-12": "MuiGrid-grid-md-12",
              "grid-md-2": "MuiGrid-grid-md-2",
              "grid-md-3": "MuiGrid-grid-md-3",
              "grid-md-4": "MuiGrid-grid-md-4",
              "grid-md-5": "MuiGrid-grid-md-5",
              "grid-md-6": "MuiGrid-grid-md-6",
              "grid-md-7": "MuiGrid-grid-md-7",
              "grid-md-8": "MuiGrid-grid-md-8",
              "grid-md-9": "MuiGrid-grid-md-9",
              "grid-md-auto": "MuiGrid-grid-md-auto",
              "grid-md-true": "MuiGrid-grid-md-true",
              "grid-sm-1": "MuiGrid-grid-sm-1",
              "grid-sm-10": "MuiGrid-grid-sm-10",
              "grid-sm-11": "MuiGrid-grid-sm-11",
              "grid-sm-12": "MuiGrid-grid-sm-12",
              "grid-sm-2": "MuiGrid-grid-sm-2",
              "grid-sm-3": "MuiGrid-grid-sm-3",
              "grid-sm-4": "MuiGrid-grid-sm-4",
              "grid-sm-5": "MuiGrid-grid-sm-5",
              "grid-sm-6": "MuiGrid-grid-sm-6",
              "grid-sm-7": "MuiGrid-grid-sm-7",
              "grid-sm-8": "MuiGrid-grid-sm-8",
              "grid-sm-9": "MuiGrid-grid-sm-9",
              "grid-sm-auto": "MuiGrid-grid-sm-auto",
              "grid-sm-true": "MuiGrid-grid-sm-true",
              "grid-xl-1": "MuiGrid-grid-xl-1",
              "grid-xl-10": "MuiGrid-grid-xl-10",
              "grid-xl-11": "MuiGrid-grid-xl-11",
              "grid-xl-12": "MuiGrid-grid-xl-12",
              "grid-xl-2": "MuiGrid-grid-xl-2",
              "grid-xl-3": "MuiGrid-grid-xl-3",
              "grid-xl-4": "MuiGrid-grid-xl-4",
              "grid-xl-5": "MuiGrid-grid-xl-5",
              "grid-xl-6": "MuiGrid-grid-xl-6",
              "grid-xl-7": "MuiGrid-grid-xl-7",
              "grid-xl-8": "MuiGrid-grid-xl-8",
              "grid-xl-9": "MuiGrid-grid-xl-9",
              "grid-xl-auto": "MuiGrid-grid-xl-auto",
              "grid-xl-true": "MuiGrid-grid-xl-true",
              "grid-xs-1": "MuiGrid-grid-xs-1",
              "grid-xs-10": "MuiGrid-grid-xs-10",
              "grid-xs-11": "MuiGrid-grid-xs-11",
              "grid-xs-12": "MuiGrid-grid-xs-12",
              "grid-xs-2": "MuiGrid-grid-xs-2",
              "grid-xs-3": "MuiGrid-grid-xs-3",
              "grid-xs-4": "MuiGrid-grid-xs-4",
              "grid-xs-5": "MuiGrid-grid-xs-5",
              "grid-xs-6": "MuiGrid-grid-xs-6",
              "grid-xs-7": "MuiGrid-grid-xs-7",
              "grid-xs-8": "MuiGrid-grid-xs-8",
              "grid-xs-9": "MuiGrid-grid-xs-9",
              "grid-xs-auto": "MuiGrid-grid-xs-auto",
              "grid-xs-true": "MuiGrid-grid-xs-true",
              "item": "MuiGrid-item",
              "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
              "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
              "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
              "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
              "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
              "root": "MuiGrid-root",
              "spacing-xs-1": "MuiGrid-spacing-xs-1",
              "spacing-xs-10": "MuiGrid-spacing-xs-10",
              "spacing-xs-2": "MuiGrid-spacing-xs-2",
              "spacing-xs-3": "MuiGrid-spacing-xs-3",
              "spacing-xs-4": "MuiGrid-spacing-xs-4",
              "spacing-xs-5": "MuiGrid-spacing-xs-5",
              "spacing-xs-6": "MuiGrid-spacing-xs-6",
              "spacing-xs-7": "MuiGrid-spacing-xs-7",
              "spacing-xs-8": "MuiGrid-spacing-xs-8",
              "spacing-xs-9": "MuiGrid-spacing-xs-9",
              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
              "zeroMinWidth": "MuiGrid-zeroMinWidth",
            }
          }
          container={true}
          spacing={2}
        >
          <div
            className="MuiGrid-root auth-container MuiGrid-container MuiGrid-spacing-xs-2"
          >
            <WithStyles(ForwardRef(Grid))
              className="auth-cols"
              item={true}
              md={7}
              xs={12}
            >
              <ForwardRef(Grid)
                className="auth-cols"
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={7}
                xs={12}
              >
                <div
                  className="MuiGrid-root auth-cols MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-7"
                >
                  <Styled(MuiBox)
                    className="common_content_block content-block"
                  >
                    <div
                      className="MuiBox-root MuiBox-root-2 common_content_block content-block"
                    >
                      <Styled(MuiBox)
                        className="content-header"
                      >
                        <div
                          className="MuiBox-root MuiBox-root-3 content-header"
                        >
                          <Styled(MuiBox)
                            className="left-block blocks"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-4 left-block blocks"
                            >
                              <Styled(MuiBox)
                                className="backIcons"
                                onClick={[Function]}
                              >
                                <div
                                  className="MuiBox-root MuiBox-root-5 backIcons"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(KeyboardBackspaceIcon)>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(KeyboardBackspaceIcon)>
                                </div>
                              </Styled(MuiBox)>
                              <h4>
                                Facility Reservation
                              </h4>
                            </div>
                          </Styled(MuiBox)>
                        </div>
                      </Styled(MuiBox)>
                      <Styled(MuiBox)
                        className="content-block-wrapper common-incident-block desktop-ui create-reservation-wrapper"
                      >
                        <div
                          className="MuiBox-root MuiBox-root-6 content-block-wrapper common-incident-block desktop-ui create-reservation-wrapper"
                        >
                          <Formik
                            enableReinitialize={true}
                            initialValues={
                              Object {
                                "areaReserve": " ",
                                "buildingName": " ",
                                "date": "Invalid date",
                                "id": "",
                                "timeFrom": "",
                                "timeTo": "",
                              }
                            }
                            onSubmit={[Function]}
                            validateOnMount={true}
                            validationSchema={
                              ObjectSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_defaultDefault": [Function],
                                "_deps": Array [],
                                "_excludedEdges": Array [],
                                "_exclusive": Object {},
                                "_mutate": undefined,
                                "_nodes": Array [
                                  "timeTo",
                                  "timeFrom",
                                  "date",
                                  "buildingName",
                                  "areaReserve",
                                ],
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "object",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "fields": Object {
                                  "areaReserve": StringSchema {
                                    "_blacklist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_conditions": Array [],
                                    "_deps": Array [],
                                    "_exclusive": Object {
                                      "required": true,
                                      "trim": false,
                                    },
                                    "_mutate": undefined,
                                    "_options": Object {
                                      "abortEarly": true,
                                      "recursive": true,
                                    },
                                    "_type": "string",
                                    "_typeError": [Function],
                                    "_whitelist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "tests": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "type": "string",
                                  },
                                  "buildingName": StringSchema {
                                    "_blacklist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_conditions": Array [],
                                    "_deps": Array [],
                                    "_exclusive": Object {
                                      "required": true,
                                      "trim": false,
                                    },
                                    "_mutate": undefined,
                                    "_options": Object {
                                      "abortEarly": true,
                                      "recursive": true,
                                    },
                                    "_type": "string",
                                    "_typeError": [Function],
                                    "_whitelist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "tests": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "type": "string",
                                  },
                                  "date": DateSchema {
                                    "_blacklist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_conditions": Array [],
                                    "_deps": Array [],
                                    "_exclusive": Object {
                                      "min": true,
                                      "required": true,
                                    },
                                    "_mutate": undefined,
                                    "_options": Object {
                                      "abortEarly": true,
                                      "recursive": true,
                                    },
                                    "_type": "date",
                                    "_typeError": [Function],
                                    "_whitelist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "tests": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                    "type": "date",
                                  },
                                  "timeFrom": StringSchema {
                                    "_blacklist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_conditions": Array [],
                                    "_deps": Array [],
                                    "_exclusive": Object {
                                      "required": true,
                                    },
                                    "_mutate": undefined,
                                    "_options": Object {
                                      "abortEarly": true,
                                      "recursive": true,
                                    },
                                    "_type": "string",
                                    "_typeError": [Function],
                                    "_whitelist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "tests": Array [
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                    "type": "string",
                                  },
                                  "timeTo": StringSchema {
                                    "_blacklist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_conditions": Array [],
                                    "_deps": Array [],
                                    "_exclusive": Object {
                                      "is-greater": false,
                                      "required": true,
                                    },
                                    "_mutate": undefined,
                                    "_options": Object {
                                      "abortEarly": true,
                                      "recursive": true,
                                    },
                                    "_type": "string",
                                    "_typeError": [Function],
                                    "_whitelist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "tests": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                    "type": "string",
                                  },
                                },
                                "tests": Array [],
                                "transforms": Array [
                                  [Function],
                                ],
                                "type": "object",
                              }
                            }
                          >
                            <Form
                              className="commonForm CreateClassifiedFrm"
                              translate="yes"
                            >
                              <form
                                action="#"
                                className="commonForm CreateClassifiedFrm"
                                onReset={[Function]}
                                onSubmit={[Function]}
                                translate="yes"
                              >
                                <h5
                                  className="frm-title incident-preview-title"
                                />
                                <Styled(MuiBox)
                                  className="formGroup customSelect"
                                >
                                  <div
                                    className="MuiBox-root MuiBox-root-7 formGroup customSelect"
                                  >
                                    <WithStyles(ForwardRef(FormControl))
                                      variant="outlined"
                                    >
                                      <ForwardRef(FormControl)
                                        classes={
                                          Object {
                                            "fullWidth": "MuiFormControl-fullWidth",
                                            "marginDense": "MuiFormControl-marginDense",
                                            "marginNormal": "MuiFormControl-marginNormal",
                                            "root": "MuiFormControl-root",
                                          }
                                        }
                                        variant="outlined"
                                      >
                                        <div
                                          className="MuiFormControl-root"
                                        >
                                          <span
                                            className="frmLeftIcons"
                                          >
                                            <img
                                              alt="House Icon"
                                              className="frm-icons"
                                              src={
                                                Object {
                                                  "testUri": "../../../packages/blocks/RequestManagement/assets/LEADING-ICON.png",
                                                }
                                              }
                                            />
                                          </span>
                                          <WithStyles(ForwardRef(Select))
                                            id="demo-simple-select-outlined"
                                            labelId="demo-simple-select-outlined-label"
                                            name="buildingName"
                                            onChange={[Function]}
                                            style={
                                              Object {
                                                "marginTop": -3,
                                                "paddingLeft": 50,
                                              }
                                            }
                                            value=" "
                                          >
                                            <ForwardRef(Select)
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "filled": "MuiSelect-filled",
                                                  "icon": "MuiSelect-icon",
                                                  "iconFilled": "MuiSelect-iconFilled",
                                                  "iconOpen": "MuiSelect-iconOpen",
                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                  "nativeInput": "MuiSelect-nativeInput",
                                                  "outlined": "MuiSelect-outlined",
                                                  "root": "MuiSelect-root",
                                                  "select": "MuiSelect-select",
                                                  "selectMenu": "MuiSelect-selectMenu",
                                                }
                                              }
                                              id="demo-simple-select-outlined"
                                              labelId="demo-simple-select-outlined-label"
                                              name="buildingName"
                                              onChange={[Function]}
                                              style={
                                                Object {
                                                  "marginTop": -3,
                                                  "paddingLeft": 50,
                                                }
                                              }
                                              value=" "
                                            >
                                              <WithStyles(ForwardRef(OutlinedInput))
                                                inputComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "IconComponent": [Function],
                                                      "MenuProps": [Function],
                                                      "SelectDisplayProps": [Function],
                                                      "aria-label": [Function],
                                                      "autoFocus": [Function],
                                                      "autoWidth": [Function],
                                                      "children": [Function],
                                                      "className": [Function],
                                                      "classes": [Function],
                                                      "defaultValue": [Function],
                                                      "disabled": [Function],
                                                      "displayEmpty": [Function],
                                                      "inputRef": [Function],
                                                      "labelId": [Function],
                                                      "multiple": [Function],
                                                      "name": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onClose": [Function],
                                                      "onFocus": [Function],
                                                      "onOpen": [Function],
                                                      "open": [Function],
                                                      "readOnly": [Function],
                                                      "renderValue": [Function],
                                                      "tabIndex": [Function],
                                                      "type": [Function],
                                                      "value": [Function],
                                                      "variant": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                inputProps={
                                                  Object {
                                                    "IconComponent": Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    },
                                                    "MenuProps": undefined,
                                                    "SelectDisplayProps": Object {
                                                      "id": "demo-simple-select-outlined",
                                                    },
                                                    "autoWidth": false,
                                                    "children": Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        disabled={true}
                                                        value=" "
                                                      >
                                                        Building Name
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      Array [],
                                                    ],
                                                    "classes": Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    },
                                                    "displayEmpty": false,
                                                    "labelId": "demo-simple-select-outlined-label",
                                                    "multiple": false,
                                                    "onClose": undefined,
                                                    "onOpen": undefined,
                                                    "open": undefined,
                                                    "renderValue": undefined,
                                                    "type": undefined,
                                                    "variant": "outlined",
                                                  }
                                                }
                                                labelWidth={0}
                                                name="buildingName"
                                                onChange={[Function]}
                                                style={
                                                  Object {
                                                    "marginTop": -3,
                                                    "paddingLeft": 50,
                                                  }
                                                }
                                                value=" "
                                              >
                                                <ForwardRef(OutlinedInput)
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                      "adornedStart": "MuiOutlinedInput-adornedStart",
                                                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "error": "Mui-error",
                                                      "focused": "Mui-focused",
                                                      "input": "MuiOutlinedInput-input",
                                                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                      "marginDense": "MuiOutlinedInput-marginDense",
                                                      "multiline": "MuiOutlinedInput-multiline",
                                                      "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                      "root": "MuiOutlinedInput-root",
                                                    }
                                                  }
                                                  inputComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "propTypes": Object {
                                                        "IconComponent": [Function],
                                                        "MenuProps": [Function],
                                                        "SelectDisplayProps": [Function],
                                                        "aria-label": [Function],
                                                        "autoFocus": [Function],
                                                        "autoWidth": [Function],
                                                        "children": [Function],
                                                        "className": [Function],
                                                        "classes": [Function],
                                                        "defaultValue": [Function],
                                                        "disabled": [Function],
                                                        "displayEmpty": [Function],
                                                        "inputRef": [Function],
                                                        "labelId": [Function],
                                                        "multiple": [Function],
                                                        "name": [Function],
                                                        "onBlur": [Function],
                                                        "onChange": [Function],
                                                        "onClose": [Function],
                                                        "onFocus": [Function],
                                                        "onOpen": [Function],
                                                        "open": [Function],
                                                        "readOnly": [Function],
                                                        "renderValue": [Function],
                                                        "tabIndex": [Function],
                                                        "type": [Function],
                                                        "value": [Function],
                                                        "variant": [Function],
                                                      },
                                                      "render": [Function],
                                                    }
                                                  }
                                                  inputProps={
                                                    Object {
                                                      "IconComponent": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "MenuProps": undefined,
                                                      "SelectDisplayProps": Object {
                                                        "id": "demo-simple-select-outlined",
                                                      },
                                                      "autoWidth": false,
                                                      "children": Array [
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          disabled={true}
                                                          value=" "
                                                        >
                                                          Building Name
                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                        Array [],
                                                      ],
                                                      "classes": Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      },
                                                      "displayEmpty": false,
                                                      "labelId": "demo-simple-select-outlined-label",
                                                      "multiple": false,
                                                      "onClose": undefined,
                                                      "onOpen": undefined,
                                                      "open": undefined,
                                                      "renderValue": undefined,
                                                      "type": undefined,
                                                      "variant": "outlined",
                                                    }
                                                  }
                                                  labelWidth={0}
                                                  name="buildingName"
                                                  onChange={[Function]}
                                                  style={
                                                    Object {
                                                      "marginTop": -3,
                                                      "paddingLeft": 50,
                                                    }
                                                  }
                                                  value=" "
                                                >
                                                  <WithStyles(ForwardRef(InputBase))
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                        "adornedStart": "MuiOutlinedInput-adornedStart",
                                                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "input": "MuiOutlinedInput-input",
                                                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                        "marginDense": "MuiOutlinedInput-marginDense",
                                                        "multiline": "MuiOutlinedInput-multiline",
                                                        "notchedOutline": null,
                                                        "root": "MuiOutlinedInput-root",
                                                      }
                                                    }
                                                    fullWidth={false}
                                                    inputComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "propTypes": Object {
                                                          "IconComponent": [Function],
                                                          "MenuProps": [Function],
                                                          "SelectDisplayProps": [Function],
                                                          "aria-label": [Function],
                                                          "autoFocus": [Function],
                                                          "autoWidth": [Function],
                                                          "children": [Function],
                                                          "className": [Function],
                                                          "classes": [Function],
                                                          "defaultValue": [Function],
                                                          "disabled": [Function],
                                                          "displayEmpty": [Function],
                                                          "inputRef": [Function],
                                                          "labelId": [Function],
                                                          "multiple": [Function],
                                                          "name": [Function],
                                                          "onBlur": [Function],
                                                          "onChange": [Function],
                                                          "onClose": [Function],
                                                          "onFocus": [Function],
                                                          "onOpen": [Function],
                                                          "open": [Function],
                                                          "readOnly": [Function],
                                                          "renderValue": [Function],
                                                          "tabIndex": [Function],
                                                          "type": [Function],
                                                          "value": [Function],
                                                          "variant": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    inputProps={
                                                      Object {
                                                        "IconComponent": Object {
                                                          "$$typeof": Symbol(react.memo),
                                                          "compare": null,
                                                          "type": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          },
                                                        },
                                                        "MenuProps": undefined,
                                                        "SelectDisplayProps": Object {
                                                          "id": "demo-simple-select-outlined",
                                                        },
                                                        "autoWidth": false,
                                                        "children": Array [
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            disabled={true}
                                                            value=" "
                                                          >
                                                            Building Name
                                                          </WithStyles(ForwardRef(MenuItem))>,
                                                          Array [],
                                                        ],
                                                        "classes": Object {
                                                          "disabled": "Mui-disabled",
                                                          "filled": "MuiSelect-filled",
                                                          "icon": "MuiSelect-icon",
                                                          "iconFilled": "MuiSelect-iconFilled",
                                                          "iconOpen": "MuiSelect-iconOpen",
                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                          "nativeInput": "MuiSelect-nativeInput",
                                                          "outlined": "MuiSelect-outlined",
                                                          "root": "MuiSelect-root",
                                                          "select": "MuiSelect-select",
                                                          "selectMenu": "MuiSelect-selectMenu",
                                                        },
                                                        "displayEmpty": false,
                                                        "labelId": "demo-simple-select-outlined-label",
                                                        "multiple": false,
                                                        "onClose": undefined,
                                                        "onOpen": undefined,
                                                        "open": undefined,
                                                        "renderValue": undefined,
                                                        "type": undefined,
                                                        "variant": "outlined",
                                                      }
                                                    }
                                                    multiline={false}
                                                    name="buildingName"
                                                    onChange={[Function]}
                                                    renderSuffix={[Function]}
                                                    style={
                                                      Object {
                                                        "marginTop": -3,
                                                        "paddingLeft": 50,
                                                      }
                                                    }
                                                    type="text"
                                                    value=" "
                                                  >
                                                    <ForwardRef(InputBase)
                                                      classes={
                                                        Object {
                                                          "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                          "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                          "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                          "disabled": "Mui-disabled Mui-disabled",
                                                          "error": "Mui-error Mui-error",
                                                          "focused": "Mui-focused Mui-focused",
                                                          "formControl": "MuiInputBase-formControl",
                                                          "fullWidth": "MuiInputBase-fullWidth",
                                                          "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                          "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                          "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                          "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                          "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "propTypes": Object {
                                                            "IconComponent": [Function],
                                                            "MenuProps": [Function],
                                                            "SelectDisplayProps": [Function],
                                                            "aria-label": [Function],
                                                            "autoFocus": [Function],
                                                            "autoWidth": [Function],
                                                            "children": [Function],
                                                            "className": [Function],
                                                            "classes": [Function],
                                                            "defaultValue": [Function],
                                                            "disabled": [Function],
                                                            "displayEmpty": [Function],
                                                            "inputRef": [Function],
                                                            "labelId": [Function],
                                                            "multiple": [Function],
                                                            "name": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onClose": [Function],
                                                            "onFocus": [Function],
                                                            "onOpen": [Function],
                                                            "open": [Function],
                                                            "readOnly": [Function],
                                                            "renderValue": [Function],
                                                            "tabIndex": [Function],
                                                            "type": [Function],
                                                            "value": [Function],
                                                            "variant": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      inputProps={
                                                        Object {
                                                          "IconComponent": Object {
                                                            "$$typeof": Symbol(react.memo),
                                                            "compare": null,
                                                            "type": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "render": [Function],
                                                            },
                                                          },
                                                          "MenuProps": undefined,
                                                          "SelectDisplayProps": Object {
                                                            "id": "demo-simple-select-outlined",
                                                          },
                                                          "autoWidth": false,
                                                          "children": Array [
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              disabled={true}
                                                              value=" "
                                                            >
                                                              Building Name
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                            Array [],
                                                          ],
                                                          "classes": Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          },
                                                          "displayEmpty": false,
                                                          "labelId": "demo-simple-select-outlined-label",
                                                          "multiple": false,
                                                          "onClose": undefined,
                                                          "onOpen": undefined,
                                                          "open": undefined,
                                                          "renderValue": undefined,
                                                          "type": undefined,
                                                          "variant": "outlined",
                                                        }
                                                      }
                                                      multiline={false}
                                                      name="buildingName"
                                                      onChange={[Function]}
                                                      renderSuffix={[Function]}
                                                      style={
                                                        Object {
                                                          "marginTop": -3,
                                                          "paddingLeft": 50,
                                                        }
                                                      }
                                                      type="text"
                                                      value=" "
                                                    >
                                                      <div
                                                        className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "marginTop": -3,
                                                            "paddingLeft": 50,
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(SelectInput)
                                                          IconComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.memo),
                                                              "compare": null,
                                                              "type": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "render": [Function],
                                                              },
                                                            }
                                                          }
                                                          SelectDisplayProps={
                                                            Object {
                                                              "id": "demo-simple-select-outlined",
                                                            }
                                                          }
                                                          aria-invalid={false}
                                                          autoWidth={false}
                                                          className="MuiInputBase-input MuiOutlinedInput-input"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "filled": "MuiSelect-filled",
                                                              "icon": "MuiSelect-icon",
                                                              "iconFilled": "MuiSelect-iconFilled",
                                                              "iconOpen": "MuiSelect-iconOpen",
                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                              "nativeInput": "MuiSelect-nativeInput",
                                                              "outlined": "MuiSelect-outlined",
                                                              "root": "MuiSelect-root",
                                                              "select": "MuiSelect-select",
                                                              "selectMenu": "MuiSelect-selectMenu",
                                                            }
                                                          }
                                                          disabled={false}
                                                          displayEmpty={false}
                                                          inputRef={[Function]}
                                                          labelId="demo-simple-select-outlined-label"
                                                          multiple={false}
                                                          name="buildingName"
                                                          onAnimationStart={[Function]}
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          required={false}
                                                          value=" "
                                                          variant="outlined"
                                                        >
                                                          <div
                                                            aria-haspopup="listbox"
                                                            aria-labelledby="demo-simple-select-outlined-label demo-simple-select-outlined"
                                                            className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                            id="demo-simple-select-outlined"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                          >
                                                            Building Name
                                                          </div>
                                                          <input
                                                            aria-hidden={true}
                                                            className="MuiSelect-nativeInput"
                                                            name="buildingName"
                                                            onAnimationStart={[Function]}
                                                            onChange={[Function]}
                                                            required={false}
                                                            tabIndex={-1}
                                                            value=" "
                                                          />
                                                          <ForwardRef(ArrowDropDownIcon)
                                                            className="MuiSelect-icon MuiSelect-iconOutlined"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              className="MuiSelect-icon MuiSelect-iconOutlined"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                className="MuiSelect-icon MuiSelect-iconOutlined"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconOutlined"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M7 10l5 5 5-5z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(ArrowDropDownIcon)>
                                                          <WithStyles(ForwardRef(Menu))
                                                            MenuListProps={
                                                              Object {
                                                                "aria-labelledby": "demo-simple-select-outlined-label",
                                                                "disableListWrap": true,
                                                                "role": "listbox",
                                                              }
                                                            }
                                                            PaperProps={
                                                              Object {
                                                                "style": Object {
                                                                  "minWidth": undefined,
                                                                },
                                                              }
                                                            }
                                                            anchorEl={
                                                              <div
                                                                aria-haspopup="listbox"
                                                                aria-labelledby="demo-simple-select-outlined-label demo-simple-select-outlined"
                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                id="demo-simple-select-outlined"
                                                                role="button"
                                                                tabindex="0"
                                                              >
                                                                Building Name
                                                              </div>
                                                            }
                                                            id="menu-buildingName"
                                                            onClose={[Function]}
                                                            open={false}
                                                          >
                                                            <ForwardRef(Menu)
                                                              MenuListProps={
                                                                Object {
                                                                  "aria-labelledby": "demo-simple-select-outlined-label",
                                                                  "disableListWrap": true,
                                                                  "role": "listbox",
                                                                }
                                                              }
                                                              PaperProps={
                                                                Object {
                                                                  "style": Object {
                                                                    "minWidth": undefined,
                                                                  },
                                                                }
                                                              }
                                                              anchorEl={
                                                                <div
                                                                  aria-haspopup="listbox"
                                                                  aria-labelledby="demo-simple-select-outlined-label demo-simple-select-outlined"
                                                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                  id="demo-simple-select-outlined"
                                                                  role="button"
                                                                  tabindex="0"
                                                                >
                                                                  Building Name
                                                                </div>
                                                              }
                                                              classes={
                                                                Object {
                                                                  "list": "MuiMenu-list",
                                                                  "paper": "MuiMenu-paper",
                                                                }
                                                              }
                                                              id="menu-buildingName"
                                                              onClose={[Function]}
                                                              open={false}
                                                            >
                                                              <WithStyles(ForwardRef(Popover))
                                                                PaperProps={
                                                                  Object {
                                                                    "classes": Object {
                                                                      "root": "MuiMenu-paper",
                                                                    },
                                                                    "style": Object {
                                                                      "minWidth": undefined,
                                                                    },
                                                                  }
                                                                }
                                                                TransitionProps={
                                                                  Object {
                                                                    "onEntering": [Function],
                                                                  }
                                                                }
                                                                anchorEl={
                                                                  <div
                                                                    aria-haspopup="listbox"
                                                                    aria-labelledby="demo-simple-select-outlined-label demo-simple-select-outlined"
                                                                    class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                    id="demo-simple-select-outlined"
                                                                    role="button"
                                                                    tabindex="0"
                                                                  >
                                                                    Building Name
                                                                  </div>
                                                                }
                                                                anchorOrigin={
                                                                  Object {
                                                                    "horizontal": "left",
                                                                    "vertical": "top",
                                                                  }
                                                                }
                                                                getContentAnchorEl={[Function]}
                                                                id="menu-buildingName"
                                                                onClose={[Function]}
                                                                open={false}
                                                                transformOrigin={
                                                                  Object {
                                                                    "horizontal": "left",
                                                                    "vertical": "top",
                                                                  }
                                                                }
                                                                transitionDuration="auto"
                                                              >
                                                                <ForwardRef(Popover)
                                                                  PaperProps={
                                                                    Object {
                                                                      "classes": Object {
                                                                        "root": "MuiMenu-paper",
                                                                      },
                                                                      "style": Object {
                                                                        "minWidth": undefined,
                                                                      },
                                                                    }
                                                                  }
                                                                  TransitionProps={
                                                                    Object {
                                                                      "onEntering": [Function],
                                                                    }
                                                                  }
                                                                  anchorEl={
                                                                    <div
                                                                      aria-haspopup="listbox"
                                                                      aria-labelledby="demo-simple-select-outlined-label demo-simple-select-outlined"
                                                                      class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                      id="demo-simple-select-outlined"
                                                                      role="button"
                                                                      tabindex="0"
                                                                    >
                                                                      Building Name
                                                                    </div>
                                                                  }
                                                                  anchorOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  classes={
                                                                    Object {
                                                                      "paper": "MuiPopover-paper",
                                                                      "root": "MuiPopover-root",
                                                                    }
                                                                  }
                                                                  getContentAnchorEl={[Function]}
                                                                  id="menu-buildingName"
                                                                  onClose={[Function]}
                                                                  open={false}
                                                                  transformOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  transitionDuration="auto"
                                                                >
                                                                  <ForwardRef(Modal)
                                                                    BackdropProps={
                                                                      Object {
                                                                        "invisible": true,
                                                                      }
                                                                    }
                                                                    className="MuiPopover-root"
                                                                    container={<body />}
                                                                    id="menu-buildingName"
                                                                    onClose={[Function]}
                                                                    open={false}
                                                                  />
                                                                </ForwardRef(Popover)>
                                                              </WithStyles(ForwardRef(Popover))>
                                                            </ForwardRef(Menu)>
                                                          </WithStyles(ForwardRef(Menu))>
                                                        </ForwardRef(SelectInput)>
                                                        <WithStyles(ForwardRef(NotchedOutline))
                                                          className="MuiOutlinedInput-notchedOutline"
                                                          labelWidth={0}
                                                          notched={true}
                                                        >
                                                          <ForwardRef(NotchedOutline)
                                                            className="MuiOutlinedInput-notchedOutline"
                                                            classes={
                                                              Object {
                                                                "legend": "PrivateNotchedOutline-legend-9",
                                                                "legendLabelled": "PrivateNotchedOutline-legendLabelled-10",
                                                                "legendNotched": "PrivateNotchedOutline-legendNotched-11",
                                                                "root": "PrivateNotchedOutline-root-8",
                                                              }
                                                            }
                                                            labelWidth={0}
                                                            notched={true}
                                                          >
                                                            <fieldset
                                                              aria-hidden={true}
                                                              className="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                                              style={
                                                                Object {
                                                                  "paddingLeft": 8,
                                                                }
                                                              }
                                                            >
                                                              <legend
                                                                className="PrivateNotchedOutline-legend-9"
                                                                style={
                                                                  Object {
                                                                    "width": 0.01,
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  dangerouslySetInnerHTML={
                                                                    Object {
                                                                      "__html": "&#8203;",
                                                                    }
                                                                  }
                                                                />
                                                              </legend>
                                                            </fieldset>
                                                          </ForwardRef(NotchedOutline)>
                                                        </WithStyles(ForwardRef(NotchedOutline))>
                                                      </div>
                                                    </ForwardRef(InputBase)>
                                                  </WithStyles(ForwardRef(InputBase))>
                                                </ForwardRef(OutlinedInput)>
                                              </WithStyles(ForwardRef(OutlinedInput))>
                                            </ForwardRef(Select)>
                                          </WithStyles(ForwardRef(Select))>
                                          <FormikConnect(ErrorMessageImpl)
                                            className="text-error"
                                            component="Typography"
                                            name="buildingName"
                                          >
                                            <ErrorMessageImpl
                                              className="text-error"
                                              component="Typography"
                                              formik={
                                                Object {
                                                  "dirty": false,
                                                  "errors": Object {},
                                                  "getFieldHelpers": [Function],
                                                  "getFieldMeta": [Function],
                                                  "getFieldProps": [Function],
                                                  "handleBlur": [Function],
                                                  "handleChange": [Function],
                                                  "handleReset": [Function],
                                                  "handleSubmit": [Function],
                                                  "initialErrors": Object {},
                                                  "initialStatus": undefined,
                                                  "initialTouched": Object {},
                                                  "initialValues": Object {
                                                    "areaReserve": " ",
                                                    "buildingName": " ",
                                                    "date": "Invalid date",
                                                    "id": "",
                                                    "timeFrom": "",
                                                    "timeTo": "",
                                                  },
                                                  "isSubmitting": false,
                                                  "isValid": true,
                                                  "isValidating": true,
                                                  "registerField": [Function],
                                                  "resetForm": [Function],
                                                  "setErrors": [Function],
                                                  "setFieldError": [Function],
                                                  "setFieldTouched": [Function],
                                                  "setFieldValue": [Function],
                                                  "setFormikState": [Function],
                                                  "setStatus": [Function],
                                                  "setSubmitting": [Function],
                                                  "setTouched": [Function],
                                                  "setValues": [Function],
                                                  "status": undefined,
                                                  "submitCount": 0,
                                                  "submitForm": [Function],
                                                  "touched": Object {},
                                                  "unregisterField": [Function],
                                                  "validateField": [Function],
                                                  "validateForm": [Function],
                                                  "validateOnBlur": true,
                                                  "validateOnChange": true,
                                                  "validateOnMount": true,
                                                  "values": Object {
                                                    "areaReserve": " ",
                                                    "buildingName": " ",
                                                    "date": "Invalid date",
                                                    "id": "",
                                                    "timeFrom": "",
                                                    "timeTo": "",
                                                  },
                                                }
                                              }
                                              name="buildingName"
                                            />
                                          </FormikConnect(ErrorMessageImpl)>
                                        </div>
                                      </ForwardRef(FormControl)>
                                    </WithStyles(ForwardRef(FormControl))>
                                  </div>
                                </Styled(MuiBox)>
                                <Styled(MuiBox)
                                  className="formGroup customSelect"
                                >
                                  <div
                                    className="MuiBox-root MuiBox-root-12 formGroup customSelect"
                                  >
                                    <WithStyles(ForwardRef(FormControl))
                                      variant="outlined"
                                    >
                                      <ForwardRef(FormControl)
                                        classes={
                                          Object {
                                            "fullWidth": "MuiFormControl-fullWidth",
                                            "marginDense": "MuiFormControl-marginDense",
                                            "marginNormal": "MuiFormControl-marginNormal",
                                            "root": "MuiFormControl-root",
                                          }
                                        }
                                        variant="outlined"
                                      >
                                        <div
                                          className="MuiFormControl-root"
                                        >
                                          <span
                                            className="frmLeftIcons"
                                          >
                                            <img
                                              alt="House Icon"
                                              className="frm-icons"
                                              src={
                                                Object {
                                                  "testUri": "../../../packages/blocks/RequestManagement/assets/house-icon.svg",
                                                }
                                              }
                                            />
                                          </span>
                                          <WithStyles(ForwardRef(Select))
                                            id="demo-simple-select-outlined"
                                            labelId="demo-simple-select-outlined-label"
                                            name="areaReserve"
                                            onChange={[Function]}
                                            style={
                                              Object {
                                                "paddingLeft": 50,
                                              }
                                            }
                                            value=" "
                                          >
                                            <ForwardRef(Select)
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "filled": "MuiSelect-filled",
                                                  "icon": "MuiSelect-icon",
                                                  "iconFilled": "MuiSelect-iconFilled",
                                                  "iconOpen": "MuiSelect-iconOpen",
                                                  "iconOutlined": "MuiSelect-iconOutlined",
                                                  "nativeInput": "MuiSelect-nativeInput",
                                                  "outlined": "MuiSelect-outlined",
                                                  "root": "MuiSelect-root",
                                                  "select": "MuiSelect-select",
                                                  "selectMenu": "MuiSelect-selectMenu",
                                                }
                                              }
                                              id="demo-simple-select-outlined"
                                              labelId="demo-simple-select-outlined-label"
                                              name="areaReserve"
                                              onChange={[Function]}
                                              style={
                                                Object {
                                                  "paddingLeft": 50,
                                                }
                                              }
                                              value=" "
                                            >
                                              <WithStyles(ForwardRef(OutlinedInput))
                                                inputComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "IconComponent": [Function],
                                                      "MenuProps": [Function],
                                                      "SelectDisplayProps": [Function],
                                                      "aria-label": [Function],
                                                      "autoFocus": [Function],
                                                      "autoWidth": [Function],
                                                      "children": [Function],
                                                      "className": [Function],
                                                      "classes": [Function],
                                                      "defaultValue": [Function],
                                                      "disabled": [Function],
                                                      "displayEmpty": [Function],
                                                      "inputRef": [Function],
                                                      "labelId": [Function],
                                                      "multiple": [Function],
                                                      "name": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onClose": [Function],
                                                      "onFocus": [Function],
                                                      "onOpen": [Function],
                                                      "open": [Function],
                                                      "readOnly": [Function],
                                                      "renderValue": [Function],
                                                      "tabIndex": [Function],
                                                      "type": [Function],
                                                      "value": [Function],
                                                      "variant": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                inputProps={
                                                  Object {
                                                    "IconComponent": Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    },
                                                    "MenuProps": undefined,
                                                    "SelectDisplayProps": Object {
                                                      "id": "demo-simple-select-outlined",
                                                    },
                                                    "autoWidth": false,
                                                    "children": Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        disabled={true}
                                                        value=" "
                                                      >
                                                        Area to Reserve
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      undefined,
                                                    ],
                                                    "classes": Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    },
                                                    "displayEmpty": false,
                                                    "labelId": "demo-simple-select-outlined-label",
                                                    "multiple": false,
                                                    "onClose": undefined,
                                                    "onOpen": undefined,
                                                    "open": undefined,
                                                    "renderValue": undefined,
                                                    "type": undefined,
                                                    "variant": "outlined",
                                                  }
                                                }
                                                labelWidth={0}
                                                name="areaReserve"
                                                onChange={[Function]}
                                                style={
                                                  Object {
                                                    "paddingLeft": 50,
                                                  }
                                                }
                                                value=" "
                                              >
                                                <ForwardRef(OutlinedInput)
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                      "adornedStart": "MuiOutlinedInput-adornedStart",
                                                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "error": "Mui-error",
                                                      "focused": "Mui-focused",
                                                      "input": "MuiOutlinedInput-input",
                                                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                      "marginDense": "MuiOutlinedInput-marginDense",
                                                      "multiline": "MuiOutlinedInput-multiline",
                                                      "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                      "root": "MuiOutlinedInput-root",
                                                    }
                                                  }
                                                  inputComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "propTypes": Object {
                                                        "IconComponent": [Function],
                                                        "MenuProps": [Function],
                                                        "SelectDisplayProps": [Function],
                                                        "aria-label": [Function],
                                                        "autoFocus": [Function],
                                                        "autoWidth": [Function],
                                                        "children": [Function],
                                                        "className": [Function],
                                                        "classes": [Function],
                                                        "defaultValue": [Function],
                                                        "disabled": [Function],
                                                        "displayEmpty": [Function],
                                                        "inputRef": [Function],
                                                        "labelId": [Function],
                                                        "multiple": [Function],
                                                        "name": [Function],
                                                        "onBlur": [Function],
                                                        "onChange": [Function],
                                                        "onClose": [Function],
                                                        "onFocus": [Function],
                                                        "onOpen": [Function],
                                                        "open": [Function],
                                                        "readOnly": [Function],
                                                        "renderValue": [Function],
                                                        "tabIndex": [Function],
                                                        "type": [Function],
                                                        "value": [Function],
                                                        "variant": [Function],
                                                      },
                                                      "render": [Function],
                                                    }
                                                  }
                                                  inputProps={
                                                    Object {
                                                      "IconComponent": Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      },
                                                      "MenuProps": undefined,
                                                      "SelectDisplayProps": Object {
                                                        "id": "demo-simple-select-outlined",
                                                      },
                                                      "autoWidth": false,
                                                      "children": Array [
                                                        <WithStyles(ForwardRef(MenuItem))
                                                          disabled={true}
                                                          value=" "
                                                        >
                                                          Area to Reserve
                                                        </WithStyles(ForwardRef(MenuItem))>,
                                                        undefined,
                                                      ],
                                                      "classes": Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      },
                                                      "displayEmpty": false,
                                                      "labelId": "demo-simple-select-outlined-label",
                                                      "multiple": false,
                                                      "onClose": undefined,
                                                      "onOpen": undefined,
                                                      "open": undefined,
                                                      "renderValue": undefined,
                                                      "type": undefined,
                                                      "variant": "outlined",
                                                    }
                                                  }
                                                  labelWidth={0}
                                                  name="areaReserve"
                                                  onChange={[Function]}
                                                  style={
                                                    Object {
                                                      "paddingLeft": 50,
                                                    }
                                                  }
                                                  value=" "
                                                >
                                                  <WithStyles(ForwardRef(InputBase))
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                        "adornedStart": "MuiOutlinedInput-adornedStart",
                                                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "error": "Mui-error",
                                                        "focused": "Mui-focused",
                                                        "input": "MuiOutlinedInput-input",
                                                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                        "marginDense": "MuiOutlinedInput-marginDense",
                                                        "multiline": "MuiOutlinedInput-multiline",
                                                        "notchedOutline": null,
                                                        "root": "MuiOutlinedInput-root",
                                                      }
                                                    }
                                                    fullWidth={false}
                                                    inputComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "propTypes": Object {
                                                          "IconComponent": [Function],
                                                          "MenuProps": [Function],
                                                          "SelectDisplayProps": [Function],
                                                          "aria-label": [Function],
                                                          "autoFocus": [Function],
                                                          "autoWidth": [Function],
                                                          "children": [Function],
                                                          "className": [Function],
                                                          "classes": [Function],
                                                          "defaultValue": [Function],
                                                          "disabled": [Function],
                                                          "displayEmpty": [Function],
                                                          "inputRef": [Function],
                                                          "labelId": [Function],
                                                          "multiple": [Function],
                                                          "name": [Function],
                                                          "onBlur": [Function],
                                                          "onChange": [Function],
                                                          "onClose": [Function],
                                                          "onFocus": [Function],
                                                          "onOpen": [Function],
                                                          "open": [Function],
                                                          "readOnly": [Function],
                                                          "renderValue": [Function],
                                                          "tabIndex": [Function],
                                                          "type": [Function],
                                                          "value": [Function],
                                                          "variant": [Function],
                                                        },
                                                        "render": [Function],
                                                      }
                                                    }
                                                    inputProps={
                                                      Object {
                                                        "IconComponent": Object {
                                                          "$$typeof": Symbol(react.memo),
                                                          "compare": null,
                                                          "type": Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "render": [Function],
                                                          },
                                                        },
                                                        "MenuProps": undefined,
                                                        "SelectDisplayProps": Object {
                                                          "id": "demo-simple-select-outlined",
                                                        },
                                                        "autoWidth": false,
                                                        "children": Array [
                                                          <WithStyles(ForwardRef(MenuItem))
                                                            disabled={true}
                                                            value=" "
                                                          >
                                                            Area to Reserve
                                                          </WithStyles(ForwardRef(MenuItem))>,
                                                          undefined,
                                                        ],
                                                        "classes": Object {
                                                          "disabled": "Mui-disabled",
                                                          "filled": "MuiSelect-filled",
                                                          "icon": "MuiSelect-icon",
                                                          "iconFilled": "MuiSelect-iconFilled",
                                                          "iconOpen": "MuiSelect-iconOpen",
                                                          "iconOutlined": "MuiSelect-iconOutlined",
                                                          "nativeInput": "MuiSelect-nativeInput",
                                                          "outlined": "MuiSelect-outlined",
                                                          "root": "MuiSelect-root",
                                                          "select": "MuiSelect-select",
                                                          "selectMenu": "MuiSelect-selectMenu",
                                                        },
                                                        "displayEmpty": false,
                                                        "labelId": "demo-simple-select-outlined-label",
                                                        "multiple": false,
                                                        "onClose": undefined,
                                                        "onOpen": undefined,
                                                        "open": undefined,
                                                        "renderValue": undefined,
                                                        "type": undefined,
                                                        "variant": "outlined",
                                                      }
                                                    }
                                                    multiline={false}
                                                    name="areaReserve"
                                                    onChange={[Function]}
                                                    renderSuffix={[Function]}
                                                    style={
                                                      Object {
                                                        "paddingLeft": 50,
                                                      }
                                                    }
                                                    type="text"
                                                    value=" "
                                                  >
                                                    <ForwardRef(InputBase)
                                                      classes={
                                                        Object {
                                                          "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                          "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                          "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                          "disabled": "Mui-disabled Mui-disabled",
                                                          "error": "Mui-error Mui-error",
                                                          "focused": "Mui-focused Mui-focused",
                                                          "formControl": "MuiInputBase-formControl",
                                                          "fullWidth": "MuiInputBase-fullWidth",
                                                          "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                          "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                          "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                          "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                          "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                        }
                                                      }
                                                      fullWidth={false}
                                                      inputComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "propTypes": Object {
                                                            "IconComponent": [Function],
                                                            "MenuProps": [Function],
                                                            "SelectDisplayProps": [Function],
                                                            "aria-label": [Function],
                                                            "autoFocus": [Function],
                                                            "autoWidth": [Function],
                                                            "children": [Function],
                                                            "className": [Function],
                                                            "classes": [Function],
                                                            "defaultValue": [Function],
                                                            "disabled": [Function],
                                                            "displayEmpty": [Function],
                                                            "inputRef": [Function],
                                                            "labelId": [Function],
                                                            "multiple": [Function],
                                                            "name": [Function],
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onClose": [Function],
                                                            "onFocus": [Function],
                                                            "onOpen": [Function],
                                                            "open": [Function],
                                                            "readOnly": [Function],
                                                            "renderValue": [Function],
                                                            "tabIndex": [Function],
                                                            "type": [Function],
                                                            "value": [Function],
                                                            "variant": [Function],
                                                          },
                                                          "render": [Function],
                                                        }
                                                      }
                                                      inputProps={
                                                        Object {
                                                          "IconComponent": Object {
                                                            "$$typeof": Symbol(react.memo),
                                                            "compare": null,
                                                            "type": Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "render": [Function],
                                                            },
                                                          },
                                                          "MenuProps": undefined,
                                                          "SelectDisplayProps": Object {
                                                            "id": "demo-simple-select-outlined",
                                                          },
                                                          "autoWidth": false,
                                                          "children": Array [
                                                            <WithStyles(ForwardRef(MenuItem))
                                                              disabled={true}
                                                              value=" "
                                                            >
                                                              Area to Reserve
                                                            </WithStyles(ForwardRef(MenuItem))>,
                                                            undefined,
                                                          ],
                                                          "classes": Object {
                                                            "disabled": "Mui-disabled",
                                                            "filled": "MuiSelect-filled",
                                                            "icon": "MuiSelect-icon",
                                                            "iconFilled": "MuiSelect-iconFilled",
                                                            "iconOpen": "MuiSelect-iconOpen",
                                                            "iconOutlined": "MuiSelect-iconOutlined",
                                                            "nativeInput": "MuiSelect-nativeInput",
                                                            "outlined": "MuiSelect-outlined",
                                                            "root": "MuiSelect-root",
                                                            "select": "MuiSelect-select",
                                                            "selectMenu": "MuiSelect-selectMenu",
                                                          },
                                                          "displayEmpty": false,
                                                          "labelId": "demo-simple-select-outlined-label",
                                                          "multiple": false,
                                                          "onClose": undefined,
                                                          "onOpen": undefined,
                                                          "open": undefined,
                                                          "renderValue": undefined,
                                                          "type": undefined,
                                                          "variant": "outlined",
                                                        }
                                                      }
                                                      multiline={false}
                                                      name="areaReserve"
                                                      onChange={[Function]}
                                                      renderSuffix={[Function]}
                                                      style={
                                                        Object {
                                                          "paddingLeft": 50,
                                                        }
                                                      }
                                                      type="text"
                                                      value=" "
                                                    >
                                                      <div
                                                        className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "paddingLeft": 50,
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(SelectInput)
                                                          IconComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.memo),
                                                              "compare": null,
                                                              "type": Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "render": [Function],
                                                              },
                                                            }
                                                          }
                                                          SelectDisplayProps={
                                                            Object {
                                                              "id": "demo-simple-select-outlined",
                                                            }
                                                          }
                                                          aria-invalid={false}
                                                          autoWidth={false}
                                                          className="MuiInputBase-input MuiOutlinedInput-input"
                                                          classes={
                                                            Object {
                                                              "disabled": "Mui-disabled",
                                                              "filled": "MuiSelect-filled",
                                                              "icon": "MuiSelect-icon",
                                                              "iconFilled": "MuiSelect-iconFilled",
                                                              "iconOpen": "MuiSelect-iconOpen",
                                                              "iconOutlined": "MuiSelect-iconOutlined",
                                                              "nativeInput": "MuiSelect-nativeInput",
                                                              "outlined": "MuiSelect-outlined",
                                                              "root": "MuiSelect-root",
                                                              "select": "MuiSelect-select",
                                                              "selectMenu": "MuiSelect-selectMenu",
                                                            }
                                                          }
                                                          disabled={false}
                                                          displayEmpty={false}
                                                          inputRef={[Function]}
                                                          labelId="demo-simple-select-outlined-label"
                                                          multiple={false}
                                                          name="areaReserve"
                                                          onAnimationStart={[Function]}
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          required={false}
                                                          value=" "
                                                          variant="outlined"
                                                        >
                                                          <div
                                                            aria-haspopup="listbox"
                                                            aria-labelledby="demo-simple-select-outlined-label demo-simple-select-outlined"
                                                            className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                            id="demo-simple-select-outlined"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            role="button"
                                                            tabIndex={0}
                                                          >
                                                            Area to Reserve
                                                          </div>
                                                          <input
                                                            aria-hidden={true}
                                                            className="MuiSelect-nativeInput"
                                                            name="areaReserve"
                                                            onAnimationStart={[Function]}
                                                            onChange={[Function]}
                                                            required={false}
                                                            tabIndex={-1}
                                                            value=" "
                                                          />
                                                          <ForwardRef(ArrowDropDownIcon)
                                                            className="MuiSelect-icon MuiSelect-iconOutlined"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              className="MuiSelect-icon MuiSelect-iconOutlined"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                className="MuiSelect-icon MuiSelect-iconOutlined"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconOutlined"
                                                                  focusable="false"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M7 10l5 5 5-5z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(ArrowDropDownIcon)>
                                                          <WithStyles(ForwardRef(Menu))
                                                            MenuListProps={
                                                              Object {
                                                                "aria-labelledby": "demo-simple-select-outlined-label",
                                                                "disableListWrap": true,
                                                                "role": "listbox",
                                                              }
                                                            }
                                                            PaperProps={
                                                              Object {
                                                                "style": Object {
                                                                  "minWidth": undefined,
                                                                },
                                                              }
                                                            }
                                                            anchorEl={
                                                              <div
                                                                aria-haspopup="listbox"
                                                                aria-labelledby="demo-simple-select-outlined-label demo-simple-select-outlined"
                                                                class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                id="demo-simple-select-outlined"
                                                                role="button"
                                                                tabindex="0"
                                                              >
                                                                Area to Reserve
                                                              </div>
                                                            }
                                                            id="menu-areaReserve"
                                                            onClose={[Function]}
                                                            open={false}
                                                          >
                                                            <ForwardRef(Menu)
                                                              MenuListProps={
                                                                Object {
                                                                  "aria-labelledby": "demo-simple-select-outlined-label",
                                                                  "disableListWrap": true,
                                                                  "role": "listbox",
                                                                }
                                                              }
                                                              PaperProps={
                                                                Object {
                                                                  "style": Object {
                                                                    "minWidth": undefined,
                                                                  },
                                                                }
                                                              }
                                                              anchorEl={
                                                                <div
                                                                  aria-haspopup="listbox"
                                                                  aria-labelledby="demo-simple-select-outlined-label demo-simple-select-outlined"
                                                                  class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                  id="demo-simple-select-outlined"
                                                                  role="button"
                                                                  tabindex="0"
                                                                >
                                                                  Area to Reserve
                                                                </div>
                                                              }
                                                              classes={
                                                                Object {
                                                                  "list": "MuiMenu-list",
                                                                  "paper": "MuiMenu-paper",
                                                                }
                                                              }
                                                              id="menu-areaReserve"
                                                              onClose={[Function]}
                                                              open={false}
                                                            >
                                                              <WithStyles(ForwardRef(Popover))
                                                                PaperProps={
                                                                  Object {
                                                                    "classes": Object {
                                                                      "root": "MuiMenu-paper",
                                                                    },
                                                                    "style": Object {
                                                                      "minWidth": undefined,
                                                                    },
                                                                  }
                                                                }
                                                                TransitionProps={
                                                                  Object {
                                                                    "onEntering": [Function],
                                                                  }
                                                                }
                                                                anchorEl={
                                                                  <div
                                                                    aria-haspopup="listbox"
                                                                    aria-labelledby="demo-simple-select-outlined-label demo-simple-select-outlined"
                                                                    class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                    id="demo-simple-select-outlined"
                                                                    role="button"
                                                                    tabindex="0"
                                                                  >
                                                                    Area to Reserve
                                                                  </div>
                                                                }
                                                                anchorOrigin={
                                                                  Object {
                                                                    "horizontal": "left",
                                                                    "vertical": "top",
                                                                  }
                                                                }
                                                                getContentAnchorEl={[Function]}
                                                                id="menu-areaReserve"
                                                                onClose={[Function]}
                                                                open={false}
                                                                transformOrigin={
                                                                  Object {
                                                                    "horizontal": "left",
                                                                    "vertical": "top",
                                                                  }
                                                                }
                                                                transitionDuration="auto"
                                                              >
                                                                <ForwardRef(Popover)
                                                                  PaperProps={
                                                                    Object {
                                                                      "classes": Object {
                                                                        "root": "MuiMenu-paper",
                                                                      },
                                                                      "style": Object {
                                                                        "minWidth": undefined,
                                                                      },
                                                                    }
                                                                  }
                                                                  TransitionProps={
                                                                    Object {
                                                                      "onEntering": [Function],
                                                                    }
                                                                  }
                                                                  anchorEl={
                                                                    <div
                                                                      aria-haspopup="listbox"
                                                                      aria-labelledby="demo-simple-select-outlined-label demo-simple-select-outlined"
                                                                      class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                                      id="demo-simple-select-outlined"
                                                                      role="button"
                                                                      tabindex="0"
                                                                    >
                                                                      Area to Reserve
                                                                    </div>
                                                                  }
                                                                  anchorOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  classes={
                                                                    Object {
                                                                      "paper": "MuiPopover-paper",
                                                                      "root": "MuiPopover-root",
                                                                    }
                                                                  }
                                                                  getContentAnchorEl={[Function]}
                                                                  id="menu-areaReserve"
                                                                  onClose={[Function]}
                                                                  open={false}
                                                                  transformOrigin={
                                                                    Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                                  }
                                                                  transitionDuration="auto"
                                                                >
                                                                  <ForwardRef(Modal)
                                                                    BackdropProps={
                                                                      Object {
                                                                        "invisible": true,
                                                                      }
                                                                    }
                                                                    className="MuiPopover-root"
                                                                    container={<body />}
                                                                    id="menu-areaReserve"
                                                                    onClose={[Function]}
                                                                    open={false}
                                                                  />
                                                                </ForwardRef(Popover)>
                                                              </WithStyles(ForwardRef(Popover))>
                                                            </ForwardRef(Menu)>
                                                          </WithStyles(ForwardRef(Menu))>
                                                        </ForwardRef(SelectInput)>
                                                        <WithStyles(ForwardRef(NotchedOutline))
                                                          className="MuiOutlinedInput-notchedOutline"
                                                          labelWidth={0}
                                                          notched={true}
                                                        >
                                                          <ForwardRef(NotchedOutline)
                                                            className="MuiOutlinedInput-notchedOutline"
                                                            classes={
                                                              Object {
                                                                "legend": "PrivateNotchedOutline-legend-9",
                                                                "legendLabelled": "PrivateNotchedOutline-legendLabelled-10",
                                                                "legendNotched": "PrivateNotchedOutline-legendNotched-11",
                                                                "root": "PrivateNotchedOutline-root-8",
                                                              }
                                                            }
                                                            labelWidth={0}
                                                            notched={true}
                                                          >
                                                            <fieldset
                                                              aria-hidden={true}
                                                              className="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                                              style={
                                                                Object {
                                                                  "paddingLeft": 8,
                                                                }
                                                              }
                                                            >
                                                              <legend
                                                                className="PrivateNotchedOutline-legend-9"
                                                                style={
                                                                  Object {
                                                                    "width": 0.01,
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  dangerouslySetInnerHTML={
                                                                    Object {
                                                                      "__html": "&#8203;",
                                                                    }
                                                                  }
                                                                />
                                                              </legend>
                                                            </fieldset>
                                                          </ForwardRef(NotchedOutline)>
                                                        </WithStyles(ForwardRef(NotchedOutline))>
                                                      </div>
                                                    </ForwardRef(InputBase)>
                                                  </WithStyles(ForwardRef(InputBase))>
                                                </ForwardRef(OutlinedInput)>
                                              </WithStyles(ForwardRef(OutlinedInput))>
                                            </ForwardRef(Select)>
                                          </WithStyles(ForwardRef(Select))>
                                          <FormikConnect(ErrorMessageImpl)
                                            className="text-error"
                                            component="Typography"
                                            name="areaReserve"
                                          >
                                            <ErrorMessageImpl
                                              className="text-error"
                                              component="Typography"
                                              formik={
                                                Object {
                                                  "dirty": false,
                                                  "errors": Object {},
                                                  "getFieldHelpers": [Function],
                                                  "getFieldMeta": [Function],
                                                  "getFieldProps": [Function],
                                                  "handleBlur": [Function],
                                                  "handleChange": [Function],
                                                  "handleReset": [Function],
                                                  "handleSubmit": [Function],
                                                  "initialErrors": Object {},
                                                  "initialStatus": undefined,
                                                  "initialTouched": Object {},
                                                  "initialValues": Object {
                                                    "areaReserve": " ",
                                                    "buildingName": " ",
                                                    "date": "Invalid date",
                                                    "id": "",
                                                    "timeFrom": "",
                                                    "timeTo": "",
                                                  },
                                                  "isSubmitting": false,
                                                  "isValid": true,
                                                  "isValidating": true,
                                                  "registerField": [Function],
                                                  "resetForm": [Function],
                                                  "setErrors": [Function],
                                                  "setFieldError": [Function],
                                                  "setFieldTouched": [Function],
                                                  "setFieldValue": [Function],
                                                  "setFormikState": [Function],
                                                  "setStatus": [Function],
                                                  "setSubmitting": [Function],
                                                  "setTouched": [Function],
                                                  "setValues": [Function],
                                                  "status": undefined,
                                                  "submitCount": 0,
                                                  "submitForm": [Function],
                                                  "touched": Object {},
                                                  "unregisterField": [Function],
                                                  "validateField": [Function],
                                                  "validateForm": [Function],
                                                  "validateOnBlur": true,
                                                  "validateOnChange": true,
                                                  "validateOnMount": true,
                                                  "values": Object {
                                                    "areaReserve": " ",
                                                    "buildingName": " ",
                                                    "date": "Invalid date",
                                                    "id": "",
                                                    "timeFrom": "",
                                                    "timeTo": "",
                                                  },
                                                }
                                              }
                                              name="areaReserve"
                                            />
                                          </FormikConnect(ErrorMessageImpl)>
                                        </div>
                                      </ForwardRef(FormControl)>
                                    </WithStyles(ForwardRef(FormControl))>
                                  </div>
                                </Styled(MuiBox)>
                                <Styled(MuiBox)
                                  className="DateSection"
                                >
                                  <div
                                    className="MuiBox-root MuiBox-root-13 DateSection"
                                  >
                                    <WithStyles(ForwardRef(Grid))
                                      container={true}
                                    >
                                      <ForwardRef(Grid)
                                        classes={
                                          Object {
                                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                            "container": "MuiGrid-container",
                                            "direction-xs-column": "MuiGrid-direction-xs-column",
                                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                            "grid-lg-1": "MuiGrid-grid-lg-1",
                                            "grid-lg-10": "MuiGrid-grid-lg-10",
                                            "grid-lg-11": "MuiGrid-grid-lg-11",
                                            "grid-lg-12": "MuiGrid-grid-lg-12",
                                            "grid-lg-2": "MuiGrid-grid-lg-2",
                                            "grid-lg-3": "MuiGrid-grid-lg-3",
                                            "grid-lg-4": "MuiGrid-grid-lg-4",
                                            "grid-lg-5": "MuiGrid-grid-lg-5",
                                            "grid-lg-6": "MuiGrid-grid-lg-6",
                                            "grid-lg-7": "MuiGrid-grid-lg-7",
                                            "grid-lg-8": "MuiGrid-grid-lg-8",
                                            "grid-lg-9": "MuiGrid-grid-lg-9",
                                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                            "grid-lg-true": "MuiGrid-grid-lg-true",
                                            "grid-md-1": "MuiGrid-grid-md-1",
                                            "grid-md-10": "MuiGrid-grid-md-10",
                                            "grid-md-11": "MuiGrid-grid-md-11",
                                            "grid-md-12": "MuiGrid-grid-md-12",
                                            "grid-md-2": "MuiGrid-grid-md-2",
                                            "grid-md-3": "MuiGrid-grid-md-3",
                                            "grid-md-4": "MuiGrid-grid-md-4",
                                            "grid-md-5": "MuiGrid-grid-md-5",
                                            "grid-md-6": "MuiGrid-grid-md-6",
                                            "grid-md-7": "MuiGrid-grid-md-7",
                                            "grid-md-8": "MuiGrid-grid-md-8",
                                            "grid-md-9": "MuiGrid-grid-md-9",
                                            "grid-md-auto": "MuiGrid-grid-md-auto",
                                            "grid-md-true": "MuiGrid-grid-md-true",
                                            "grid-sm-1": "MuiGrid-grid-sm-1",
                                            "grid-sm-10": "MuiGrid-grid-sm-10",
                                            "grid-sm-11": "MuiGrid-grid-sm-11",
                                            "grid-sm-12": "MuiGrid-grid-sm-12",
                                            "grid-sm-2": "MuiGrid-grid-sm-2",
                                            "grid-sm-3": "MuiGrid-grid-sm-3",
                                            "grid-sm-4": "MuiGrid-grid-sm-4",
                                            "grid-sm-5": "MuiGrid-grid-sm-5",
                                            "grid-sm-6": "MuiGrid-grid-sm-6",
                                            "grid-sm-7": "MuiGrid-grid-sm-7",
                                            "grid-sm-8": "MuiGrid-grid-sm-8",
                                            "grid-sm-9": "MuiGrid-grid-sm-9",
                                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                            "grid-sm-true": "MuiGrid-grid-sm-true",
                                            "grid-xl-1": "MuiGrid-grid-xl-1",
                                            "grid-xl-10": "MuiGrid-grid-xl-10",
                                            "grid-xl-11": "MuiGrid-grid-xl-11",
                                            "grid-xl-12": "MuiGrid-grid-xl-12",
                                            "grid-xl-2": "MuiGrid-grid-xl-2",
                                            "grid-xl-3": "MuiGrid-grid-xl-3",
                                            "grid-xl-4": "MuiGrid-grid-xl-4",
                                            "grid-xl-5": "MuiGrid-grid-xl-5",
                                            "grid-xl-6": "MuiGrid-grid-xl-6",
                                            "grid-xl-7": "MuiGrid-grid-xl-7",
                                            "grid-xl-8": "MuiGrid-grid-xl-8",
                                            "grid-xl-9": "MuiGrid-grid-xl-9",
                                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                            "grid-xl-true": "MuiGrid-grid-xl-true",
                                            "grid-xs-1": "MuiGrid-grid-xs-1",
                                            "grid-xs-10": "MuiGrid-grid-xs-10",
                                            "grid-xs-11": "MuiGrid-grid-xs-11",
                                            "grid-xs-12": "MuiGrid-grid-xs-12",
                                            "grid-xs-2": "MuiGrid-grid-xs-2",
                                            "grid-xs-3": "MuiGrid-grid-xs-3",
                                            "grid-xs-4": "MuiGrid-grid-xs-4",
                                            "grid-xs-5": "MuiGrid-grid-xs-5",
                                            "grid-xs-6": "MuiGrid-grid-xs-6",
                                            "grid-xs-7": "MuiGrid-grid-xs-7",
                                            "grid-xs-8": "MuiGrid-grid-xs-8",
                                            "grid-xs-9": "MuiGrid-grid-xs-9",
                                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                            "grid-xs-true": "MuiGrid-grid-xs-true",
                                            "item": "MuiGrid-item",
                                            "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                            "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                            "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                            "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                            "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                            "root": "MuiGrid-root",
                                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                          }
                                        }
                                        container={true}
                                      >
                                        <div
                                          className="MuiGrid-root MuiGrid-container"
                                        >
                                          <WithStyles(ForwardRef(Grid))
                                            xs={12}
                                          >
                                            <ForwardRef(Grid)
                                              classes={
                                                Object {
                                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                  "container": "MuiGrid-container",
                                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                                  "grid-md-1": "MuiGrid-grid-md-1",
                                                  "grid-md-10": "MuiGrid-grid-md-10",
                                                  "grid-md-11": "MuiGrid-grid-md-11",
                                                  "grid-md-12": "MuiGrid-grid-md-12",
                                                  "grid-md-2": "MuiGrid-grid-md-2",
                                                  "grid-md-3": "MuiGrid-grid-md-3",
                                                  "grid-md-4": "MuiGrid-grid-md-4",
                                                  "grid-md-5": "MuiGrid-grid-md-5",
                                                  "grid-md-6": "MuiGrid-grid-md-6",
                                                  "grid-md-7": "MuiGrid-grid-md-7",
                                                  "grid-md-8": "MuiGrid-grid-md-8",
                                                  "grid-md-9": "MuiGrid-grid-md-9",
                                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                                  "grid-md-true": "MuiGrid-grid-md-true",
                                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                                  "item": "MuiGrid-item",
                                                  "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                                  "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                                  "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                                  "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                                  "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                                  "root": "MuiGrid-root",
                                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                }
                                              }
                                              xs={12}
                                            >
                                              <div
                                                className="MuiGrid-root MuiGrid-grid-xs-12"
                                              >
                                                <Styled(MuiBox)
                                                  className="formGroup classifiedFormGroup"
                                                >
                                                  <div
                                                    className="MuiBox-root MuiBox-root-14 formGroup classifiedFormGroup"
                                                  >
                                                    <WithStyles(ForwardRef(TextField))
                                                      InputProps={
                                                        Object {
                                                          "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                                            position="end"
                                                          />,
                                                          "max": "5000-05-31",
                                                          "startAdornment": <WithStyles(ForwardRef(InputAdornment))
                                                            position="start"
                                                          />,
                                                        }
                                                      }
                                                      format="DD/MM/YYYY"
                                                      fullWidth={true}
                                                      id="SurveyQuestion"
                                                      label="date"
                                                      name="date"
                                                      onChange={[Function]}
                                                      style={
                                                        Object {
                                                          "border": "1px solid #e9dede",
                                                          "borderRadius": "25px",
                                                          "width": "100%",
                                                        }
                                                      }
                                                      type="date"
                                                      value="Invalid date"
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(TextField)
                                                        InputProps={
                                                          Object {
                                                            "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                                              position="end"
                                                            />,
                                                            "max": "5000-05-31",
                                                            "startAdornment": <WithStyles(ForwardRef(InputAdornment))
                                                              position="start"
                                                            />,
                                                          }
                                                        }
                                                        classes={
                                                          Object {
                                                            "root": "MuiTextField-root",
                                                          }
                                                        }
                                                        format="DD/MM/YYYY"
                                                        fullWidth={true}
                                                        id="SurveyQuestion"
                                                        label="date"
                                                        name="date"
                                                        onChange={[Function]}
                                                        style={
                                                          Object {
                                                            "border": "1px solid #e9dede",
                                                            "borderRadius": "25px",
                                                            "width": "100%",
                                                          }
                                                        }
                                                        type="date"
                                                        value="Invalid date"
                                                        variant="outlined"
                                                      >
                                                        <WithStyles(ForwardRef(FormControl))
                                                          className="MuiTextField-root"
                                                          color="primary"
                                                          disabled={false}
                                                          error={false}
                                                          format="DD/MM/YYYY"
                                                          fullWidth={true}
                                                          required={false}
                                                          style={
                                                            Object {
                                                              "border": "1px solid #e9dede",
                                                              "borderRadius": "25px",
                                                              "width": "100%",
                                                            }
                                                          }
                                                          variant="outlined"
                                                        >
                                                          <ForwardRef(FormControl)
                                                            className="MuiTextField-root"
                                                            classes={
                                                              Object {
                                                                "fullWidth": "MuiFormControl-fullWidth",
                                                                "marginDense": "MuiFormControl-marginDense",
                                                                "marginNormal": "MuiFormControl-marginNormal",
                                                                "root": "MuiFormControl-root",
                                                              }
                                                            }
                                                            color="primary"
                                                            disabled={false}
                                                            error={false}
                                                            format="DD/MM/YYYY"
                                                            fullWidth={true}
                                                            required={false}
                                                            style={
                                                              Object {
                                                                "border": "1px solid #e9dede",
                                                                "borderRadius": "25px",
                                                                "width": "100%",
                                                              }
                                                            }
                                                            variant="outlined"
                                                          >
                                                            <div
                                                              className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                              format="DD/MM/YYYY"
                                                              style={
                                                                Object {
                                                                  "border": "1px solid #e9dede",
                                                                  "borderRadius": "25px",
                                                                  "width": "100%",
                                                                }
                                                              }
                                                            >
                                                              <WithStyles(ForwardRef(InputLabel))
                                                                htmlFor="SurveyQuestion"
                                                                id="SurveyQuestion-label"
                                                              >
                                                                <ForwardRef(InputLabel)
                                                                  classes={
                                                                    Object {
                                                                      "animated": "MuiInputLabel-animated",
                                                                      "asterisk": "MuiInputLabel-asterisk",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "filled": "MuiInputLabel-filled",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInputLabel-formControl",
                                                                      "marginDense": "MuiInputLabel-marginDense",
                                                                      "outlined": "MuiInputLabel-outlined",
                                                                      "required": "Mui-required",
                                                                      "root": "MuiInputLabel-root",
                                                                      "shrink": "MuiInputLabel-shrink",
                                                                    }
                                                                  }
                                                                  htmlFor="SurveyQuestion"
                                                                  id="SurveyQuestion-label"
                                                                >
                                                                  <WithStyles(ForwardRef(FormLabel))
                                                                    className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                    classes={
                                                                      Object {
                                                                        "asterisk": "MuiInputLabel-asterisk",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "required": "Mui-required",
                                                                      }
                                                                    }
                                                                    data-shrink={true}
                                                                    htmlFor="SurveyQuestion"
                                                                    id="SurveyQuestion-label"
                                                                  >
                                                                    <ForwardRef(FormLabel)
                                                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                      classes={
                                                                        Object {
                                                                          "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                          "colorSecondary": "MuiFormLabel-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "filled": "MuiFormLabel-filled",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "required": "Mui-required Mui-required",
                                                                          "root": "MuiFormLabel-root",
                                                                        }
                                                                      }
                                                                      data-shrink={true}
                                                                      htmlFor="SurveyQuestion"
                                                                      id="SurveyQuestion-label"
                                                                    >
                                                                      <label
                                                                        className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                                                        data-shrink={true}
                                                                        htmlFor="SurveyQuestion"
                                                                        id="SurveyQuestion-label"
                                                                      >
                                                                        date
                                                                      </label>
                                                                    </ForwardRef(FormLabel)>
                                                                  </WithStyles(ForwardRef(FormLabel))>
                                                                </ForwardRef(InputLabel)>
                                                              </WithStyles(ForwardRef(InputLabel))>
                                                              <WithStyles(ForwardRef(OutlinedInput))
                                                                autoFocus={false}
                                                                endAdornment={
                                                                  <WithStyles(ForwardRef(InputAdornment))
                                                                    position="end"
                                                                  />
                                                                }
                                                                fullWidth={true}
                                                                id="SurveyQuestion"
                                                                label={
                                                                  <React.Fragment>
                                                                    date
                                                                  </React.Fragment>
                                                                }
                                                                max="5000-05-31"
                                                                multiline={false}
                                                                name="date"
                                                                onChange={[Function]}
                                                                startAdornment={
                                                                  <WithStyles(ForwardRef(InputAdornment))
                                                                    position="start"
                                                                  />
                                                                }
                                                                type="date"
                                                                value="Invalid date"
                                                              >
                                                                <ForwardRef(OutlinedInput)
                                                                  autoFocus={false}
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "input": "MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                      "marginDense": "MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiOutlinedInput-multiline",
                                                                      "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                      "root": "MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  endAdornment={
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="end"
                                                                    />
                                                                  }
                                                                  fullWidth={true}
                                                                  id="SurveyQuestion"
                                                                  label={
                                                                    <React.Fragment>
                                                                      date
                                                                    </React.Fragment>
                                                                  }
                                                                  max="5000-05-31"
                                                                  multiline={false}
                                                                  name="date"
                                                                  onChange={[Function]}
                                                                  startAdornment={
                                                                    <WithStyles(ForwardRef(InputAdornment))
                                                                      position="start"
                                                                    />
                                                                  }
                                                                  type="date"
                                                                  value="Invalid date"
                                                                >
                                                                  <WithStyles(ForwardRef(InputBase))
                                                                    autoFocus={false}
                                                                    classes={
                                                                      Object {
                                                                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                        "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                                        "disabled": "Mui-disabled",
                                                                        "error": "Mui-error",
                                                                        "focused": "Mui-focused",
                                                                        "input": "MuiOutlinedInput-input",
                                                                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                        "marginDense": "MuiOutlinedInput-marginDense",
                                                                        "multiline": "MuiOutlinedInput-multiline",
                                                                        "notchedOutline": null,
                                                                        "root": "MuiOutlinedInput-root",
                                                                      }
                                                                    }
                                                                    endAdornment={
                                                                      <WithStyles(ForwardRef(InputAdornment))
                                                                        position="end"
                                                                      />
                                                                    }
                                                                    fullWidth={true}
                                                                    id="SurveyQuestion"
                                                                    inputComponent="input"
                                                                    max="5000-05-31"
                                                                    multiline={false}
                                                                    name="date"
                                                                    onChange={[Function]}
                                                                    renderSuffix={[Function]}
                                                                    startAdornment={
                                                                      <WithStyles(ForwardRef(InputAdornment))
                                                                        position="start"
                                                                      />
                                                                    }
                                                                    type="date"
                                                                    value="Invalid date"
                                                                  >
                                                                    <ForwardRef(InputBase)
                                                                      autoFocus={false}
                                                                      classes={
                                                                        Object {
                                                                          "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                          "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                          "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                                          "disabled": "Mui-disabled Mui-disabled",
                                                                          "error": "Mui-error Mui-error",
                                                                          "focused": "Mui-focused Mui-focused",
                                                                          "formControl": "MuiInputBase-formControl",
                                                                          "fullWidth": "MuiInputBase-fullWidth",
                                                                          "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                          "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                          "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                          "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                          "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                          "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                          "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                        }
                                                                      }
                                                                      endAdornment={
                                                                        <WithStyles(ForwardRef(InputAdornment))
                                                                          position="end"
                                                                        />
                                                                      }
                                                                      fullWidth={true}
                                                                      id="SurveyQuestion"
                                                                      inputComponent="input"
                                                                      max="5000-05-31"
                                                                      multiline={false}
                                                                      name="date"
                                                                      onChange={[Function]}
                                                                      renderSuffix={[Function]}
                                                                      startAdornment={
                                                                        <WithStyles(ForwardRef(InputAdornment))
                                                                          position="start"
                                                                        />
                                                                      }
                                                                      type="date"
                                                                      value="Invalid date"
                                                                    >
                                                                      <div
                                                                        className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedStart MuiOutlinedInput-adornedStart MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd"
                                                                        max="5000-05-31"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <WithStyles(ForwardRef(InputAdornment))
                                                                          position="start"
                                                                        >
                                                                          <ForwardRef(InputAdornment)
                                                                            classes={
                                                                              Object {
                                                                                "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                                "filled": "MuiInputAdornment-filled",
                                                                                "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                                "marginDense": "MuiInputAdornment-marginDense",
                                                                                "positionEnd": "MuiInputAdornment-positionEnd",
                                                                                "positionStart": "MuiInputAdornment-positionStart",
                                                                                "root": "MuiInputAdornment-root",
                                                                              }
                                                                            }
                                                                            position="start"
                                                                          >
                                                                            <div
                                                                              className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                                                            />
                                                                          </ForwardRef(InputAdornment)>
                                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                                        <input
                                                                          aria-invalid={false}
                                                                          autoFocus={false}
                                                                          className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd"
                                                                          disabled={false}
                                                                          id="SurveyQuestion"
                                                                          name="date"
                                                                          onAnimationStart={[Function]}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          type="date"
                                                                          value="Invalid date"
                                                                        />
                                                                        <WithStyles(ForwardRef(InputAdornment))
                                                                          position="end"
                                                                        >
                                                                          <ForwardRef(InputAdornment)
                                                                            classes={
                                                                              Object {
                                                                                "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                                "filled": "MuiInputAdornment-filled",
                                                                                "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                                "marginDense": "MuiInputAdornment-marginDense",
                                                                                "positionEnd": "MuiInputAdornment-positionEnd",
                                                                                "positionStart": "MuiInputAdornment-positionStart",
                                                                                "root": "MuiInputAdornment-root",
                                                                              }
                                                                            }
                                                                            position="end"
                                                                          >
                                                                            <div
                                                                              className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                            />
                                                                          </ForwardRef(InputAdornment)>
                                                                        </WithStyles(ForwardRef(InputAdornment))>
                                                                        <WithStyles(ForwardRef(NotchedOutline))
                                                                          className="MuiOutlinedInput-notchedOutline"
                                                                          label={
                                                                            <React.Fragment>
                                                                              date
                                                                            </React.Fragment>
                                                                          }
                                                                          labelWidth={0}
                                                                          notched={true}
                                                                        >
                                                                          <ForwardRef(NotchedOutline)
                                                                            className="MuiOutlinedInput-notchedOutline"
                                                                            classes={
                                                                              Object {
                                                                                "legend": "PrivateNotchedOutline-legend-9",
                                                                                "legendLabelled": "PrivateNotchedOutline-legendLabelled-10",
                                                                                "legendNotched": "PrivateNotchedOutline-legendNotched-11",
                                                                                "root": "PrivateNotchedOutline-root-8",
                                                                              }
                                                                            }
                                                                            label={
                                                                              <React.Fragment>
                                                                                date
                                                                              </React.Fragment>
                                                                            }
                                                                            labelWidth={0}
                                                                            notched={true}
                                                                          >
                                                                            <fieldset
                                                                              aria-hidden={true}
                                                                              className="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                                                            >
                                                                              <legend
                                                                                className="PrivateNotchedOutline-legendLabelled-10 PrivateNotchedOutline-legendNotched-11"
                                                                              >
                                                                                <span>
                                                                                  date
                                                                                </span>
                                                                              </legend>
                                                                            </fieldset>
                                                                          </ForwardRef(NotchedOutline)>
                                                                        </WithStyles(ForwardRef(NotchedOutline))>
                                                                      </div>
                                                                    </ForwardRef(InputBase)>
                                                                  </WithStyles(ForwardRef(InputBase))>
                                                                </ForwardRef(OutlinedInput)>
                                                              </WithStyles(ForwardRef(OutlinedInput))>
                                                            </div>
                                                          </ForwardRef(FormControl)>
                                                        </WithStyles(ForwardRef(FormControl))>
                                                      </ForwardRef(TextField)>
                                                    </WithStyles(ForwardRef(TextField))>
                                                    <FormikConnect(ErrorMessageImpl)
                                                      className="text-error"
                                                      component="Typography"
                                                      name="date"
                                                    >
                                                      <ErrorMessageImpl
                                                        className="text-error"
                                                        component="Typography"
                                                        formik={
                                                          Object {
                                                            "dirty": false,
                                                            "errors": Object {},
                                                            "getFieldHelpers": [Function],
                                                            "getFieldMeta": [Function],
                                                            "getFieldProps": [Function],
                                                            "handleBlur": [Function],
                                                            "handleChange": [Function],
                                                            "handleReset": [Function],
                                                            "handleSubmit": [Function],
                                                            "initialErrors": Object {},
                                                            "initialStatus": undefined,
                                                            "initialTouched": Object {},
                                                            "initialValues": Object {
                                                              "areaReserve": " ",
                                                              "buildingName": " ",
                                                              "date": "Invalid date",
                                                              "id": "",
                                                              "timeFrom": "",
                                                              "timeTo": "",
                                                            },
                                                            "isSubmitting": false,
                                                            "isValid": true,
                                                            "isValidating": true,
                                                            "registerField": [Function],
                                                            "resetForm": [Function],
                                                            "setErrors": [Function],
                                                            "setFieldError": [Function],
                                                            "setFieldTouched": [Function],
                                                            "setFieldValue": [Function],
                                                            "setFormikState": [Function],
                                                            "setStatus": [Function],
                                                            "setSubmitting": [Function],
                                                            "setTouched": [Function],
                                                            "setValues": [Function],
                                                            "status": undefined,
                                                            "submitCount": 0,
                                                            "submitForm": [Function],
                                                            "touched": Object {},
                                                            "unregisterField": [Function],
                                                            "validateField": [Function],
                                                            "validateForm": [Function],
                                                            "validateOnBlur": true,
                                                            "validateOnChange": true,
                                                            "validateOnMount": true,
                                                            "values": Object {
                                                              "areaReserve": " ",
                                                              "buildingName": " ",
                                                              "date": "Invalid date",
                                                              "id": "",
                                                              "timeFrom": "",
                                                              "timeTo": "",
                                                            },
                                                          }
                                                        }
                                                        name="date"
                                                      />
                                                    </FormikConnect(ErrorMessageImpl)>
                                                  </div>
                                                </Styled(MuiBox)>
                                              </div>
                                            </ForwardRef(Grid)>
                                          </WithStyles(ForwardRef(Grid))>
                                        </div>
                                      </ForwardRef(Grid)>
                                    </WithStyles(ForwardRef(Grid))>
                                  </div>
                                </Styled(MuiBox)>
                                <WithStyles(ForwardRef(Grid))
                                  container={true}
                                >
                                  <ForwardRef(Grid)
                                    classes={
                                      Object {
                                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                        "container": "MuiGrid-container",
                                        "direction-xs-column": "MuiGrid-direction-xs-column",
                                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                        "grid-lg-1": "MuiGrid-grid-lg-1",
                                        "grid-lg-10": "MuiGrid-grid-lg-10",
                                        "grid-lg-11": "MuiGrid-grid-lg-11",
                                        "grid-lg-12": "MuiGrid-grid-lg-12",
                                        "grid-lg-2": "MuiGrid-grid-lg-2",
                                        "grid-lg-3": "MuiGrid-grid-lg-3",
                                        "grid-lg-4": "MuiGrid-grid-lg-4",
                                        "grid-lg-5": "MuiGrid-grid-lg-5",
                                        "grid-lg-6": "MuiGrid-grid-lg-6",
                                        "grid-lg-7": "MuiGrid-grid-lg-7",
                                        "grid-lg-8": "MuiGrid-grid-lg-8",
                                        "grid-lg-9": "MuiGrid-grid-lg-9",
                                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                        "grid-lg-true": "MuiGrid-grid-lg-true",
                                        "grid-md-1": "MuiGrid-grid-md-1",
                                        "grid-md-10": "MuiGrid-grid-md-10",
                                        "grid-md-11": "MuiGrid-grid-md-11",
                                        "grid-md-12": "MuiGrid-grid-md-12",
                                        "grid-md-2": "MuiGrid-grid-md-2",
                                        "grid-md-3": "MuiGrid-grid-md-3",
                                        "grid-md-4": "MuiGrid-grid-md-4",
                                        "grid-md-5": "MuiGrid-grid-md-5",
                                        "grid-md-6": "MuiGrid-grid-md-6",
                                        "grid-md-7": "MuiGrid-grid-md-7",
                                        "grid-md-8": "MuiGrid-grid-md-8",
                                        "grid-md-9": "MuiGrid-grid-md-9",
                                        "grid-md-auto": "MuiGrid-grid-md-auto",
                                        "grid-md-true": "MuiGrid-grid-md-true",
                                        "grid-sm-1": "MuiGrid-grid-sm-1",
                                        "grid-sm-10": "MuiGrid-grid-sm-10",
                                        "grid-sm-11": "MuiGrid-grid-sm-11",
                                        "grid-sm-12": "MuiGrid-grid-sm-12",
                                        "grid-sm-2": "MuiGrid-grid-sm-2",
                                        "grid-sm-3": "MuiGrid-grid-sm-3",
                                        "grid-sm-4": "MuiGrid-grid-sm-4",
                                        "grid-sm-5": "MuiGrid-grid-sm-5",
                                        "grid-sm-6": "MuiGrid-grid-sm-6",
                                        "grid-sm-7": "MuiGrid-grid-sm-7",
                                        "grid-sm-8": "MuiGrid-grid-sm-8",
                                        "grid-sm-9": "MuiGrid-grid-sm-9",
                                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                        "grid-sm-true": "MuiGrid-grid-sm-true",
                                        "grid-xl-1": "MuiGrid-grid-xl-1",
                                        "grid-xl-10": "MuiGrid-grid-xl-10",
                                        "grid-xl-11": "MuiGrid-grid-xl-11",
                                        "grid-xl-12": "MuiGrid-grid-xl-12",
                                        "grid-xl-2": "MuiGrid-grid-xl-2",
                                        "grid-xl-3": "MuiGrid-grid-xl-3",
                                        "grid-xl-4": "MuiGrid-grid-xl-4",
                                        "grid-xl-5": "MuiGrid-grid-xl-5",
                                        "grid-xl-6": "MuiGrid-grid-xl-6",
                                        "grid-xl-7": "MuiGrid-grid-xl-7",
                                        "grid-xl-8": "MuiGrid-grid-xl-8",
                                        "grid-xl-9": "MuiGrid-grid-xl-9",
                                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                        "grid-xl-true": "MuiGrid-grid-xl-true",
                                        "grid-xs-1": "MuiGrid-grid-xs-1",
                                        "grid-xs-10": "MuiGrid-grid-xs-10",
                                        "grid-xs-11": "MuiGrid-grid-xs-11",
                                        "grid-xs-12": "MuiGrid-grid-xs-12",
                                        "grid-xs-2": "MuiGrid-grid-xs-2",
                                        "grid-xs-3": "MuiGrid-grid-xs-3",
                                        "grid-xs-4": "MuiGrid-grid-xs-4",
                                        "grid-xs-5": "MuiGrid-grid-xs-5",
                                        "grid-xs-6": "MuiGrid-grid-xs-6",
                                        "grid-xs-7": "MuiGrid-grid-xs-7",
                                        "grid-xs-8": "MuiGrid-grid-xs-8",
                                        "grid-xs-9": "MuiGrid-grid-xs-9",
                                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                        "grid-xs-true": "MuiGrid-grid-xs-true",
                                        "item": "MuiGrid-item",
                                        "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                        "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                        "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                        "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                        "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                        "root": "MuiGrid-root",
                                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                      }
                                    }
                                    container={true}
                                  >
                                    <div
                                      className="MuiGrid-root MuiGrid-container"
                                    >
                                      <WithStyles(ForwardRef(Grid))
                                        xs={6}
                                      >
                                        <ForwardRef(Grid)
                                          classes={
                                            Object {
                                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                              "container": "MuiGrid-container",
                                              "direction-xs-column": "MuiGrid-direction-xs-column",
                                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                              "grid-lg-1": "MuiGrid-grid-lg-1",
                                              "grid-lg-10": "MuiGrid-grid-lg-10",
                                              "grid-lg-11": "MuiGrid-grid-lg-11",
                                              "grid-lg-12": "MuiGrid-grid-lg-12",
                                              "grid-lg-2": "MuiGrid-grid-lg-2",
                                              "grid-lg-3": "MuiGrid-grid-lg-3",
                                              "grid-lg-4": "MuiGrid-grid-lg-4",
                                              "grid-lg-5": "MuiGrid-grid-lg-5",
                                              "grid-lg-6": "MuiGrid-grid-lg-6",
                                              "grid-lg-7": "MuiGrid-grid-lg-7",
                                              "grid-lg-8": "MuiGrid-grid-lg-8",
                                              "grid-lg-9": "MuiGrid-grid-lg-9",
                                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                              "grid-lg-true": "MuiGrid-grid-lg-true",
                                              "grid-md-1": "MuiGrid-grid-md-1",
                                              "grid-md-10": "MuiGrid-grid-md-10",
                                              "grid-md-11": "MuiGrid-grid-md-11",
                                              "grid-md-12": "MuiGrid-grid-md-12",
                                              "grid-md-2": "MuiGrid-grid-md-2",
                                              "grid-md-3": "MuiGrid-grid-md-3",
                                              "grid-md-4": "MuiGrid-grid-md-4",
                                              "grid-md-5": "MuiGrid-grid-md-5",
                                              "grid-md-6": "MuiGrid-grid-md-6",
                                              "grid-md-7": "MuiGrid-grid-md-7",
                                              "grid-md-8": "MuiGrid-grid-md-8",
                                              "grid-md-9": "MuiGrid-grid-md-9",
                                              "grid-md-auto": "MuiGrid-grid-md-auto",
                                              "grid-md-true": "MuiGrid-grid-md-true",
                                              "grid-sm-1": "MuiGrid-grid-sm-1",
                                              "grid-sm-10": "MuiGrid-grid-sm-10",
                                              "grid-sm-11": "MuiGrid-grid-sm-11",
                                              "grid-sm-12": "MuiGrid-grid-sm-12",
                                              "grid-sm-2": "MuiGrid-grid-sm-2",
                                              "grid-sm-3": "MuiGrid-grid-sm-3",
                                              "grid-sm-4": "MuiGrid-grid-sm-4",
                                              "grid-sm-5": "MuiGrid-grid-sm-5",
                                              "grid-sm-6": "MuiGrid-grid-sm-6",
                                              "grid-sm-7": "MuiGrid-grid-sm-7",
                                              "grid-sm-8": "MuiGrid-grid-sm-8",
                                              "grid-sm-9": "MuiGrid-grid-sm-9",
                                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                              "grid-sm-true": "MuiGrid-grid-sm-true",
                                              "grid-xl-1": "MuiGrid-grid-xl-1",
                                              "grid-xl-10": "MuiGrid-grid-xl-10",
                                              "grid-xl-11": "MuiGrid-grid-xl-11",
                                              "grid-xl-12": "MuiGrid-grid-xl-12",
                                              "grid-xl-2": "MuiGrid-grid-xl-2",
                                              "grid-xl-3": "MuiGrid-grid-xl-3",
                                              "grid-xl-4": "MuiGrid-grid-xl-4",
                                              "grid-xl-5": "MuiGrid-grid-xl-5",
                                              "grid-xl-6": "MuiGrid-grid-xl-6",
                                              "grid-xl-7": "MuiGrid-grid-xl-7",
                                              "grid-xl-8": "MuiGrid-grid-xl-8",
                                              "grid-xl-9": "MuiGrid-grid-xl-9",
                                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                              "grid-xl-true": "MuiGrid-grid-xl-true",
                                              "grid-xs-1": "MuiGrid-grid-xs-1",
                                              "grid-xs-10": "MuiGrid-grid-xs-10",
                                              "grid-xs-11": "MuiGrid-grid-xs-11",
                                              "grid-xs-12": "MuiGrid-grid-xs-12",
                                              "grid-xs-2": "MuiGrid-grid-xs-2",
                                              "grid-xs-3": "MuiGrid-grid-xs-3",
                                              "grid-xs-4": "MuiGrid-grid-xs-4",
                                              "grid-xs-5": "MuiGrid-grid-xs-5",
                                              "grid-xs-6": "MuiGrid-grid-xs-6",
                                              "grid-xs-7": "MuiGrid-grid-xs-7",
                                              "grid-xs-8": "MuiGrid-grid-xs-8",
                                              "grid-xs-9": "MuiGrid-grid-xs-9",
                                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                              "grid-xs-true": "MuiGrid-grid-xs-true",
                                              "item": "MuiGrid-item",
                                              "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                              "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                              "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                              "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                              "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                              "root": "MuiGrid-root",
                                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                            }
                                          }
                                          xs={6}
                                        >
                                          <div
                                            className="MuiGrid-root MuiGrid-grid-xs-6"
                                          >
                                            <Styled(MuiBox)
                                              className="formGroup classifiedFormGroup"
                                            >
                                              <div
                                                className="MuiBox-root MuiBox-root-15 formGroup classifiedFormGroup"
                                              >
                                                <Field
                                                  className="formInput"
                                                  format="hh:mm"
                                                  name="timeFrom"
                                                  placeholder="From"
                                                  type="time"
                                                >
                                                  <input
                                                    className="formInput"
                                                    format="hh:mm"
                                                    name="timeFrom"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    placeholder="From"
                                                    type="time"
                                                    value=""
                                                  />
                                                </Field>
                                                <span
                                                  className="frmLeftIcons"
                                                >
                                                  <img
                                                    alt="Warning Icon"
                                                    className="frm-icons"
                                                    src={
                                                      Object {
                                                        "testUri": "../../../packages/blocks/RequestManagement/assets/time_icon.png",
                                                      }
                                                    }
                                                  />
                                                </span>
                                                <FormikConnect(ErrorMessageImpl)
                                                  className="text-error"
                                                  component="Typography"
                                                  name="timeFrom"
                                                >
                                                  <ErrorMessageImpl
                                                    className="text-error"
                                                    component="Typography"
                                                    formik={
                                                      Object {
                                                        "dirty": false,
                                                        "errors": Object {},
                                                        "getFieldHelpers": [Function],
                                                        "getFieldMeta": [Function],
                                                        "getFieldProps": [Function],
                                                        "handleBlur": [Function],
                                                        "handleChange": [Function],
                                                        "handleReset": [Function],
                                                        "handleSubmit": [Function],
                                                        "initialErrors": Object {},
                                                        "initialStatus": undefined,
                                                        "initialTouched": Object {},
                                                        "initialValues": Object {
                                                          "areaReserve": " ",
                                                          "buildingName": " ",
                                                          "date": "Invalid date",
                                                          "id": "",
                                                          "timeFrom": "",
                                                          "timeTo": "",
                                                        },
                                                        "isSubmitting": false,
                                                        "isValid": true,
                                                        "isValidating": true,
                                                        "registerField": [Function],
                                                        "resetForm": [Function],
                                                        "setErrors": [Function],
                                                        "setFieldError": [Function],
                                                        "setFieldTouched": [Function],
                                                        "setFieldValue": [Function],
                                                        "setFormikState": [Function],
                                                        "setStatus": [Function],
                                                        "setSubmitting": [Function],
                                                        "setTouched": [Function],
                                                        "setValues": [Function],
                                                        "status": undefined,
                                                        "submitCount": 0,
                                                        "submitForm": [Function],
                                                        "touched": Object {},
                                                        "unregisterField": [Function],
                                                        "validateField": [Function],
                                                        "validateForm": [Function],
                                                        "validateOnBlur": true,
                                                        "validateOnChange": true,
                                                        "validateOnMount": true,
                                                        "values": Object {
                                                          "areaReserve": " ",
                                                          "buildingName": " ",
                                                          "date": "Invalid date",
                                                          "id": "",
                                                          "timeFrom": "",
                                                          "timeTo": "",
                                                        },
                                                      }
                                                    }
                                                    name="timeFrom"
                                                  />
                                                </FormikConnect(ErrorMessageImpl)>
                                              </div>
                                            </Styled(MuiBox)>
                                          </div>
                                        </ForwardRef(Grid)>
                                      </WithStyles(ForwardRef(Grid))>
                                      <WithStyles(ForwardRef(Grid))
                                        xs={6}
                                      >
                                        <ForwardRef(Grid)
                                          classes={
                                            Object {
                                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                              "container": "MuiGrid-container",
                                              "direction-xs-column": "MuiGrid-direction-xs-column",
                                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                              "grid-lg-1": "MuiGrid-grid-lg-1",
                                              "grid-lg-10": "MuiGrid-grid-lg-10",
                                              "grid-lg-11": "MuiGrid-grid-lg-11",
                                              "grid-lg-12": "MuiGrid-grid-lg-12",
                                              "grid-lg-2": "MuiGrid-grid-lg-2",
                                              "grid-lg-3": "MuiGrid-grid-lg-3",
                                              "grid-lg-4": "MuiGrid-grid-lg-4",
                                              "grid-lg-5": "MuiGrid-grid-lg-5",
                                              "grid-lg-6": "MuiGrid-grid-lg-6",
                                              "grid-lg-7": "MuiGrid-grid-lg-7",
                                              "grid-lg-8": "MuiGrid-grid-lg-8",
                                              "grid-lg-9": "MuiGrid-grid-lg-9",
                                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                              "grid-lg-true": "MuiGrid-grid-lg-true",
                                              "grid-md-1": "MuiGrid-grid-md-1",
                                              "grid-md-10": "MuiGrid-grid-md-10",
                                              "grid-md-11": "MuiGrid-grid-md-11",
                                              "grid-md-12": "MuiGrid-grid-md-12",
                                              "grid-md-2": "MuiGrid-grid-md-2",
                                              "grid-md-3": "MuiGrid-grid-md-3",
                                              "grid-md-4": "MuiGrid-grid-md-4",
                                              "grid-md-5": "MuiGrid-grid-md-5",
                                              "grid-md-6": "MuiGrid-grid-md-6",
                                              "grid-md-7": "MuiGrid-grid-md-7",
                                              "grid-md-8": "MuiGrid-grid-md-8",
                                              "grid-md-9": "MuiGrid-grid-md-9",
                                              "grid-md-auto": "MuiGrid-grid-md-auto",
                                              "grid-md-true": "MuiGrid-grid-md-true",
                                              "grid-sm-1": "MuiGrid-grid-sm-1",
                                              "grid-sm-10": "MuiGrid-grid-sm-10",
                                              "grid-sm-11": "MuiGrid-grid-sm-11",
                                              "grid-sm-12": "MuiGrid-grid-sm-12",
                                              "grid-sm-2": "MuiGrid-grid-sm-2",
                                              "grid-sm-3": "MuiGrid-grid-sm-3",
                                              "grid-sm-4": "MuiGrid-grid-sm-4",
                                              "grid-sm-5": "MuiGrid-grid-sm-5",
                                              "grid-sm-6": "MuiGrid-grid-sm-6",
                                              "grid-sm-7": "MuiGrid-grid-sm-7",
                                              "grid-sm-8": "MuiGrid-grid-sm-8",
                                              "grid-sm-9": "MuiGrid-grid-sm-9",
                                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                              "grid-sm-true": "MuiGrid-grid-sm-true",
                                              "grid-xl-1": "MuiGrid-grid-xl-1",
                                              "grid-xl-10": "MuiGrid-grid-xl-10",
                                              "grid-xl-11": "MuiGrid-grid-xl-11",
                                              "grid-xl-12": "MuiGrid-grid-xl-12",
                                              "grid-xl-2": "MuiGrid-grid-xl-2",
                                              "grid-xl-3": "MuiGrid-grid-xl-3",
                                              "grid-xl-4": "MuiGrid-grid-xl-4",
                                              "grid-xl-5": "MuiGrid-grid-xl-5",
                                              "grid-xl-6": "MuiGrid-grid-xl-6",
                                              "grid-xl-7": "MuiGrid-grid-xl-7",
                                              "grid-xl-8": "MuiGrid-grid-xl-8",
                                              "grid-xl-9": "MuiGrid-grid-xl-9",
                                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                              "grid-xl-true": "MuiGrid-grid-xl-true",
                                              "grid-xs-1": "MuiGrid-grid-xs-1",
                                              "grid-xs-10": "MuiGrid-grid-xs-10",
                                              "grid-xs-11": "MuiGrid-grid-xs-11",
                                              "grid-xs-12": "MuiGrid-grid-xs-12",
                                              "grid-xs-2": "MuiGrid-grid-xs-2",
                                              "grid-xs-3": "MuiGrid-grid-xs-3",
                                              "grid-xs-4": "MuiGrid-grid-xs-4",
                                              "grid-xs-5": "MuiGrid-grid-xs-5",
                                              "grid-xs-6": "MuiGrid-grid-xs-6",
                                              "grid-xs-7": "MuiGrid-grid-xs-7",
                                              "grid-xs-8": "MuiGrid-grid-xs-8",
                                              "grid-xs-9": "MuiGrid-grid-xs-9",
                                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                              "grid-xs-true": "MuiGrid-grid-xs-true",
                                              "item": "MuiGrid-item",
                                              "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                              "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                              "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                              "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                              "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                              "root": "MuiGrid-root",
                                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                            }
                                          }
                                          xs={6}
                                        >
                                          <div
                                            className="MuiGrid-root MuiGrid-grid-xs-6"
                                          >
                                            <Styled(MuiBox)
                                              className="formGroup"
                                            >
                                              <div
                                                className="MuiBox-root MuiBox-root-16 formGroup"
                                              >
                                                <Field
                                                  className="formInput formInputBox"
                                                  format="hh:mm"
                                                  name="timeTo"
                                                  placeholder="To"
                                                  type="time"
                                                >
                                                  <input
                                                    className="formInput formInputBox"
                                                    format="hh:mm"
                                                    name="timeTo"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    placeholder="To"
                                                    type="time"
                                                    value=""
                                                  />
                                                </Field>
                                                <span
                                                  className="frmLeftIcons"
                                                >
                                                  <img
                                                    alt="Warning Icon"
                                                    className="frm-icons"
                                                    src={
                                                      Object {
                                                        "testUri": "../../../packages/blocks/RequestManagement/assets/time_icon.png",
                                                      }
                                                    }
                                                  />
                                                </span>
                                                <FormikConnect(ErrorMessageImpl)
                                                  className="text-error"
                                                  component="Typography"
                                                  name="timeTo"
                                                >
                                                  <ErrorMessageImpl
                                                    className="text-error"
                                                    component="Typography"
                                                    formik={
                                                      Object {
                                                        "dirty": false,
                                                        "errors": Object {},
                                                        "getFieldHelpers": [Function],
                                                        "getFieldMeta": [Function],
                                                        "getFieldProps": [Function],
                                                        "handleBlur": [Function],
                                                        "handleChange": [Function],
                                                        "handleReset": [Function],
                                                        "handleSubmit": [Function],
                                                        "initialErrors": Object {},
                                                        "initialStatus": undefined,
                                                        "initialTouched": Object {},
                                                        "initialValues": Object {
                                                          "areaReserve": " ",
                                                          "buildingName": " ",
                                                          "date": "Invalid date",
                                                          "id": "",
                                                          "timeFrom": "",
                                                          "timeTo": "",
                                                        },
                                                        "isSubmitting": false,
                                                        "isValid": true,
                                                        "isValidating": true,
                                                        "registerField": [Function],
                                                        "resetForm": [Function],
                                                        "setErrors": [Function],
                                                        "setFieldError": [Function],
                                                        "setFieldTouched": [Function],
                                                        "setFieldValue": [Function],
                                                        "setFormikState": [Function],
                                                        "setStatus": [Function],
                                                        "setSubmitting": [Function],
                                                        "setTouched": [Function],
                                                        "setValues": [Function],
                                                        "status": undefined,
                                                        "submitCount": 0,
                                                        "submitForm": [Function],
                                                        "touched": Object {},
                                                        "unregisterField": [Function],
                                                        "validateField": [Function],
                                                        "validateForm": [Function],
                                                        "validateOnBlur": true,
                                                        "validateOnChange": true,
                                                        "validateOnMount": true,
                                                        "values": Object {
                                                          "areaReserve": " ",
                                                          "buildingName": " ",
                                                          "date": "Invalid date",
                                                          "id": "",
                                                          "timeFrom": "",
                                                          "timeTo": "",
                                                        },
                                                      }
                                                    }
                                                    name="timeTo"
                                                  />
                                                </FormikConnect(ErrorMessageImpl)>
                                              </div>
                                            </Styled(MuiBox)>
                                          </div>
                                        </ForwardRef(Grid)>
                                      </WithStyles(ForwardRef(Grid))>
                                      <Styled(MuiBox)
                                        className="reservationDec"
                                      >
                                        <div
                                          className="MuiBox-root MuiBox-root-17 reservationDec"
                                        >
                                          <h5>
                                            Description:
                                          </h5>
                                          <p>
                                            You can use garden for kids party, family gathering, building event etc. You are not allowed to have meals in the garden.
                                          </p>
                                          <br />
                                           
                                          <p>
                                            You will be charged 
                                            <span>
                                              SR 50 per hour
                                            </span>
                                             for garden facility.
                                          </p>
                                        </div>
                                      </Styled(MuiBox)>
                                    </div>
                                  </ForwardRef(Grid)>
                                </WithStyles(ForwardRef(Grid))>
                                <Styled(MuiBox)
                                  className="customButton"
                                >
                                  <div
                                    className="MuiBox-root MuiBox-root-18 customButton"
                                  >
                                    <WithStyles(ForwardRef(Button))
                                      type="submit"
                                      variant="contained"
                                    >
                                      <ForwardRef(Button)
                                        classes={
                                          Object {
                                            "colorInherit": "MuiButton-colorInherit",
                                            "contained": "MuiButton-contained",
                                            "containedPrimary": "MuiButton-containedPrimary",
                                            "containedSecondary": "MuiButton-containedSecondary",
                                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                                            "disableElevation": "MuiButton-disableElevation",
                                            "disabled": "Mui-disabled",
                                            "endIcon": "MuiButton-endIcon",
                                            "focusVisible": "Mui-focusVisible",
                                            "fullWidth": "MuiButton-fullWidth",
                                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                                            "label": "MuiButton-label",
                                            "outlined": "MuiButton-outlined",
                                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                            "root": "MuiButton-root",
                                            "sizeLarge": "MuiButton-sizeLarge",
                                            "sizeSmall": "MuiButton-sizeSmall",
                                            "startIcon": "MuiButton-startIcon",
                                            "text": "MuiButton-text",
                                            "textPrimary": "MuiButton-textPrimary",
                                            "textSecondary": "MuiButton-textSecondary",
                                            "textSizeLarge": "MuiButton-textSizeLarge",
                                            "textSizeSmall": "MuiButton-textSizeSmall",
                                          }
                                        }
                                        type="submit"
                                        variant="contained"
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          className="MuiButton-root MuiButton-contained"
                                          component="button"
                                          disabled={false}
                                          focusRipple={true}
                                          focusVisibleClassName="Mui-focusVisible"
                                          type="submit"
                                        >
                                          <ForwardRef(ButtonBase)
                                            className="MuiButton-root MuiButton-contained"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="button"
                                            disabled={false}
                                            focusRipple={true}
                                            focusVisibleClassName="Mui-focusVisible"
                                            type="submit"
                                          >
                                            <button
                                              className="MuiButtonBase-root MuiButton-root MuiButton-contained"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={0}
                                              type="submit"
                                            >
                                              <span
                                                className="MuiButton-label"
                                              >
                                                Submit
                                              </span>
                                              <WithStyles(memo)
                                                center={false}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(memo)>
                                            </button>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(Button)>
                                    </WithStyles(ForwardRef(Button))>
                                  </div>
                                </Styled(MuiBox)>
                                {}
                                {
  "areaReserve": " ",
  "buildingName": " ",
  "date": "Invalid date",
  "timeFrom": "",
  "timeTo": "",
  "id": ""
}
                              </form>
                            </Form>
                          </Formik>
                        </div>
                      </Styled(MuiBox)>
                    </div>
                  </Styled(MuiBox)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
            <WithStyles(ForwardRef(Grid))
              className="auth-cols"
              item={true}
              md={5}
              xs={12}
            >
              <ForwardRef(Grid)
                className="auth-cols"
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={5}
                xs={12}
              >
                <div
                  className="MuiGrid-root auth-cols MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-5"
                >
                  <Styled(MuiBox)
                    className="right-block"
                    display={
                      Object {
                        "md": "flex",
                        "xs": "none",
                      }
                    }
                  >
                    <div
                      className="MuiBox-root MuiBox-root-19 right-block"
                    >
                      <img
                        alt=""
                        className="building-logo"
                      />
                    </div>
                  </Styled(MuiBox)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
          </div>
        </ForwardRef(Grid)>
      </WithStyles(ForwardRef(Grid))>
    </div>
  </Styled(MuiBox)>
  <Loader
    loading={true}
  >
    <WithStyles(ForwardRef(Backdrop))
      onClick={[Function]}
      open={true}
      style={
        Object {
          "color": "#ffffff",
          "zIndex": 9999,
        }
      }
    >
      <ForwardRef(Backdrop)
        classes={
          Object {
            "invisible": "MuiBackdrop-invisible",
            "root": "MuiBackdrop-root",
          }
        }
        onClick={[Function]}
        open={true}
        style={
          Object {
            "color": "#ffffff",
            "zIndex": 9999,
          }
        }
      >
        <ForwardRef(Fade)
          in={true}
          onClick={[Function]}
          style={
            Object {
              "color": "#ffffff",
              "zIndex": 9999,
            }
          }
        >
          <Transition
            appear={true}
            enter={true}
            exit={true}
            in={true}
            mountOnEnter={false}
            onClick={[Function]}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={
              Object {
                "enter": 225,
                "exit": 195,
              }
            }
            unmountOnExit={false}
          >
            <div
              aria-hidden={true}
              className="MuiBackdrop-root"
              onClick={[Function]}
              style={
                Object {
                  "color": "#ffffff",
                  "opacity": 1,
                  "visibility": undefined,
                  "zIndex": 9999,
                }
              }
            >
              <WithStyles(ForwardRef(CircularProgress))
                style={
                  Object {
                    "color": "#2c6fed",
                  }
                }
              >
                <ForwardRef(CircularProgress)
                  classes={
                    Object {
                      "circle": "MuiCircularProgress-circle",
                      "circleDeterminate": "MuiCircularProgress-circleDeterminate",
                      "circleDisableShrink": "MuiCircularProgress-circleDisableShrink",
                      "circleIndeterminate": "MuiCircularProgress-circleIndeterminate",
                      "circleStatic": "MuiCircularProgress-circleStatic",
                      "colorPrimary": "MuiCircularProgress-colorPrimary",
                      "colorSecondary": "MuiCircularProgress-colorSecondary",
                      "determinate": "MuiCircularProgress-determinate",
                      "indeterminate": "MuiCircularProgress-indeterminate",
                      "root": "MuiCircularProgress-root",
                      "static": "MuiCircularProgress-static",
                      "svg": "MuiCircularProgress-svg",
                    }
                  }
                  style={
                    Object {
                      "color": "#2c6fed",
                    }
                  }
                >
                  <div
                    className="MuiCircularProgress-root MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
                    role="progressbar"
                    style={
                      Object {
                        "color": "#2c6fed",
                        "height": 40,
                        "width": 40,
                      }
                    }
                  >
                    <svg
                      className="MuiCircularProgress-svg"
                      viewBox="22 22 44 44"
                    >
                      <circle
                        className="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                        cx={44}
                        cy={44}
                        fill="none"
                        r={20.2}
                        strokeWidth={3.6}
                        style={Object {}}
                      />
                    </svg>
                  </div>
                </ForwardRef(CircularProgress)>
              </WithStyles(ForwardRef(CircularProgress))>
            </div>
          </Transition>
        </ForwardRef(Fade)>
      </ForwardRef(Backdrop)>
    </WithStyles(ForwardRef(Backdrop))>
  </Loader>
</CreateFacilityReservation>
`;
