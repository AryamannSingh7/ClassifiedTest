// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RentPayment User navigates to Register Rent payment 1`] = `
<RegisterRentPayment
  history={
    Object {
      "push": [MockFunction],
    }
  }
  id="RentPayments"
  location={[MockFunction]}
  match={[MockFunction]}
  navigation={Object {}}
  t={
    [MockFunction] {
      "calls": Array [
        Array [
          "Register Rent Payments",
        ],
        Array [
          "Tenant Name",
        ],
        Array [
          "Rent Amount",
        ],
        Array [
          "Register Rent Payment",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <WithStyles(ForwardRef(Grid))
    className="auth-cols"
    item={true}
    md={12}
    xs={12}
  >
    <ForwardRef(Grid)
      className="auth-cols"
      classes={
        Object {
          "align-content-xs-center": "MuiGrid-align-content-xs-center",
          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
          "align-items-xs-center": "MuiGrid-align-items-xs-center",
          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
          "container": "MuiGrid-container",
          "direction-xs-column": "MuiGrid-direction-xs-column",
          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
          "grid-lg-1": "MuiGrid-grid-lg-1",
          "grid-lg-10": "MuiGrid-grid-lg-10",
          "grid-lg-11": "MuiGrid-grid-lg-11",
          "grid-lg-12": "MuiGrid-grid-lg-12",
          "grid-lg-2": "MuiGrid-grid-lg-2",
          "grid-lg-3": "MuiGrid-grid-lg-3",
          "grid-lg-4": "MuiGrid-grid-lg-4",
          "grid-lg-5": "MuiGrid-grid-lg-5",
          "grid-lg-6": "MuiGrid-grid-lg-6",
          "grid-lg-7": "MuiGrid-grid-lg-7",
          "grid-lg-8": "MuiGrid-grid-lg-8",
          "grid-lg-9": "MuiGrid-grid-lg-9",
          "grid-lg-auto": "MuiGrid-grid-lg-auto",
          "grid-lg-true": "MuiGrid-grid-lg-true",
          "grid-md-1": "MuiGrid-grid-md-1",
          "grid-md-10": "MuiGrid-grid-md-10",
          "grid-md-11": "MuiGrid-grid-md-11",
          "grid-md-12": "MuiGrid-grid-md-12",
          "grid-md-2": "MuiGrid-grid-md-2",
          "grid-md-3": "MuiGrid-grid-md-3",
          "grid-md-4": "MuiGrid-grid-md-4",
          "grid-md-5": "MuiGrid-grid-md-5",
          "grid-md-6": "MuiGrid-grid-md-6",
          "grid-md-7": "MuiGrid-grid-md-7",
          "grid-md-8": "MuiGrid-grid-md-8",
          "grid-md-9": "MuiGrid-grid-md-9",
          "grid-md-auto": "MuiGrid-grid-md-auto",
          "grid-md-true": "MuiGrid-grid-md-true",
          "grid-sm-1": "MuiGrid-grid-sm-1",
          "grid-sm-10": "MuiGrid-grid-sm-10",
          "grid-sm-11": "MuiGrid-grid-sm-11",
          "grid-sm-12": "MuiGrid-grid-sm-12",
          "grid-sm-2": "MuiGrid-grid-sm-2",
          "grid-sm-3": "MuiGrid-grid-sm-3",
          "grid-sm-4": "MuiGrid-grid-sm-4",
          "grid-sm-5": "MuiGrid-grid-sm-5",
          "grid-sm-6": "MuiGrid-grid-sm-6",
          "grid-sm-7": "MuiGrid-grid-sm-7",
          "grid-sm-8": "MuiGrid-grid-sm-8",
          "grid-sm-9": "MuiGrid-grid-sm-9",
          "grid-sm-auto": "MuiGrid-grid-sm-auto",
          "grid-sm-true": "MuiGrid-grid-sm-true",
          "grid-xl-1": "MuiGrid-grid-xl-1",
          "grid-xl-10": "MuiGrid-grid-xl-10",
          "grid-xl-11": "MuiGrid-grid-xl-11",
          "grid-xl-12": "MuiGrid-grid-xl-12",
          "grid-xl-2": "MuiGrid-grid-xl-2",
          "grid-xl-3": "MuiGrid-grid-xl-3",
          "grid-xl-4": "MuiGrid-grid-xl-4",
          "grid-xl-5": "MuiGrid-grid-xl-5",
          "grid-xl-6": "MuiGrid-grid-xl-6",
          "grid-xl-7": "MuiGrid-grid-xl-7",
          "grid-xl-8": "MuiGrid-grid-xl-8",
          "grid-xl-9": "MuiGrid-grid-xl-9",
          "grid-xl-auto": "MuiGrid-grid-xl-auto",
          "grid-xl-true": "MuiGrid-grid-xl-true",
          "grid-xs-1": "MuiGrid-grid-xs-1",
          "grid-xs-10": "MuiGrid-grid-xs-10",
          "grid-xs-11": "MuiGrid-grid-xs-11",
          "grid-xs-12": "MuiGrid-grid-xs-12",
          "grid-xs-2": "MuiGrid-grid-xs-2",
          "grid-xs-3": "MuiGrid-grid-xs-3",
          "grid-xs-4": "MuiGrid-grid-xs-4",
          "grid-xs-5": "MuiGrid-grid-xs-5",
          "grid-xs-6": "MuiGrid-grid-xs-6",
          "grid-xs-7": "MuiGrid-grid-xs-7",
          "grid-xs-8": "MuiGrid-grid-xs-8",
          "grid-xs-9": "MuiGrid-grid-xs-9",
          "grid-xs-auto": "MuiGrid-grid-xs-auto",
          "grid-xs-true": "MuiGrid-grid-xs-true",
          "item": "MuiGrid-item",
          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
          "root": "MuiGrid-root",
          "spacing-xs-1": "MuiGrid-spacing-xs-1",
          "spacing-xs-10": "MuiGrid-spacing-xs-10",
          "spacing-xs-2": "MuiGrid-spacing-xs-2",
          "spacing-xs-3": "MuiGrid-spacing-xs-3",
          "spacing-xs-4": "MuiGrid-spacing-xs-4",
          "spacing-xs-5": "MuiGrid-spacing-xs-5",
          "spacing-xs-6": "MuiGrid-spacing-xs-6",
          "spacing-xs-7": "MuiGrid-spacing-xs-7",
          "spacing-xs-8": "MuiGrid-spacing-xs-8",
          "spacing-xs-9": "MuiGrid-spacing-xs-9",
          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
          "zeroMinWidth": "MuiGrid-zeroMinWidth",
        }
      }
      item={true}
      md={12}
      xs={12}
    >
      <div
        className="MuiGrid-root auth-cols MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-12"
      >
        <WithStyles(ForwardRef(Grid))
          container={true}
          style={
            Object {
              "margin": "1rem",
              "width": "90%",
            }
          }
        >
          <ForwardRef(Grid)
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            container={true}
            style={
              Object {
                "margin": "1rem",
                "width": "90%",
              }
            }
          >
            <div
              className="MuiGrid-root MuiGrid-container"
              style={
                Object {
                  "margin": "1rem",
                  "width": "90%",
                }
              }
            >
              <WithStyles(ForwardRef(Grid))
                item={true}
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "gap": "1rem",
                    "justifyContent": "space-between",
                  }
                }
                xs={12}
              >
                <ForwardRef(Grid)
                  classes={
                    Object {
                      "align-content-xs-center": "MuiGrid-align-content-xs-center",
                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                      "align-items-xs-center": "MuiGrid-align-items-xs-center",
                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                      "container": "MuiGrid-container",
                      "direction-xs-column": "MuiGrid-direction-xs-column",
                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                      "grid-lg-1": "MuiGrid-grid-lg-1",
                      "grid-lg-10": "MuiGrid-grid-lg-10",
                      "grid-lg-11": "MuiGrid-grid-lg-11",
                      "grid-lg-12": "MuiGrid-grid-lg-12",
                      "grid-lg-2": "MuiGrid-grid-lg-2",
                      "grid-lg-3": "MuiGrid-grid-lg-3",
                      "grid-lg-4": "MuiGrid-grid-lg-4",
                      "grid-lg-5": "MuiGrid-grid-lg-5",
                      "grid-lg-6": "MuiGrid-grid-lg-6",
                      "grid-lg-7": "MuiGrid-grid-lg-7",
                      "grid-lg-8": "MuiGrid-grid-lg-8",
                      "grid-lg-9": "MuiGrid-grid-lg-9",
                      "grid-lg-auto": "MuiGrid-grid-lg-auto",
                      "grid-lg-true": "MuiGrid-grid-lg-true",
                      "grid-md-1": "MuiGrid-grid-md-1",
                      "grid-md-10": "MuiGrid-grid-md-10",
                      "grid-md-11": "MuiGrid-grid-md-11",
                      "grid-md-12": "MuiGrid-grid-md-12",
                      "grid-md-2": "MuiGrid-grid-md-2",
                      "grid-md-3": "MuiGrid-grid-md-3",
                      "grid-md-4": "MuiGrid-grid-md-4",
                      "grid-md-5": "MuiGrid-grid-md-5",
                      "grid-md-6": "MuiGrid-grid-md-6",
                      "grid-md-7": "MuiGrid-grid-md-7",
                      "grid-md-8": "MuiGrid-grid-md-8",
                      "grid-md-9": "MuiGrid-grid-md-9",
                      "grid-md-auto": "MuiGrid-grid-md-auto",
                      "grid-md-true": "MuiGrid-grid-md-true",
                      "grid-sm-1": "MuiGrid-grid-sm-1",
                      "grid-sm-10": "MuiGrid-grid-sm-10",
                      "grid-sm-11": "MuiGrid-grid-sm-11",
                      "grid-sm-12": "MuiGrid-grid-sm-12",
                      "grid-sm-2": "MuiGrid-grid-sm-2",
                      "grid-sm-3": "MuiGrid-grid-sm-3",
                      "grid-sm-4": "MuiGrid-grid-sm-4",
                      "grid-sm-5": "MuiGrid-grid-sm-5",
                      "grid-sm-6": "MuiGrid-grid-sm-6",
                      "grid-sm-7": "MuiGrid-grid-sm-7",
                      "grid-sm-8": "MuiGrid-grid-sm-8",
                      "grid-sm-9": "MuiGrid-grid-sm-9",
                      "grid-sm-auto": "MuiGrid-grid-sm-auto",
                      "grid-sm-true": "MuiGrid-grid-sm-true",
                      "grid-xl-1": "MuiGrid-grid-xl-1",
                      "grid-xl-10": "MuiGrid-grid-xl-10",
                      "grid-xl-11": "MuiGrid-grid-xl-11",
                      "grid-xl-12": "MuiGrid-grid-xl-12",
                      "grid-xl-2": "MuiGrid-grid-xl-2",
                      "grid-xl-3": "MuiGrid-grid-xl-3",
                      "grid-xl-4": "MuiGrid-grid-xl-4",
                      "grid-xl-5": "MuiGrid-grid-xl-5",
                      "grid-xl-6": "MuiGrid-grid-xl-6",
                      "grid-xl-7": "MuiGrid-grid-xl-7",
                      "grid-xl-8": "MuiGrid-grid-xl-8",
                      "grid-xl-9": "MuiGrid-grid-xl-9",
                      "grid-xl-auto": "MuiGrid-grid-xl-auto",
                      "grid-xl-true": "MuiGrid-grid-xl-true",
                      "grid-xs-1": "MuiGrid-grid-xs-1",
                      "grid-xs-10": "MuiGrid-grid-xs-10",
                      "grid-xs-11": "MuiGrid-grid-xs-11",
                      "grid-xs-12": "MuiGrid-grid-xs-12",
                      "grid-xs-2": "MuiGrid-grid-xs-2",
                      "grid-xs-3": "MuiGrid-grid-xs-3",
                      "grid-xs-4": "MuiGrid-grid-xs-4",
                      "grid-xs-5": "MuiGrid-grid-xs-5",
                      "grid-xs-6": "MuiGrid-grid-xs-6",
                      "grid-xs-7": "MuiGrid-grid-xs-7",
                      "grid-xs-8": "MuiGrid-grid-xs-8",
                      "grid-xs-9": "MuiGrid-grid-xs-9",
                      "grid-xs-auto": "MuiGrid-grid-xs-auto",
                      "grid-xs-true": "MuiGrid-grid-xs-true",
                      "item": "MuiGrid-item",
                      "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                      "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                      "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                      "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                      "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                      "root": "MuiGrid-root",
                      "spacing-xs-1": "MuiGrid-spacing-xs-1",
                      "spacing-xs-10": "MuiGrid-spacing-xs-10",
                      "spacing-xs-2": "MuiGrid-spacing-xs-2",
                      "spacing-xs-3": "MuiGrid-spacing-xs-3",
                      "spacing-xs-4": "MuiGrid-spacing-xs-4",
                      "spacing-xs-5": "MuiGrid-spacing-xs-5",
                      "spacing-xs-6": "MuiGrid-spacing-xs-6",
                      "spacing-xs-7": "MuiGrid-spacing-xs-7",
                      "spacing-xs-8": "MuiGrid-spacing-xs-8",
                      "spacing-xs-9": "MuiGrid-spacing-xs-9",
                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                      "zeroMinWidth": "MuiGrid-zeroMinWidth",
                    }
                  }
                  item={true}
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "gap": "1rem",
                      "justifyContent": "space-between",
                    }
                  }
                  xs={12}
                >
                  <div
                    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "gap": "1rem",
                        "justifyContent": "space-between",
                      }
                    }
                  >
                    <Styled(MuiBox)
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "gap": "1rem",
                        }
                      }
                    >
                      <div
                        className="MuiBox-root MuiBox-root-1"
                        style={
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "gap": "1rem",
                          }
                        }
                      >
                        <ForwardRef(ArrowBackIcon)
                          className="backButtonRegisterRent"
                          onClick={[Function]}
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="backButtonRegisterRent"
                            onClick={[Function]}
                          >
                            <ForwardRef(SvgIcon)
                              className="backButtonRegisterRent"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                              onClick={[Function]}
                            >
                              <svg
                                aria-hidden={true}
                                className="MuiSvgIcon-root backButtonRegisterRent"
                                focusable="false"
                                onClick={[Function]}
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef(ArrowBackIcon)>
                        <p
                          style={
                            Object {
                              "fontSize": "1.2rem",
                              "fontWeight": 600,
                            }
                          }
                        />
                      </div>
                    </Styled(MuiBox)>
                  </div>
                </ForwardRef(Grid)>
              </WithStyles(ForwardRef(Grid))>
            </div>
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
        <Styled(MuiBox)
          style={
            Object {
              "alignItems": "center",
              "background": "#F7F9FE",
              "display": "flex",
              "flexDirection": "column",
              "justifyContent": "space-between",
              "minHeight": "95%",
            }
          }
        >
          <div
            className="MuiBox-root MuiBox-root-2"
            style={
              Object {
                "alignItems": "center",
                "background": "#F7F9FE",
                "display": "flex",
                "flexDirection": "column",
                "justifyContent": "space-between",
                "minHeight": "95%",
              }
            }
          >
            <WithStyles(ForwardRef(Grid))
              container={true}
              spacing={2}
              style={
                Object {
                  "marginTop": ".5rem",
                  "width": "90%",
                }
              }
            >
              <ForwardRef(Grid)
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                container={true}
                spacing={2}
                style={
                  Object {
                    "marginTop": ".5rem",
                    "width": "90%",
                  }
                }
              >
                <div
                  className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                  style={
                    Object {
                      "marginTop": ".5rem",
                      "width": "90%",
                    }
                  }
                >
                  <WithStyles(ForwardRef(Grid))
                    item={true}
                    xs={12}
                  >
                    <ForwardRef(Grid)
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      item={true}
                      xs={12}
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                      >
                        <WithStyles(ForwardRef(Select))
                          className="selectBuildingBoxRent rentMonthDropdown"
                          disableUnderline={true}
                          fullWidth={true}
                          inputProps={
                            Object {
                              "id": "outlined-age-native-simple",
                              "name": "age",
                            }
                          }
                          native={true}
                          onChange={[Function]}
                          startAdornment={
                            <WithStyles(ForwardRef(InputAdornment))
                              position="start"
                            >
                              <img
                                src={
                                  Object {
                                    "testUri": "../../../packages/blocks/PricingEngine2/assets/calander.png",
                                  }
                                }
                                style={
                                  Object {
                                    "marginLeft": "25px",
                                  }
                                }
                              />
                            </WithStyles(ForwardRef(InputAdornment))>
                          }
                          style={
                            Object {
                              "backgroundColor": "#F9F9F9",
                              "border": "1px solid #f0f0f0",
                              "borderRadius": "100px",
                              "height": "60px",
                            }
                          }
                          value=""
                        >
                          <ForwardRef(Select)
                            className="selectBuildingBoxRent rentMonthDropdown"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "nativeInput": "MuiSelect-nativeInput",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              }
                            }
                            disableUnderline={true}
                            fullWidth={true}
                            inputProps={
                              Object {
                                "id": "outlined-age-native-simple",
                                "name": "age",
                              }
                            }
                            native={true}
                            onChange={[Function]}
                            startAdornment={
                              <WithStyles(ForwardRef(InputAdornment))
                                position="start"
                              >
                                <img
                                  src={
                                    Object {
                                      "testUri": "../../../packages/blocks/PricingEngine2/assets/calander.png",
                                    }
                                  }
                                  style={
                                    Object {
                                      "marginLeft": "25px",
                                    }
                                  }
                                />
                              </WithStyles(ForwardRef(InputAdornment))>
                            }
                            style={
                              Object {
                                "backgroundColor": "#F9F9F9",
                                "border": "1px solid #f0f0f0",
                                "borderRadius": "100px",
                                "height": "60px",
                              }
                            }
                            value=""
                          >
                            <WithStyles(ForwardRef(Input))
                              className="selectBuildingBoxRent rentMonthDropdown"
                              disableUnderline={true}
                              fullWidth={true}
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "disabled": [Function],
                                    "inputRef": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onChange": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "children": Array [
                                    <option
                                      disabled={true}
                                      value=""
                                    >
                                      Month
                                    </option>,
                                    <option
                                      value={1}
                                    >
                                      January
                                    </option>,
                                    <option
                                      value={2}
                                    >
                                      February
                                    </option>,
                                    <option
                                      value={3}
                                    >
                                      March
                                    </option>,
                                    <option
                                      value={4}
                                    >
                                      April
                                    </option>,
                                    <option
                                      value={5}
                                    >
                                      May
                                    </option>,
                                    <option
                                      value={6}
                                    >
                                      June
                                    </option>,
                                    <option
                                      value={7}
                                    >
                                      July
                                    </option>,
                                    <option
                                      value={8}
                                    >
                                      August
                                    </option>,
                                    <option
                                      value={9}
                                    >
                                      September
                                    </option>,
                                    <option
                                      value={10}
                                    >
                                      October
                                    </option>,
                                    <option
                                      value={11}
                                    >
                                      November
                                    </option>,
                                    <option
                                      value={12}
                                    >
                                      December
                                    </option>,
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "nativeInput": "MuiSelect-nativeInput",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "id": "outlined-age-native-simple",
                                  "multiple": false,
                                  "name": "age",
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              onChange={[Function]}
                              startAdornment={
                                <WithStyles(ForwardRef(InputAdornment))
                                  position="start"
                                >
                                  <img
                                    src={
                                      Object {
                                        "testUri": "../../../packages/blocks/PricingEngine2/assets/calander.png",
                                      }
                                    }
                                    style={
                                      Object {
                                        "marginLeft": "25px",
                                      }
                                    }
                                  />
                                </WithStyles(ForwardRef(InputAdornment))>
                              }
                              style={
                                Object {
                                  "backgroundColor": "#F9F9F9",
                                  "border": "1px solid #f0f0f0",
                                  "borderRadius": "100px",
                                  "height": "60px",
                                }
                              }
                              value=""
                            >
                              <ForwardRef(Input)
                                className="selectBuildingBoxRent rentMonthDropdown"
                                classes={
                                  Object {
                                    "colorSecondary": "MuiInput-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInput-formControl",
                                    "fullWidth": "MuiInput-fullWidth",
                                    "input": "MuiInput-input",
                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInput-marginDense",
                                    "multiline": "MuiInput-multiline",
                                    "root": "MuiInput-root",
                                    "underline": "MuiInput-underline",
                                  }
                                }
                                disableUnderline={true}
                                fullWidth={true}
                                inputComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "IconComponent": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "disabled": [Function],
                                      "inputRef": [Function],
                                      "multiple": [Function],
                                      "name": [Function],
                                      "onChange": [Function],
                                      "value": [Function],
                                      "variant": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                inputProps={
                                  Object {
                                    "IconComponent": Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    },
                                    "children": Array [
                                      <option
                                        disabled={true}
                                        value=""
                                      >
                                        Month
                                      </option>,
                                      <option
                                        value={1}
                                      >
                                        January
                                      </option>,
                                      <option
                                        value={2}
                                      >
                                        February
                                      </option>,
                                      <option
                                        value={3}
                                      >
                                        March
                                      </option>,
                                      <option
                                        value={4}
                                      >
                                        April
                                      </option>,
                                      <option
                                        value={5}
                                      >
                                        May
                                      </option>,
                                      <option
                                        value={6}
                                      >
                                        June
                                      </option>,
                                      <option
                                        value={7}
                                      >
                                        July
                                      </option>,
                                      <option
                                        value={8}
                                      >
                                        August
                                      </option>,
                                      <option
                                        value={9}
                                      >
                                        September
                                      </option>,
                                      <option
                                        value={10}
                                      >
                                        October
                                      </option>,
                                      <option
                                        value={11}
                                      >
                                        November
                                      </option>,
                                      <option
                                        value={12}
                                      >
                                        December
                                      </option>,
                                    ],
                                    "classes": Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "nativeInput": "MuiSelect-nativeInput",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    },
                                    "id": "outlined-age-native-simple",
                                    "multiple": false,
                                    "name": "age",
                                    "type": undefined,
                                    "variant": "standard",
                                  }
                                }
                                onChange={[Function]}
                                startAdornment={
                                  <WithStyles(ForwardRef(InputAdornment))
                                    position="start"
                                  >
                                    <img
                                      src={
                                        Object {
                                          "testUri": "../../../packages/blocks/PricingEngine2/assets/calander.png",
                                        }
                                      }
                                      style={
                                        Object {
                                          "marginLeft": "25px",
                                        }
                                      }
                                    />
                                  </WithStyles(ForwardRef(InputAdornment))>
                                }
                                style={
                                  Object {
                                    "backgroundColor": "#F9F9F9",
                                    "border": "1px solid #f0f0f0",
                                    "borderRadius": "100px",
                                    "height": "60px",
                                  }
                                }
                                value=""
                              >
                                <WithStyles(ForwardRef(InputBase))
                                  className="selectBuildingBoxRent rentMonthDropdown"
                                  classes={
                                    Object {
                                      "colorSecondary": "MuiInput-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInput-formControl",
                                      "fullWidth": "MuiInput-fullWidth",
                                      "input": "MuiInput-input",
                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                      "inputMultiline": "MuiInput-inputMultiline",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                      "marginDense": "MuiInput-marginDense",
                                      "multiline": "MuiInput-multiline",
                                      "root": "MuiInput-root",
                                      "underline": null,
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "IconComponent": [Function],
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "disabled": [Function],
                                        "inputRef": [Function],
                                        "multiple": [Function],
                                        "name": [Function],
                                        "onChange": [Function],
                                        "value": [Function],
                                        "variant": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  inputProps={
                                    Object {
                                      "IconComponent": Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      },
                                      "children": Array [
                                        <option
                                          disabled={true}
                                          value=""
                                        >
                                          Month
                                        </option>,
                                        <option
                                          value={1}
                                        >
                                          January
                                        </option>,
                                        <option
                                          value={2}
                                        >
                                          February
                                        </option>,
                                        <option
                                          value={3}
                                        >
                                          March
                                        </option>,
                                        <option
                                          value={4}
                                        >
                                          April
                                        </option>,
                                        <option
                                          value={5}
                                        >
                                          May
                                        </option>,
                                        <option
                                          value={6}
                                        >
                                          June
                                        </option>,
                                        <option
                                          value={7}
                                        >
                                          July
                                        </option>,
                                        <option
                                          value={8}
                                        >
                                          August
                                        </option>,
                                        <option
                                          value={9}
                                        >
                                          September
                                        </option>,
                                        <option
                                          value={10}
                                        >
                                          October
                                        </option>,
                                        <option
                                          value={11}
                                        >
                                          November
                                        </option>,
                                        <option
                                          value={12}
                                        >
                                          December
                                        </option>,
                                      ],
                                      "classes": Object {
                                        "disabled": "Mui-disabled",
                                        "filled": "MuiSelect-filled",
                                        "icon": "MuiSelect-icon",
                                        "iconFilled": "MuiSelect-iconFilled",
                                        "iconOpen": "MuiSelect-iconOpen",
                                        "iconOutlined": "MuiSelect-iconOutlined",
                                        "nativeInput": "MuiSelect-nativeInput",
                                        "outlined": "MuiSelect-outlined",
                                        "root": "MuiSelect-root",
                                        "select": "MuiSelect-select",
                                        "selectMenu": "MuiSelect-selectMenu",
                                      },
                                      "id": "outlined-age-native-simple",
                                      "multiple": false,
                                      "name": "age",
                                      "type": undefined,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  startAdornment={
                                    <WithStyles(ForwardRef(InputAdornment))
                                      position="start"
                                    >
                                      <img
                                        src={
                                          Object {
                                            "testUri": "../../../packages/blocks/PricingEngine2/assets/calander.png",
                                          }
                                        }
                                        style={
                                          Object {
                                            "marginLeft": "25px",
                                          }
                                        }
                                      />
                                    </WithStyles(ForwardRef(InputAdornment))>
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "#F9F9F9",
                                      "border": "1px solid #f0f0f0",
                                      "borderRadius": "100px",
                                      "height": "60px",
                                    }
                                  }
                                  type="text"
                                  value=""
                                >
                                  <ForwardRef(InputBase)
                                    className="selectBuildingBoxRent rentMonthDropdown"
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                        "disabled": "Mui-disabled Mui-disabled",
                                        "error": "Mui-error Mui-error",
                                        "focused": "Mui-focused Mui-focused",
                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                        "input": "MuiInputBase-input MuiInput-input",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                        "root": "MuiInputBase-root MuiInput-root",
                                      }
                                    }
                                    fullWidth={true}
                                    inputComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "IconComponent": [Function],
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "disabled": [Function],
                                          "inputRef": [Function],
                                          "multiple": [Function],
                                          "name": [Function],
                                          "onChange": [Function],
                                          "value": [Function],
                                          "variant": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    inputProps={
                                      Object {
                                        "IconComponent": Object {
                                          "$$typeof": Symbol(react.memo),
                                          "compare": null,
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                        },
                                        "children": Array [
                                          <option
                                            disabled={true}
                                            value=""
                                          >
                                            Month
                                          </option>,
                                          <option
                                            value={1}
                                          >
                                            January
                                          </option>,
                                          <option
                                            value={2}
                                          >
                                            February
                                          </option>,
                                          <option
                                            value={3}
                                          >
                                            March
                                          </option>,
                                          <option
                                            value={4}
                                          >
                                            April
                                          </option>,
                                          <option
                                            value={5}
                                          >
                                            May
                                          </option>,
                                          <option
                                            value={6}
                                          >
                                            June
                                          </option>,
                                          <option
                                            value={7}
                                          >
                                            July
                                          </option>,
                                          <option
                                            value={8}
                                          >
                                            August
                                          </option>,
                                          <option
                                            value={9}
                                          >
                                            September
                                          </option>,
                                          <option
                                            value={10}
                                          >
                                            October
                                          </option>,
                                          <option
                                            value={11}
                                          >
                                            November
                                          </option>,
                                          <option
                                            value={12}
                                          >
                                            December
                                          </option>,
                                        ],
                                        "classes": Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiSelect-filled",
                                          "icon": "MuiSelect-icon",
                                          "iconFilled": "MuiSelect-iconFilled",
                                          "iconOpen": "MuiSelect-iconOpen",
                                          "iconOutlined": "MuiSelect-iconOutlined",
                                          "nativeInput": "MuiSelect-nativeInput",
                                          "outlined": "MuiSelect-outlined",
                                          "root": "MuiSelect-root",
                                          "select": "MuiSelect-select",
                                          "selectMenu": "MuiSelect-selectMenu",
                                        },
                                        "id": "outlined-age-native-simple",
                                        "multiple": false,
                                        "name": "age",
                                        "type": undefined,
                                        "variant": "standard",
                                      }
                                    }
                                    multiline={false}
                                    onChange={[Function]}
                                    startAdornment={
                                      <WithStyles(ForwardRef(InputAdornment))
                                        position="start"
                                      >
                                        <img
                                          src={
                                            Object {
                                              "testUri": "../../../packages/blocks/PricingEngine2/assets/calander.png",
                                            }
                                          }
                                          style={
                                            Object {
                                              "marginLeft": "25px",
                                            }
                                          }
                                        />
                                      </WithStyles(ForwardRef(InputAdornment))>
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "#F9F9F9",
                                        "border": "1px solid #f0f0f0",
                                        "borderRadius": "100px",
                                        "height": "60px",
                                      }
                                    }
                                    type="text"
                                    value=""
                                  >
                                    <div
                                      className="MuiInputBase-root MuiInput-root selectBuildingBoxRent rentMonthDropdown MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-adornedStart"
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "backgroundColor": "#F9F9F9",
                                          "border": "1px solid #f0f0f0",
                                          "borderRadius": "100px",
                                          "height": "60px",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(InputAdornment))
                                        position="start"
                                      >
                                        <ForwardRef(InputAdornment)
                                          classes={
                                            Object {
                                              "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                              "filled": "MuiInputAdornment-filled",
                                              "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                              "marginDense": "MuiInputAdornment-marginDense",
                                              "positionEnd": "MuiInputAdornment-positionEnd",
                                              "positionStart": "MuiInputAdornment-positionStart",
                                              "root": "MuiInputAdornment-root",
                                            }
                                          }
                                          position="start"
                                        >
                                          <div
                                            className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                          >
                                            <img
                                              src={
                                                Object {
                                                  "testUri": "../../../packages/blocks/PricingEngine2/assets/calander.png",
                                                }
                                              }
                                              style={
                                                Object {
                                                  "marginLeft": "25px",
                                                }
                                              }
                                            />
                                          </div>
                                        </ForwardRef(InputAdornment)>
                                      </WithStyles(ForwardRef(InputAdornment))>
                                      <ForwardRef(NativeSelectInput)
                                        IconComponent={
                                          Object {
                                            "$$typeof": Symbol(react.memo),
                                            "compare": null,
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            },
                                          }
                                        }
                                        className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "filled": "MuiSelect-filled",
                                            "icon": "MuiSelect-icon",
                                            "iconFilled": "MuiSelect-iconFilled",
                                            "iconOpen": "MuiSelect-iconOpen",
                                            "iconOutlined": "MuiSelect-iconOutlined",
                                            "nativeInput": "MuiSelect-nativeInput",
                                            "outlined": "MuiSelect-outlined",
                                            "root": "MuiSelect-root",
                                            "select": "MuiSelect-select",
                                            "selectMenu": "MuiSelect-selectMenu",
                                          }
                                        }
                                        id="outlined-age-native-simple"
                                        inputRef={[Function]}
                                        multiple={false}
                                        name="age"
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value=""
                                        variant="standard"
                                      >
                                        <select
                                          className="MuiSelect-root MuiSelect-select MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                          id="outlined-age-native-simple"
                                          multiple={false}
                                          name="age"
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value=""
                                        >
                                          <option
                                            disabled={true}
                                            value=""
                                          >
                                            Month
                                          </option>
                                          <option
                                            value={1}
                                          >
                                            January
                                          </option>
                                          <option
                                            value={2}
                                          >
                                            February
                                          </option>
                                          <option
                                            value={3}
                                          >
                                            March
                                          </option>
                                          <option
                                            value={4}
                                          >
                                            April
                                          </option>
                                          <option
                                            value={5}
                                          >
                                            May
                                          </option>
                                          <option
                                            value={6}
                                          >
                                            June
                                          </option>
                                          <option
                                            value={7}
                                          >
                                            July
                                          </option>
                                          <option
                                            value={8}
                                          >
                                            August
                                          </option>
                                          <option
                                            value={9}
                                          >
                                            September
                                          </option>
                                          <option
                                            value={10}
                                          >
                                            October
                                          </option>
                                          <option
                                            value={11}
                                          >
                                            November
                                          </option>
                                          <option
                                            value={12}
                                          >
                                            December
                                          </option>
                                        </select>
                                        <ForwardRef(ArrowDropDownIcon)
                                          className="MuiSelect-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiSelect-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiSelect-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiSelect-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M7 10l5 5 5-5z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(ArrowDropDownIcon)>
                                      </ForwardRef(NativeSelectInput)>
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </ForwardRef(Input)>
                            </WithStyles(ForwardRef(Input))>
                          </ForwardRef(Select)>
                        </WithStyles(ForwardRef(Select))>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                  <WithStyles(ForwardRef(Grid))
                    item={true}
                    xs={12}
                  >
                    <ForwardRef(Grid)
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      item={true}
                      xs={12}
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                      >
                        <WithStyles(ForwardRef(Select))
                          className="selectBuildingBoxRent rentBuildingDropdown"
                          disableUnderline={true}
                          fullWidth={true}
                          inputProps={
                            Object {
                              "id": "outlined-age-native-simple",
                              "name": "age",
                            }
                          }
                          native={true}
                          onChange={[Function]}
                          startAdornment={
                            <WithStyles(ForwardRef(InputAdornment))
                              position="start"
                            >
                              <img
                                src={
                                  Object {
                                    "testUri": "../../../packages/blocks/CollectTransactionFees/assets/Building.png",
                                  }
                                }
                                style={
                                  Object {
                                    "marginLeft": "25px",
                                  }
                                }
                              />
                            </WithStyles(ForwardRef(InputAdornment))>
                          }
                          style={
                            Object {
                              "backgroundColor": "#F9F9F9",
                              "border": "1px solid #f0f0f0",
                              "borderRadius": "100px",
                              "height": "60px",
                            }
                          }
                          value=""
                        >
                          <ForwardRef(Select)
                            className="selectBuildingBoxRent rentBuildingDropdown"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "nativeInput": "MuiSelect-nativeInput",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              }
                            }
                            disableUnderline={true}
                            fullWidth={true}
                            inputProps={
                              Object {
                                "id": "outlined-age-native-simple",
                                "name": "age",
                              }
                            }
                            native={true}
                            onChange={[Function]}
                            startAdornment={
                              <WithStyles(ForwardRef(InputAdornment))
                                position="start"
                              >
                                <img
                                  src={
                                    Object {
                                      "testUri": "../../../packages/blocks/CollectTransactionFees/assets/Building.png",
                                    }
                                  }
                                  style={
                                    Object {
                                      "marginLeft": "25px",
                                    }
                                  }
                                />
                              </WithStyles(ForwardRef(InputAdornment))>
                            }
                            style={
                              Object {
                                "backgroundColor": "#F9F9F9",
                                "border": "1px solid #f0f0f0",
                                "borderRadius": "100px",
                                "height": "60px",
                              }
                            }
                            value=""
                          >
                            <WithStyles(ForwardRef(Input))
                              className="selectBuildingBoxRent rentBuildingDropdown"
                              disableUnderline={true}
                              fullWidth={true}
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "disabled": [Function],
                                    "inputRef": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onChange": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "children": Array [
                                    <option
                                      disabled={true}
                                      value=""
                                    >
                                      Building Name
                                    </option>,
                                    Array [],
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "nativeInput": "MuiSelect-nativeInput",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "id": "outlined-age-native-simple",
                                  "multiple": false,
                                  "name": "age",
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              onChange={[Function]}
                              startAdornment={
                                <WithStyles(ForwardRef(InputAdornment))
                                  position="start"
                                >
                                  <img
                                    src={
                                      Object {
                                        "testUri": "../../../packages/blocks/CollectTransactionFees/assets/Building.png",
                                      }
                                    }
                                    style={
                                      Object {
                                        "marginLeft": "25px",
                                      }
                                    }
                                  />
                                </WithStyles(ForwardRef(InputAdornment))>
                              }
                              style={
                                Object {
                                  "backgroundColor": "#F9F9F9",
                                  "border": "1px solid #f0f0f0",
                                  "borderRadius": "100px",
                                  "height": "60px",
                                }
                              }
                              value=""
                            >
                              <ForwardRef(Input)
                                className="selectBuildingBoxRent rentBuildingDropdown"
                                classes={
                                  Object {
                                    "colorSecondary": "MuiInput-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInput-formControl",
                                    "fullWidth": "MuiInput-fullWidth",
                                    "input": "MuiInput-input",
                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInput-marginDense",
                                    "multiline": "MuiInput-multiline",
                                    "root": "MuiInput-root",
                                    "underline": "MuiInput-underline",
                                  }
                                }
                                disableUnderline={true}
                                fullWidth={true}
                                inputComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "IconComponent": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "disabled": [Function],
                                      "inputRef": [Function],
                                      "multiple": [Function],
                                      "name": [Function],
                                      "onChange": [Function],
                                      "value": [Function],
                                      "variant": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                inputProps={
                                  Object {
                                    "IconComponent": Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    },
                                    "children": Array [
                                      <option
                                        disabled={true}
                                        value=""
                                      >
                                        Building Name
                                      </option>,
                                      Array [],
                                    ],
                                    "classes": Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "nativeInput": "MuiSelect-nativeInput",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    },
                                    "id": "outlined-age-native-simple",
                                    "multiple": false,
                                    "name": "age",
                                    "type": undefined,
                                    "variant": "standard",
                                  }
                                }
                                onChange={[Function]}
                                startAdornment={
                                  <WithStyles(ForwardRef(InputAdornment))
                                    position="start"
                                  >
                                    <img
                                      src={
                                        Object {
                                          "testUri": "../../../packages/blocks/CollectTransactionFees/assets/Building.png",
                                        }
                                      }
                                      style={
                                        Object {
                                          "marginLeft": "25px",
                                        }
                                      }
                                    />
                                  </WithStyles(ForwardRef(InputAdornment))>
                                }
                                style={
                                  Object {
                                    "backgroundColor": "#F9F9F9",
                                    "border": "1px solid #f0f0f0",
                                    "borderRadius": "100px",
                                    "height": "60px",
                                  }
                                }
                                value=""
                              >
                                <WithStyles(ForwardRef(InputBase))
                                  className="selectBuildingBoxRent rentBuildingDropdown"
                                  classes={
                                    Object {
                                      "colorSecondary": "MuiInput-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInput-formControl",
                                      "fullWidth": "MuiInput-fullWidth",
                                      "input": "MuiInput-input",
                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                      "inputMultiline": "MuiInput-inputMultiline",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                      "marginDense": "MuiInput-marginDense",
                                      "multiline": "MuiInput-multiline",
                                      "root": "MuiInput-root",
                                      "underline": null,
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "IconComponent": [Function],
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "disabled": [Function],
                                        "inputRef": [Function],
                                        "multiple": [Function],
                                        "name": [Function],
                                        "onChange": [Function],
                                        "value": [Function],
                                        "variant": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  inputProps={
                                    Object {
                                      "IconComponent": Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      },
                                      "children": Array [
                                        <option
                                          disabled={true}
                                          value=""
                                        >
                                          Building Name
                                        </option>,
                                        Array [],
                                      ],
                                      "classes": Object {
                                        "disabled": "Mui-disabled",
                                        "filled": "MuiSelect-filled",
                                        "icon": "MuiSelect-icon",
                                        "iconFilled": "MuiSelect-iconFilled",
                                        "iconOpen": "MuiSelect-iconOpen",
                                        "iconOutlined": "MuiSelect-iconOutlined",
                                        "nativeInput": "MuiSelect-nativeInput",
                                        "outlined": "MuiSelect-outlined",
                                        "root": "MuiSelect-root",
                                        "select": "MuiSelect-select",
                                        "selectMenu": "MuiSelect-selectMenu",
                                      },
                                      "id": "outlined-age-native-simple",
                                      "multiple": false,
                                      "name": "age",
                                      "type": undefined,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  startAdornment={
                                    <WithStyles(ForwardRef(InputAdornment))
                                      position="start"
                                    >
                                      <img
                                        src={
                                          Object {
                                            "testUri": "../../../packages/blocks/CollectTransactionFees/assets/Building.png",
                                          }
                                        }
                                        style={
                                          Object {
                                            "marginLeft": "25px",
                                          }
                                        }
                                      />
                                    </WithStyles(ForwardRef(InputAdornment))>
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "#F9F9F9",
                                      "border": "1px solid #f0f0f0",
                                      "borderRadius": "100px",
                                      "height": "60px",
                                    }
                                  }
                                  type="text"
                                  value=""
                                >
                                  <ForwardRef(InputBase)
                                    className="selectBuildingBoxRent rentBuildingDropdown"
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                        "disabled": "Mui-disabled Mui-disabled",
                                        "error": "Mui-error Mui-error",
                                        "focused": "Mui-focused Mui-focused",
                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                        "input": "MuiInputBase-input MuiInput-input",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                        "root": "MuiInputBase-root MuiInput-root",
                                      }
                                    }
                                    fullWidth={true}
                                    inputComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "IconComponent": [Function],
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "disabled": [Function],
                                          "inputRef": [Function],
                                          "multiple": [Function],
                                          "name": [Function],
                                          "onChange": [Function],
                                          "value": [Function],
                                          "variant": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    inputProps={
                                      Object {
                                        "IconComponent": Object {
                                          "$$typeof": Symbol(react.memo),
                                          "compare": null,
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                        },
                                        "children": Array [
                                          <option
                                            disabled={true}
                                            value=""
                                          >
                                            Building Name
                                          </option>,
                                          Array [],
                                        ],
                                        "classes": Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiSelect-filled",
                                          "icon": "MuiSelect-icon",
                                          "iconFilled": "MuiSelect-iconFilled",
                                          "iconOpen": "MuiSelect-iconOpen",
                                          "iconOutlined": "MuiSelect-iconOutlined",
                                          "nativeInput": "MuiSelect-nativeInput",
                                          "outlined": "MuiSelect-outlined",
                                          "root": "MuiSelect-root",
                                          "select": "MuiSelect-select",
                                          "selectMenu": "MuiSelect-selectMenu",
                                        },
                                        "id": "outlined-age-native-simple",
                                        "multiple": false,
                                        "name": "age",
                                        "type": undefined,
                                        "variant": "standard",
                                      }
                                    }
                                    multiline={false}
                                    onChange={[Function]}
                                    startAdornment={
                                      <WithStyles(ForwardRef(InputAdornment))
                                        position="start"
                                      >
                                        <img
                                          src={
                                            Object {
                                              "testUri": "../../../packages/blocks/CollectTransactionFees/assets/Building.png",
                                            }
                                          }
                                          style={
                                            Object {
                                              "marginLeft": "25px",
                                            }
                                          }
                                        />
                                      </WithStyles(ForwardRef(InputAdornment))>
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "#F9F9F9",
                                        "border": "1px solid #f0f0f0",
                                        "borderRadius": "100px",
                                        "height": "60px",
                                      }
                                    }
                                    type="text"
                                    value=""
                                  >
                                    <div
                                      className="MuiInputBase-root MuiInput-root selectBuildingBoxRent rentBuildingDropdown MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-adornedStart"
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "backgroundColor": "#F9F9F9",
                                          "border": "1px solid #f0f0f0",
                                          "borderRadius": "100px",
                                          "height": "60px",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(InputAdornment))
                                        position="start"
                                      >
                                        <ForwardRef(InputAdornment)
                                          classes={
                                            Object {
                                              "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                              "filled": "MuiInputAdornment-filled",
                                              "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                              "marginDense": "MuiInputAdornment-marginDense",
                                              "positionEnd": "MuiInputAdornment-positionEnd",
                                              "positionStart": "MuiInputAdornment-positionStart",
                                              "root": "MuiInputAdornment-root",
                                            }
                                          }
                                          position="start"
                                        >
                                          <div
                                            className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                          >
                                            <img
                                              src={
                                                Object {
                                                  "testUri": "../../../packages/blocks/CollectTransactionFees/assets/Building.png",
                                                }
                                              }
                                              style={
                                                Object {
                                                  "marginLeft": "25px",
                                                }
                                              }
                                            />
                                          </div>
                                        </ForwardRef(InputAdornment)>
                                      </WithStyles(ForwardRef(InputAdornment))>
                                      <ForwardRef(NativeSelectInput)
                                        IconComponent={
                                          Object {
                                            "$$typeof": Symbol(react.memo),
                                            "compare": null,
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            },
                                          }
                                        }
                                        className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "filled": "MuiSelect-filled",
                                            "icon": "MuiSelect-icon",
                                            "iconFilled": "MuiSelect-iconFilled",
                                            "iconOpen": "MuiSelect-iconOpen",
                                            "iconOutlined": "MuiSelect-iconOutlined",
                                            "nativeInput": "MuiSelect-nativeInput",
                                            "outlined": "MuiSelect-outlined",
                                            "root": "MuiSelect-root",
                                            "select": "MuiSelect-select",
                                            "selectMenu": "MuiSelect-selectMenu",
                                          }
                                        }
                                        id="outlined-age-native-simple"
                                        inputRef={[Function]}
                                        multiple={false}
                                        name="age"
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value=""
                                        variant="standard"
                                      >
                                        <select
                                          className="MuiSelect-root MuiSelect-select MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                          id="outlined-age-native-simple"
                                          multiple={false}
                                          name="age"
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value=""
                                        >
                                          <option
                                            disabled={true}
                                            value=""
                                          >
                                            Building Name
                                          </option>
                                        </select>
                                        <ForwardRef(ArrowDropDownIcon)
                                          className="MuiSelect-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiSelect-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiSelect-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiSelect-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M7 10l5 5 5-5z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(ArrowDropDownIcon)>
                                      </ForwardRef(NativeSelectInput)>
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </ForwardRef(Input)>
                            </WithStyles(ForwardRef(Input))>
                          </ForwardRef(Select)>
                        </WithStyles(ForwardRef(Select))>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                  <WithStyles(ForwardRef(Grid))
                    item={true}
                    xs={12}
                  >
                    <ForwardRef(Grid)
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      item={true}
                      xs={12}
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                      >
                        <WithStyles(ForwardRef(Select))
                          className="selectBuildingBoxRent"
                          disableUnderline={true}
                          fullWidth={true}
                          inputProps={
                            Object {
                              "id": "outlined-age-native-simple",
                              "name": "age",
                            }
                          }
                          native={true}
                          onChange={[Function]}
                          startAdornment={
                            <WithStyles(ForwardRef(InputAdornment))
                              position="start"
                            >
                              <img
                                src={
                                  Object {
                                    "testUri": "../../../packages/blocks/CollectTransactionFees/assets/unit.png",
                                  }
                                }
                                style={
                                  Object {
                                    "marginLeft": "25px",
                                  }
                                }
                              />
                            </WithStyles(ForwardRef(InputAdornment))>
                          }
                          style={
                            Object {
                              "backgroundColor": "#F9F9F9",
                              "border": "1px solid #f0f0f0",
                              "borderRadius": "100px",
                              "height": "50px",
                            }
                          }
                          value=""
                        >
                          <ForwardRef(Select)
                            className="selectBuildingBoxRent"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined",
                                "nativeInput": "MuiSelect-nativeInput",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select",
                                "selectMenu": "MuiSelect-selectMenu",
                              }
                            }
                            disableUnderline={true}
                            fullWidth={true}
                            inputProps={
                              Object {
                                "id": "outlined-age-native-simple",
                                "name": "age",
                              }
                            }
                            native={true}
                            onChange={[Function]}
                            startAdornment={
                              <WithStyles(ForwardRef(InputAdornment))
                                position="start"
                              >
                                <img
                                  src={
                                    Object {
                                      "testUri": "../../../packages/blocks/CollectTransactionFees/assets/unit.png",
                                    }
                                  }
                                  style={
                                    Object {
                                      "marginLeft": "25px",
                                    }
                                  }
                                />
                              </WithStyles(ForwardRef(InputAdornment))>
                            }
                            style={
                              Object {
                                "backgroundColor": "#F9F9F9",
                                "border": "1px solid #f0f0f0",
                                "borderRadius": "100px",
                                "height": "50px",
                              }
                            }
                            value=""
                          >
                            <WithStyles(ForwardRef(Input))
                              className="selectBuildingBoxRent"
                              disableUnderline={true}
                              fullWidth={true}
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "disabled": [Function],
                                    "inputRef": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onChange": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "children": Array [
                                    <option
                                      disabled={true}
                                      value=""
                                    >
                                      Unit Number
                                    </option>,
                                    Array [],
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "nativeInput": "MuiSelect-nativeInput",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "id": "outlined-age-native-simple",
                                  "multiple": false,
                                  "name": "age",
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              onChange={[Function]}
                              startAdornment={
                                <WithStyles(ForwardRef(InputAdornment))
                                  position="start"
                                >
                                  <img
                                    src={
                                      Object {
                                        "testUri": "../../../packages/blocks/CollectTransactionFees/assets/unit.png",
                                      }
                                    }
                                    style={
                                      Object {
                                        "marginLeft": "25px",
                                      }
                                    }
                                  />
                                </WithStyles(ForwardRef(InputAdornment))>
                              }
                              style={
                                Object {
                                  "backgroundColor": "#F9F9F9",
                                  "border": "1px solid #f0f0f0",
                                  "borderRadius": "100px",
                                  "height": "50px",
                                }
                              }
                              value=""
                            >
                              <ForwardRef(Input)
                                className="selectBuildingBoxRent"
                                classes={
                                  Object {
                                    "colorSecondary": "MuiInput-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInput-formControl",
                                    "fullWidth": "MuiInput-fullWidth",
                                    "input": "MuiInput-input",
                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                    "marginDense": "MuiInput-marginDense",
                                    "multiline": "MuiInput-multiline",
                                    "root": "MuiInput-root",
                                    "underline": "MuiInput-underline",
                                  }
                                }
                                disableUnderline={true}
                                fullWidth={true}
                                inputComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "propTypes": Object {
                                      "IconComponent": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "classes": [Function],
                                      "disabled": [Function],
                                      "inputRef": [Function],
                                      "multiple": [Function],
                                      "name": [Function],
                                      "onChange": [Function],
                                      "value": [Function],
                                      "variant": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                inputProps={
                                  Object {
                                    "IconComponent": Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    },
                                    "children": Array [
                                      <option
                                        disabled={true}
                                        value=""
                                      >
                                        Unit Number
                                      </option>,
                                      Array [],
                                    ],
                                    "classes": Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "nativeInput": "MuiSelect-nativeInput",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    },
                                    "id": "outlined-age-native-simple",
                                    "multiple": false,
                                    "name": "age",
                                    "type": undefined,
                                    "variant": "standard",
                                  }
                                }
                                onChange={[Function]}
                                startAdornment={
                                  <WithStyles(ForwardRef(InputAdornment))
                                    position="start"
                                  >
                                    <img
                                      src={
                                        Object {
                                          "testUri": "../../../packages/blocks/CollectTransactionFees/assets/unit.png",
                                        }
                                      }
                                      style={
                                        Object {
                                          "marginLeft": "25px",
                                        }
                                      }
                                    />
                                  </WithStyles(ForwardRef(InputAdornment))>
                                }
                                style={
                                  Object {
                                    "backgroundColor": "#F9F9F9",
                                    "border": "1px solid #f0f0f0",
                                    "borderRadius": "100px",
                                    "height": "50px",
                                  }
                                }
                                value=""
                              >
                                <WithStyles(ForwardRef(InputBase))
                                  className="selectBuildingBoxRent"
                                  classes={
                                    Object {
                                      "colorSecondary": "MuiInput-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInput-formControl",
                                      "fullWidth": "MuiInput-fullWidth",
                                      "input": "MuiInput-input",
                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                      "inputMultiline": "MuiInput-inputMultiline",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                      "marginDense": "MuiInput-marginDense",
                                      "multiline": "MuiInput-multiline",
                                      "root": "MuiInput-root",
                                      "underline": null,
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "propTypes": Object {
                                        "IconComponent": [Function],
                                        "children": [Function],
                                        "className": [Function],
                                        "classes": [Function],
                                        "disabled": [Function],
                                        "inputRef": [Function],
                                        "multiple": [Function],
                                        "name": [Function],
                                        "onChange": [Function],
                                        "value": [Function],
                                        "variant": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  inputProps={
                                    Object {
                                      "IconComponent": Object {
                                        "$$typeof": Symbol(react.memo),
                                        "compare": null,
                                        "type": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "render": [Function],
                                        },
                                      },
                                      "children": Array [
                                        <option
                                          disabled={true}
                                          value=""
                                        >
                                          Unit Number
                                        </option>,
                                        Array [],
                                      ],
                                      "classes": Object {
                                        "disabled": "Mui-disabled",
                                        "filled": "MuiSelect-filled",
                                        "icon": "MuiSelect-icon",
                                        "iconFilled": "MuiSelect-iconFilled",
                                        "iconOpen": "MuiSelect-iconOpen",
                                        "iconOutlined": "MuiSelect-iconOutlined",
                                        "nativeInput": "MuiSelect-nativeInput",
                                        "outlined": "MuiSelect-outlined",
                                        "root": "MuiSelect-root",
                                        "select": "MuiSelect-select",
                                        "selectMenu": "MuiSelect-selectMenu",
                                      },
                                      "id": "outlined-age-native-simple",
                                      "multiple": false,
                                      "name": "age",
                                      "type": undefined,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  onChange={[Function]}
                                  startAdornment={
                                    <WithStyles(ForwardRef(InputAdornment))
                                      position="start"
                                    >
                                      <img
                                        src={
                                          Object {
                                            "testUri": "../../../packages/blocks/CollectTransactionFees/assets/unit.png",
                                          }
                                        }
                                        style={
                                          Object {
                                            "marginLeft": "25px",
                                          }
                                        }
                                      />
                                    </WithStyles(ForwardRef(InputAdornment))>
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "#F9F9F9",
                                      "border": "1px solid #f0f0f0",
                                      "borderRadius": "100px",
                                      "height": "50px",
                                    }
                                  }
                                  type="text"
                                  value=""
                                >
                                  <ForwardRef(InputBase)
                                    className="selectBuildingBoxRent"
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                        "disabled": "Mui-disabled Mui-disabled",
                                        "error": "Mui-error Mui-error",
                                        "focused": "Mui-focused Mui-focused",
                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                        "input": "MuiInputBase-input MuiInput-input",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                        "root": "MuiInputBase-root MuiInput-root",
                                      }
                                    }
                                    fullWidth={true}
                                    inputComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "propTypes": Object {
                                          "IconComponent": [Function],
                                          "children": [Function],
                                          "className": [Function],
                                          "classes": [Function],
                                          "disabled": [Function],
                                          "inputRef": [Function],
                                          "multiple": [Function],
                                          "name": [Function],
                                          "onChange": [Function],
                                          "value": [Function],
                                          "variant": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    inputProps={
                                      Object {
                                        "IconComponent": Object {
                                          "$$typeof": Symbol(react.memo),
                                          "compare": null,
                                          "type": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "render": [Function],
                                          },
                                        },
                                        "children": Array [
                                          <option
                                            disabled={true}
                                            value=""
                                          >
                                            Unit Number
                                          </option>,
                                          Array [],
                                        ],
                                        "classes": Object {
                                          "disabled": "Mui-disabled",
                                          "filled": "MuiSelect-filled",
                                          "icon": "MuiSelect-icon",
                                          "iconFilled": "MuiSelect-iconFilled",
                                          "iconOpen": "MuiSelect-iconOpen",
                                          "iconOutlined": "MuiSelect-iconOutlined",
                                          "nativeInput": "MuiSelect-nativeInput",
                                          "outlined": "MuiSelect-outlined",
                                          "root": "MuiSelect-root",
                                          "select": "MuiSelect-select",
                                          "selectMenu": "MuiSelect-selectMenu",
                                        },
                                        "id": "outlined-age-native-simple",
                                        "multiple": false,
                                        "name": "age",
                                        "type": undefined,
                                        "variant": "standard",
                                      }
                                    }
                                    multiline={false}
                                    onChange={[Function]}
                                    startAdornment={
                                      <WithStyles(ForwardRef(InputAdornment))
                                        position="start"
                                      >
                                        <img
                                          src={
                                            Object {
                                              "testUri": "../../../packages/blocks/CollectTransactionFees/assets/unit.png",
                                            }
                                          }
                                          style={
                                            Object {
                                              "marginLeft": "25px",
                                            }
                                          }
                                        />
                                      </WithStyles(ForwardRef(InputAdornment))>
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "#F9F9F9",
                                        "border": "1px solid #f0f0f0",
                                        "borderRadius": "100px",
                                        "height": "50px",
                                      }
                                    }
                                    type="text"
                                    value=""
                                  >
                                    <div
                                      className="MuiInputBase-root MuiInput-root selectBuildingBoxRent MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-adornedStart"
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "backgroundColor": "#F9F9F9",
                                          "border": "1px solid #f0f0f0",
                                          "borderRadius": "100px",
                                          "height": "50px",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(InputAdornment))
                                        position="start"
                                      >
                                        <ForwardRef(InputAdornment)
                                          classes={
                                            Object {
                                              "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                              "filled": "MuiInputAdornment-filled",
                                              "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                              "marginDense": "MuiInputAdornment-marginDense",
                                              "positionEnd": "MuiInputAdornment-positionEnd",
                                              "positionStart": "MuiInputAdornment-positionStart",
                                              "root": "MuiInputAdornment-root",
                                            }
                                          }
                                          position="start"
                                        >
                                          <div
                                            className="MuiInputAdornment-root MuiInputAdornment-positionStart"
                                          >
                                            <img
                                              src={
                                                Object {
                                                  "testUri": "../../../packages/blocks/CollectTransactionFees/assets/unit.png",
                                                }
                                              }
                                              style={
                                                Object {
                                                  "marginLeft": "25px",
                                                }
                                              }
                                            />
                                          </div>
                                        </ForwardRef(InputAdornment)>
                                      </WithStyles(ForwardRef(InputAdornment))>
                                      <ForwardRef(NativeSelectInput)
                                        IconComponent={
                                          Object {
                                            "$$typeof": Symbol(react.memo),
                                            "compare": null,
                                            "type": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "render": [Function],
                                            },
                                          }
                                        }
                                        className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "filled": "MuiSelect-filled",
                                            "icon": "MuiSelect-icon",
                                            "iconFilled": "MuiSelect-iconFilled",
                                            "iconOpen": "MuiSelect-iconOpen",
                                            "iconOutlined": "MuiSelect-iconOutlined",
                                            "nativeInput": "MuiSelect-nativeInput",
                                            "outlined": "MuiSelect-outlined",
                                            "root": "MuiSelect-root",
                                            "select": "MuiSelect-select",
                                            "selectMenu": "MuiSelect-selectMenu",
                                          }
                                        }
                                        id="outlined-age-native-simple"
                                        inputRef={[Function]}
                                        multiple={false}
                                        name="age"
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value=""
                                        variant="standard"
                                      >
                                        <select
                                          className="MuiSelect-root MuiSelect-select MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
                                          id="outlined-age-native-simple"
                                          multiple={false}
                                          name="age"
                                          onAnimationStart={[Function]}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value=""
                                        >
                                          <option
                                            disabled={true}
                                            value=""
                                          >
                                            Unit Number
                                          </option>
                                        </select>
                                        <ForwardRef(ArrowDropDownIcon)
                                          className="MuiSelect-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiSelect-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiSelect-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiSelect-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M7 10l5 5 5-5z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(ArrowDropDownIcon)>
                                      </ForwardRef(NativeSelectInput)>
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </ForwardRef(Input)>
                            </WithStyles(ForwardRef(Input))>
                          </ForwardRef(Select)>
                        </WithStyles(ForwardRef(Select))>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                  <WithStyles(ForwardRef(Grid))
                    item={true}
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "marginBottom": "5px",
                      }
                    }
                    xs={12}
                  >
                    <ForwardRef(Grid)
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      item={true}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "marginBottom": "5px",
                        }
                      }
                      xs={12}
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                        style={
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "marginBottom": "5px",
                          }
                        }
                      >
                        <WithStyles(ForwardRef(Typography))
                          color="textSecondary"
                          variant="subtitle2"
                        >
                          <ForwardRef(Typography)
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textSecondary"
                            variant="subtitle2"
                          >
                            <h6
                              className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-colorTextSecondary"
                            >
                              :
                            </h6>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                        <WithStyles(ForwardRef(Typography))
                          color="textPrimary"
                          style={
                            Object {
                              "fontWeight": "bold",
                              "marginLeft": "5px",
                            }
                          }
                          variant="subtitle2"
                        >
                          <ForwardRef(Typography)
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            color="textPrimary"
                            style={
                              Object {
                                "fontWeight": "bold",
                                "marginLeft": "5px",
                              }
                            }
                            variant="subtitle2"
                          >
                            <h6
                              className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-colorTextPrimary"
                              style={
                                Object {
                                  "fontWeight": "bold",
                                  "marginLeft": "5px",
                                }
                              }
                            >
                              Mr. Ali Khan
                            </h6>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                  <WithStyles(ForwardRef(Grid))
                    item={true}
                    xs={12}
                  >
                    <ForwardRef(Grid)
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      item={true}
                      xs={12}
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                      >
                        <WithStyles(ForwardRef(Divider))>
                          <ForwardRef(Divider)
                            classes={
                              Object {
                                "absolute": "MuiDivider-absolute",
                                "flexItem": "MuiDivider-flexItem",
                                "inset": "MuiDivider-inset",
                                "light": "MuiDivider-light",
                                "middle": "MuiDivider-middle",
                                "root": "MuiDivider-root",
                                "vertical": "MuiDivider-vertical",
                              }
                            }
                          >
                            <hr
                              className="MuiDivider-root"
                            />
                          </ForwardRef(Divider)>
                        </WithStyles(ForwardRef(Divider))>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                  <WithStyles(ForwardRef(Grid))
                    item={true}
                    xs={12}
                  >
                    <ForwardRef(Grid)
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      item={true}
                      xs={12}
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                      >
                        <Styled(MuiBox)>
                          <div
                            className="MuiBox-root MuiBox-root-3"
                          >
                            <WithStyles(ForwardRef(FormControl))
                              component="fieldset"
                              style={
                                Object {
                                  "marginLeft": "10px",
                                  "marginTop": "5px",
                                }
                              }
                            >
                              <ForwardRef(FormControl)
                                classes={
                                  Object {
                                    "fullWidth": "MuiFormControl-fullWidth",
                                    "marginDense": "MuiFormControl-marginDense",
                                    "marginNormal": "MuiFormControl-marginNormal",
                                    "root": "MuiFormControl-root",
                                  }
                                }
                                component="fieldset"
                                style={
                                  Object {
                                    "marginLeft": "10px",
                                    "marginTop": "5px",
                                  }
                                }
                              >
                                <fieldset
                                  className="MuiFormControl-root"
                                  style={
                                    Object {
                                      "marginLeft": "10px",
                                      "marginTop": "5px",
                                    }
                                  }
                                >
                                  <ForwardRef(RadioGroup)
                                    aria-label="quiz"
                                    name="quiz"
                                    onChange={[Function]}
                                    style={
                                      Object {
                                        "display": "flex",
                                        "flexDirection": "row",
                                      }
                                    }
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(FormGroup))
                                      aria-label="quiz"
                                      role="radiogroup"
                                      style={
                                        Object {
                                          "display": "flex",
                                          "flexDirection": "row",
                                        }
                                      }
                                    >
                                      <ForwardRef(FormGroup)
                                        aria-label="quiz"
                                        classes={
                                          Object {
                                            "root": "MuiFormGroup-root",
                                            "row": "MuiFormGroup-row",
                                          }
                                        }
                                        role="radiogroup"
                                        style={
                                          Object {
                                            "display": "flex",
                                            "flexDirection": "row",
                                          }
                                        }
                                      >
                                        <div
                                          aria-label="quiz"
                                          className="MuiFormGroup-root"
                                          role="radiogroup"
                                          style={
                                            Object {
                                              "display": "flex",
                                              "flexDirection": "row",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(FormControlLabel))
                                            control={
                                              <WithStyles(ForwardRef(Radio))
                                                checkedIcon={
                                                  <Memo
                                                    style={
                                                      Object {
                                                        "color": "#FC8434",
                                                        "fontSize": "22px",
                                                      }
                                                    }
                                                  />
                                                }
                                                icon={
                                                  <Memo
                                                    style={
                                                      Object {
                                                        "color": "#CCCCCC",
                                                        "fontSize": "22px",
                                                      }
                                                    }
                                                  />
                                                }
                                              />
                                            }
                                            label={
                                              <WithStyles(ForwardRef(Typography))
                                                style={
                                                  Object {
                                                    "color": "#939292",
                                                    "fontWeight": "bold",
                                                  }
                                                }
                                                variant="subtitle2"
                                              >
                                                Full payment
                                              </WithStyles(ForwardRef(Typography))>
                                            }
                                            value="full"
                                          >
                                            <ForwardRef(FormControlLabel)
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "label": "MuiFormControlLabel-label",
                                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                                  "root": "MuiFormControlLabel-root",
                                                }
                                              }
                                              control={
                                                <WithStyles(ForwardRef(Radio))
                                                  checkedIcon={
                                                    <Memo
                                                      style={
                                                        Object {
                                                          "color": "#FC8434",
                                                          "fontSize": "22px",
                                                        }
                                                      }
                                                    />
                                                  }
                                                  icon={
                                                    <Memo
                                                      style={
                                                        Object {
                                                          "color": "#CCCCCC",
                                                          "fontSize": "22px",
                                                        }
                                                      }
                                                    />
                                                  }
                                                />
                                              }
                                              label={
                                                <WithStyles(ForwardRef(Typography))
                                                  style={
                                                    Object {
                                                      "color": "#939292",
                                                      "fontWeight": "bold",
                                                    }
                                                  }
                                                  variant="subtitle2"
                                                >
                                                  Full payment
                                                </WithStyles(ForwardRef(Typography))>
                                              }
                                              value="full"
                                            >
                                              <label
                                                className="MuiFormControlLabel-root"
                                              >
                                                <WithStyles(ForwardRef(Radio))
                                                  checkedIcon={
                                                    <Memo
                                                      style={
                                                        Object {
                                                          "color": "#FC8434",
                                                          "fontSize": "22px",
                                                        }
                                                      }
                                                    />
                                                  }
                                                  disabled={false}
                                                  icon={
                                                    <Memo
                                                      style={
                                                        Object {
                                                          "color": "#CCCCCC",
                                                          "fontSize": "22px",
                                                        }
                                                      }
                                                    />
                                                  }
                                                  value="full"
                                                >
                                                  <ForwardRef(Radio)
                                                    checkedIcon={
                                                      <Memo
                                                        style={
                                                          Object {
                                                            "color": "#FC8434",
                                                            "fontSize": "22px",
                                                          }
                                                        }
                                                      />
                                                    }
                                                    classes={
                                                      Object {
                                                        "checked": "Mui-checked",
                                                        "colorPrimary": "MuiRadio-colorPrimary",
                                                        "colorSecondary": "MuiRadio-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "root": "MuiRadio-root",
                                                      }
                                                    }
                                                    disabled={false}
                                                    icon={
                                                      <Memo
                                                        style={
                                                          Object {
                                                            "color": "#CCCCCC",
                                                            "fontSize": "22px",
                                                          }
                                                        }
                                                      />
                                                    }
                                                    value="full"
                                                  >
                                                    <WithStyles(ForwardRef(SwitchBase))
                                                      checked={false}
                                                      checkedIcon={
                                                        <Memo
                                                          style={
                                                            Object {
                                                              "color": "#FC8434",
                                                              "fontSize": "22px",
                                                            }
                                                          }
                                                        />
                                                      }
                                                      classes={
                                                        Object {
                                                          "checked": "Mui-checked",
                                                          "disabled": "Mui-disabled",
                                                          "root": "MuiRadio-root MuiRadio-colorSecondary",
                                                        }
                                                      }
                                                      color="secondary"
                                                      disabled={false}
                                                      icon={
                                                        <Memo
                                                          style={
                                                            Object {
                                                              "color": "#CCCCCC",
                                                              "fontSize": "22px",
                                                            }
                                                          }
                                                        />
                                                      }
                                                      name="quiz"
                                                      onChange={[Function]}
                                                      type="radio"
                                                      value="full"
                                                    >
                                                      <ForwardRef(SwitchBase)
                                                        checked={false}
                                                        checkedIcon={
                                                          <Memo
                                                            style={
                                                              Object {
                                                                "color": "#FC8434",
                                                                "fontSize": "22px",
                                                              }
                                                            }
                                                          />
                                                        }
                                                        classes={
                                                          Object {
                                                            "checked": "PrivateSwitchBase-checked-5 Mui-checked",
                                                            "disabled": "PrivateSwitchBase-disabled-6 Mui-disabled",
                                                            "input": "PrivateSwitchBase-input-7",
                                                            "root": "PrivateSwitchBase-root-4 MuiRadio-root MuiRadio-colorSecondary",
                                                          }
                                                        }
                                                        color="secondary"
                                                        disabled={false}
                                                        icon={
                                                          <Memo
                                                            style={
                                                              Object {
                                                                "color": "#CCCCCC",
                                                                "fontSize": "22px",
                                                              }
                                                            }
                                                          />
                                                        }
                                                        name="quiz"
                                                        onChange={[Function]}
                                                        type="radio"
                                                        value="full"
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          className="PrivateSwitchBase-root-4 MuiRadio-root MuiRadio-colorSecondary"
                                                          color="secondary"
                                                          component="span"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          tabIndex={null}
                                                        >
                                                          <ForwardRef(IconButton)
                                                            className="PrivateSwitchBase-root-4 MuiRadio-root MuiRadio-colorSecondary"
                                                            classes={
                                                              Object {
                                                                "colorInherit": "MuiIconButton-colorInherit",
                                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                                "edgeStart": "MuiIconButton-edgeStart",
                                                                "label": "MuiIconButton-label",
                                                                "root": "MuiIconButton-root",
                                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                                              }
                                                            }
                                                            color="secondary"
                                                            component="span"
                                                            disabled={false}
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            tabIndex={null}
                                                          >
                                                            <WithStyles(ForwardRef(ButtonBase))
                                                              centerRipple={true}
                                                              className="MuiIconButton-root PrivateSwitchBase-root-4 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                              component="span"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              tabIndex={null}
                                                            >
                                                              <ForwardRef(ButtonBase)
                                                                centerRipple={true}
                                                                className="MuiIconButton-root PrivateSwitchBase-root-4 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                                classes={
                                                                  Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiButtonBase-root",
                                                                  }
                                                                }
                                                                component="span"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                tabIndex={null}
                                                              >
                                                                <span
                                                                  aria-disabled={false}
                                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-4 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                                  onBlur={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  tabIndex={null}
                                                                >
                                                                  <span
                                                                    className="MuiIconButton-label"
                                                                  >
                                                                    <input
                                                                      checked={false}
                                                                      className="PrivateSwitchBase-input-7"
                                                                      disabled={false}
                                                                      name="quiz"
                                                                      onChange={[Function]}
                                                                      type="radio"
                                                                      value="full"
                                                                    />
                                                                    <ForwardRef(RadioButtonUncheckedIcon)
                                                                      style={
                                                                        Object {
                                                                          "color": "#CCCCCC",
                                                                          "fontSize": "22px",
                                                                        }
                                                                      }
                                                                    >
                                                                      <WithStyles(ForwardRef(SvgIcon))
                                                                        style={
                                                                          Object {
                                                                            "color": "#CCCCCC",
                                                                            "fontSize": "22px",
                                                                          }
                                                                        }
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                          style={
                                                                            Object {
                                                                              "color": "#CCCCCC",
                                                                              "fontSize": "22px",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root"
                                                                            focusable="false"
                                                                            style={
                                                                              Object {
                                                                                "color": "#CCCCCC",
                                                                                "fontSize": "22px",
                                                                              }
                                                                            }
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(RadioButtonUncheckedIcon)>
                                                                  </span>
                                                                  <WithStyles(memo)
                                                                    center={true}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={true}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </span>
                                                              </ForwardRef(ButtonBase)>
                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                          </ForwardRef(IconButton)>
                                                        </WithStyles(ForwardRef(IconButton))>
                                                      </ForwardRef(SwitchBase)>
                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                  </ForwardRef(Radio)>
                                                </WithStyles(ForwardRef(Radio))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiFormControlLabel-label"
                                                  component="span"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiFormControlLabel-label"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="span"
                                                  >
                                                    <span
                                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                                    >
                                                      <WithStyles(ForwardRef(Typography))
                                                        style={
                                                          Object {
                                                            "color": "#939292",
                                                            "fontWeight": "bold",
                                                          }
                                                        }
                                                        variant="subtitle2"
                                                      >
                                                        <ForwardRef(Typography)
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTypography-alignCenter",
                                                              "alignJustify": "MuiTypography-alignJustify",
                                                              "alignLeft": "MuiTypography-alignLeft",
                                                              "alignRight": "MuiTypography-alignRight",
                                                              "body1": "MuiTypography-body1",
                                                              "body2": "MuiTypography-body2",
                                                              "button": "MuiTypography-button",
                                                              "caption": "MuiTypography-caption",
                                                              "colorError": "MuiTypography-colorError",
                                                              "colorInherit": "MuiTypography-colorInherit",
                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                              "displayBlock": "MuiTypography-displayBlock",
                                                              "displayInline": "MuiTypography-displayInline",
                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                              "h1": "MuiTypography-h1",
                                                              "h2": "MuiTypography-h2",
                                                              "h3": "MuiTypography-h3",
                                                              "h4": "MuiTypography-h4",
                                                              "h5": "MuiTypography-h5",
                                                              "h6": "MuiTypography-h6",
                                                              "noWrap": "MuiTypography-noWrap",
                                                              "overline": "MuiTypography-overline",
                                                              "paragraph": "MuiTypography-paragraph",
                                                              "root": "MuiTypography-root",
                                                              "srOnly": "MuiTypography-srOnly",
                                                              "subtitle1": "MuiTypography-subtitle1",
                                                              "subtitle2": "MuiTypography-subtitle2",
                                                            }
                                                          }
                                                          style={
                                                            Object {
                                                              "color": "#939292",
                                                              "fontWeight": "bold",
                                                            }
                                                          }
                                                          variant="subtitle2"
                                                        >
                                                          <h6
                                                            className="MuiTypography-root MuiTypography-subtitle2"
                                                            style={
                                                              Object {
                                                                "color": "#939292",
                                                                "fontWeight": "bold",
                                                              }
                                                            }
                                                          >
                                                            Full payment
                                                          </h6>
                                                        </ForwardRef(Typography)>
                                                      </WithStyles(ForwardRef(Typography))>
                                                    </span>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </label>
                                            </ForwardRef(FormControlLabel)>
                                          </WithStyles(ForwardRef(FormControlLabel))>
                                          <WithStyles(ForwardRef(FormControlLabel))
                                            control={
                                              <WithStyles(ForwardRef(Radio))
                                                checkedIcon={
                                                  <Memo
                                                    style={
                                                      Object {
                                                        "color": "#FC8434",
                                                        "fontSize": "22px",
                                                      }
                                                    }
                                                  />
                                                }
                                                icon={
                                                  <Memo
                                                    style={
                                                      Object {
                                                        "color": "#CCCCCC",
                                                        "fontSize": "22px",
                                                      }
                                                    }
                                                  />
                                                }
                                              />
                                            }
                                            label={
                                              <WithStyles(ForwardRef(Typography))
                                                style={
                                                  Object {
                                                    "color": "#939292",
                                                    "fontWeight": "bold",
                                                  }
                                                }
                                                variant="subtitle2"
                                              >
                                                Partial payment
                                              </WithStyles(ForwardRef(Typography))>
                                            }
                                            value="partial"
                                          >
                                            <ForwardRef(FormControlLabel)
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "label": "MuiFormControlLabel-label",
                                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                                  "root": "MuiFormControlLabel-root",
                                                }
                                              }
                                              control={
                                                <WithStyles(ForwardRef(Radio))
                                                  checkedIcon={
                                                    <Memo
                                                      style={
                                                        Object {
                                                          "color": "#FC8434",
                                                          "fontSize": "22px",
                                                        }
                                                      }
                                                    />
                                                  }
                                                  icon={
                                                    <Memo
                                                      style={
                                                        Object {
                                                          "color": "#CCCCCC",
                                                          "fontSize": "22px",
                                                        }
                                                      }
                                                    />
                                                  }
                                                />
                                              }
                                              label={
                                                <WithStyles(ForwardRef(Typography))
                                                  style={
                                                    Object {
                                                      "color": "#939292",
                                                      "fontWeight": "bold",
                                                    }
                                                  }
                                                  variant="subtitle2"
                                                >
                                                  Partial payment
                                                </WithStyles(ForwardRef(Typography))>
                                              }
                                              value="partial"
                                            >
                                              <label
                                                className="MuiFormControlLabel-root"
                                              >
                                                <WithStyles(ForwardRef(Radio))
                                                  checkedIcon={
                                                    <Memo
                                                      style={
                                                        Object {
                                                          "color": "#FC8434",
                                                          "fontSize": "22px",
                                                        }
                                                      }
                                                    />
                                                  }
                                                  disabled={false}
                                                  icon={
                                                    <Memo
                                                      style={
                                                        Object {
                                                          "color": "#CCCCCC",
                                                          "fontSize": "22px",
                                                        }
                                                      }
                                                    />
                                                  }
                                                  value="partial"
                                                >
                                                  <ForwardRef(Radio)
                                                    checkedIcon={
                                                      <Memo
                                                        style={
                                                          Object {
                                                            "color": "#FC8434",
                                                            "fontSize": "22px",
                                                          }
                                                        }
                                                      />
                                                    }
                                                    classes={
                                                      Object {
                                                        "checked": "Mui-checked",
                                                        "colorPrimary": "MuiRadio-colorPrimary",
                                                        "colorSecondary": "MuiRadio-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "root": "MuiRadio-root",
                                                      }
                                                    }
                                                    disabled={false}
                                                    icon={
                                                      <Memo
                                                        style={
                                                          Object {
                                                            "color": "#CCCCCC",
                                                            "fontSize": "22px",
                                                          }
                                                        }
                                                      />
                                                    }
                                                    value="partial"
                                                  >
                                                    <WithStyles(ForwardRef(SwitchBase))
                                                      checked={false}
                                                      checkedIcon={
                                                        <Memo
                                                          style={
                                                            Object {
                                                              "color": "#FC8434",
                                                              "fontSize": "22px",
                                                            }
                                                          }
                                                        />
                                                      }
                                                      classes={
                                                        Object {
                                                          "checked": "Mui-checked",
                                                          "disabled": "Mui-disabled",
                                                          "root": "MuiRadio-root MuiRadio-colorSecondary",
                                                        }
                                                      }
                                                      color="secondary"
                                                      disabled={false}
                                                      icon={
                                                        <Memo
                                                          style={
                                                            Object {
                                                              "color": "#CCCCCC",
                                                              "fontSize": "22px",
                                                            }
                                                          }
                                                        />
                                                      }
                                                      name="quiz"
                                                      onChange={[Function]}
                                                      type="radio"
                                                      value="partial"
                                                    >
                                                      <ForwardRef(SwitchBase)
                                                        checked={false}
                                                        checkedIcon={
                                                          <Memo
                                                            style={
                                                              Object {
                                                                "color": "#FC8434",
                                                                "fontSize": "22px",
                                                              }
                                                            }
                                                          />
                                                        }
                                                        classes={
                                                          Object {
                                                            "checked": "PrivateSwitchBase-checked-5 Mui-checked",
                                                            "disabled": "PrivateSwitchBase-disabled-6 Mui-disabled",
                                                            "input": "PrivateSwitchBase-input-7",
                                                            "root": "PrivateSwitchBase-root-4 MuiRadio-root MuiRadio-colorSecondary",
                                                          }
                                                        }
                                                        color="secondary"
                                                        disabled={false}
                                                        icon={
                                                          <Memo
                                                            style={
                                                              Object {
                                                                "color": "#CCCCCC",
                                                                "fontSize": "22px",
                                                              }
                                                            }
                                                          />
                                                        }
                                                        name="quiz"
                                                        onChange={[Function]}
                                                        type="radio"
                                                        value="partial"
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          className="PrivateSwitchBase-root-4 MuiRadio-root MuiRadio-colorSecondary"
                                                          color="secondary"
                                                          component="span"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          tabIndex={null}
                                                        >
                                                          <ForwardRef(IconButton)
                                                            className="PrivateSwitchBase-root-4 MuiRadio-root MuiRadio-colorSecondary"
                                                            classes={
                                                              Object {
                                                                "colorInherit": "MuiIconButton-colorInherit",
                                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                                "edgeStart": "MuiIconButton-edgeStart",
                                                                "label": "MuiIconButton-label",
                                                                "root": "MuiIconButton-root",
                                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                                              }
                                                            }
                                                            color="secondary"
                                                            component="span"
                                                            disabled={false}
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            tabIndex={null}
                                                          >
                                                            <WithStyles(ForwardRef(ButtonBase))
                                                              centerRipple={true}
                                                              className="MuiIconButton-root PrivateSwitchBase-root-4 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                              component="span"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              tabIndex={null}
                                                            >
                                                              <ForwardRef(ButtonBase)
                                                                centerRipple={true}
                                                                className="MuiIconButton-root PrivateSwitchBase-root-4 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                                classes={
                                                                  Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiButtonBase-root",
                                                                  }
                                                                }
                                                                component="span"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                tabIndex={null}
                                                              >
                                                                <span
                                                                  aria-disabled={false}
                                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-4 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                                  onBlur={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  tabIndex={null}
                                                                >
                                                                  <span
                                                                    className="MuiIconButton-label"
                                                                  >
                                                                    <input
                                                                      checked={false}
                                                                      className="PrivateSwitchBase-input-7"
                                                                      disabled={false}
                                                                      name="quiz"
                                                                      onChange={[Function]}
                                                                      type="radio"
                                                                      value="partial"
                                                                    />
                                                                    <ForwardRef(RadioButtonUncheckedIcon)
                                                                      style={
                                                                        Object {
                                                                          "color": "#CCCCCC",
                                                                          "fontSize": "22px",
                                                                        }
                                                                      }
                                                                    >
                                                                      <WithStyles(ForwardRef(SvgIcon))
                                                                        style={
                                                                          Object {
                                                                            "color": "#CCCCCC",
                                                                            "fontSize": "22px",
                                                                          }
                                                                        }
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                          style={
                                                                            Object {
                                                                              "color": "#CCCCCC",
                                                                              "fontSize": "22px",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root"
                                                                            focusable="false"
                                                                            style={
                                                                              Object {
                                                                                "color": "#CCCCCC",
                                                                                "fontSize": "22px",
                                                                              }
                                                                            }
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(RadioButtonUncheckedIcon)>
                                                                  </span>
                                                                  <WithStyles(memo)
                                                                    center={true}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={true}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </span>
                                                              </ForwardRef(ButtonBase)>
                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                          </ForwardRef(IconButton)>
                                                        </WithStyles(ForwardRef(IconButton))>
                                                      </ForwardRef(SwitchBase)>
                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                  </ForwardRef(Radio)>
                                                </WithStyles(ForwardRef(Radio))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiFormControlLabel-label"
                                                  component="span"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiFormControlLabel-label"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="span"
                                                  >
                                                    <span
                                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                                    >
                                                      <WithStyles(ForwardRef(Typography))
                                                        style={
                                                          Object {
                                                            "color": "#939292",
                                                            "fontWeight": "bold",
                                                          }
                                                        }
                                                        variant="subtitle2"
                                                      >
                                                        <ForwardRef(Typography)
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTypography-alignCenter",
                                                              "alignJustify": "MuiTypography-alignJustify",
                                                              "alignLeft": "MuiTypography-alignLeft",
                                                              "alignRight": "MuiTypography-alignRight",
                                                              "body1": "MuiTypography-body1",
                                                              "body2": "MuiTypography-body2",
                                                              "button": "MuiTypography-button",
                                                              "caption": "MuiTypography-caption",
                                                              "colorError": "MuiTypography-colorError",
                                                              "colorInherit": "MuiTypography-colorInherit",
                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                              "displayBlock": "MuiTypography-displayBlock",
                                                              "displayInline": "MuiTypography-displayInline",
                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                              "h1": "MuiTypography-h1",
                                                              "h2": "MuiTypography-h2",
                                                              "h3": "MuiTypography-h3",
                                                              "h4": "MuiTypography-h4",
                                                              "h5": "MuiTypography-h5",
                                                              "h6": "MuiTypography-h6",
                                                              "noWrap": "MuiTypography-noWrap",
                                                              "overline": "MuiTypography-overline",
                                                              "paragraph": "MuiTypography-paragraph",
                                                              "root": "MuiTypography-root",
                                                              "srOnly": "MuiTypography-srOnly",
                                                              "subtitle1": "MuiTypography-subtitle1",
                                                              "subtitle2": "MuiTypography-subtitle2",
                                                            }
                                                          }
                                                          style={
                                                            Object {
                                                              "color": "#939292",
                                                              "fontWeight": "bold",
                                                            }
                                                          }
                                                          variant="subtitle2"
                                                        >
                                                          <h6
                                                            className="MuiTypography-root MuiTypography-subtitle2"
                                                            style={
                                                              Object {
                                                                "color": "#939292",
                                                                "fontWeight": "bold",
                                                              }
                                                            }
                                                          >
                                                            Partial payment
                                                          </h6>
                                                        </ForwardRef(Typography)>
                                                      </WithStyles(ForwardRef(Typography))>
                                                    </span>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </label>
                                            </ForwardRef(FormControlLabel)>
                                          </WithStyles(ForwardRef(FormControlLabel))>
                                        </div>
                                      </ForwardRef(FormGroup)>
                                    </WithStyles(ForwardRef(FormGroup))>
                                  </ForwardRef(RadioGroup)>
                                </fieldset>
                              </ForwardRef(FormControl)>
                            </WithStyles(ForwardRef(FormControl))>
                          </div>
                        </Styled(MuiBox)>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                  <WithStyles(ForwardRef(Grid))
                    item={true}
                    xs={12}
                  >
                    <ForwardRef(Grid)
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      item={true}
                      xs={12}
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                      >
                        <WithStyles(ForwardRef(Typography))
                          style={
                            Object {
                              "color": "#2B6FED",
                              "fontWeight": "bold",
                            }
                          }
                        >
                          <ForwardRef(Typography)
                            classes={
                              Object {
                                "alignCenter": "MuiTypography-alignCenter",
                                "alignJustify": "MuiTypography-alignJustify",
                                "alignLeft": "MuiTypography-alignLeft",
                                "alignRight": "MuiTypography-alignRight",
                                "body1": "MuiTypography-body1",
                                "body2": "MuiTypography-body2",
                                "button": "MuiTypography-button",
                                "caption": "MuiTypography-caption",
                                "colorError": "MuiTypography-colorError",
                                "colorInherit": "MuiTypography-colorInherit",
                                "colorPrimary": "MuiTypography-colorPrimary",
                                "colorSecondary": "MuiTypography-colorSecondary",
                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                "displayBlock": "MuiTypography-displayBlock",
                                "displayInline": "MuiTypography-displayInline",
                                "gutterBottom": "MuiTypography-gutterBottom",
                                "h1": "MuiTypography-h1",
                                "h2": "MuiTypography-h2",
                                "h3": "MuiTypography-h3",
                                "h4": "MuiTypography-h4",
                                "h5": "MuiTypography-h5",
                                "h6": "MuiTypography-h6",
                                "noWrap": "MuiTypography-noWrap",
                                "overline": "MuiTypography-overline",
                                "paragraph": "MuiTypography-paragraph",
                                "root": "MuiTypography-root",
                                "srOnly": "MuiTypography-srOnly",
                                "subtitle1": "MuiTypography-subtitle1",
                                "subtitle2": "MuiTypography-subtitle2",
                              }
                            }
                            style={
                              Object {
                                "color": "#2B6FED",
                                "fontWeight": "bold",
                              }
                            }
                          >
                            <p
                              className="MuiTypography-root MuiTypography-body1"
                              style={
                                Object {
                                  "color": "#2B6FED",
                                  "fontWeight": "bold",
                                }
                              }
                            >
                               : SR500
                            </p>
                          </ForwardRef(Typography)>
                        </WithStyles(ForwardRef(Typography))>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
            <Styled(MuiBox)
              style={
                Object {
                  "marginBottom": "30px",
                  "marginTop": "10px",
                  "width": "90%",
                }
              }
            >
              <div
                className="MuiBox-root MuiBox-root-8"
                style={
                  Object {
                    "marginBottom": "30px",
                    "marginTop": "10px",
                    "width": "90%",
                  }
                }
              >
                <WithStyles(WithStyles(ForwardRef(Button)))
                  fullWidth={true}
                  onClick={[Function]}
                  size="large"
                  variant="contained"
                >
                  <WithStyles(ForwardRef(Button))
                    classes={
                      Object {
                        "root": "WithStyles(ForwardRef(Button))-root-9",
                      }
                    }
                    fullWidth={true}
                    onClick={[Function]}
                    size="large"
                    variant="contained"
                  >
                    <ForwardRef(Button)
                      classes={
                        Object {
                          "colorInherit": "MuiButton-colorInherit",
                          "contained": "MuiButton-contained",
                          "containedPrimary": "MuiButton-containedPrimary",
                          "containedSecondary": "MuiButton-containedSecondary",
                          "containedSizeLarge": "MuiButton-containedSizeLarge",
                          "containedSizeSmall": "MuiButton-containedSizeSmall",
                          "disableElevation": "MuiButton-disableElevation",
                          "disabled": "Mui-disabled",
                          "endIcon": "MuiButton-endIcon",
                          "focusVisible": "Mui-focusVisible",
                          "fullWidth": "MuiButton-fullWidth",
                          "iconSizeLarge": "MuiButton-iconSizeLarge",
                          "iconSizeMedium": "MuiButton-iconSizeMedium",
                          "iconSizeSmall": "MuiButton-iconSizeSmall",
                          "label": "MuiButton-label",
                          "outlined": "MuiButton-outlined",
                          "outlinedPrimary": "MuiButton-outlinedPrimary",
                          "outlinedSecondary": "MuiButton-outlinedSecondary",
                          "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                          "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                          "root": "MuiButton-root WithStyles(ForwardRef(Button))-root-9",
                          "sizeLarge": "MuiButton-sizeLarge",
                          "sizeSmall": "MuiButton-sizeSmall",
                          "startIcon": "MuiButton-startIcon",
                          "text": "MuiButton-text",
                          "textPrimary": "MuiButton-textPrimary",
                          "textSecondary": "MuiButton-textSecondary",
                          "textSizeLarge": "MuiButton-textSizeLarge",
                          "textSizeSmall": "MuiButton-textSizeSmall",
                        }
                      }
                      fullWidth={true}
                      onClick={[Function]}
                      size="large"
                      variant="contained"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiButton-root WithStyles(ForwardRef(Button))-root-9 MuiButton-contained MuiButton-containedSizeLarge MuiButton-sizeLarge MuiButton-fullWidth"
                        component="button"
                        disabled={false}
                        focusRipple={true}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                        type="button"
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiButton-root WithStyles(ForwardRef(Button))-root-9 MuiButton-contained MuiButton-containedSizeLarge MuiButton-sizeLarge MuiButton-fullWidth"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                          type="button"
                        >
                          <button
                            className="MuiButtonBase-root MuiButton-root WithStyles(ForwardRef(Button))-root-9 MuiButton-contained MuiButton-containedSizeLarge MuiButton-sizeLarge MuiButton-fullWidth"
                            disabled={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                            type="button"
                          >
                            <span
                              className="MuiButton-label"
                            />
                            <WithStyles(memo)
                              center={false}
                            >
                              <ForwardRef(TouchRipple)
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child",
                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                    "ripple": "MuiTouchRipple-ripple",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                    "root": "MuiTouchRipple-root",
                                  }
                                }
                              >
                                <span
                                  className="MuiTouchRipple-root"
                                >
                                  <TransitionGroup
                                    childFactory={[Function]}
                                    component={null}
                                    exit={true}
                                  />
                                </span>
                              </ForwardRef(TouchRipple)>
                            </WithStyles(memo)>
                          </button>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(Button)>
                  </WithStyles(ForwardRef(Button))>
                </WithStyles(WithStyles(ForwardRef(Button)))>
              </div>
            </Styled(MuiBox)>
          </div>
        </Styled(MuiBox)>
      </div>
    </ForwardRef(Grid)>
  </WithStyles(ForwardRef(Grid))>
</RegisterRentPayment>
`;
