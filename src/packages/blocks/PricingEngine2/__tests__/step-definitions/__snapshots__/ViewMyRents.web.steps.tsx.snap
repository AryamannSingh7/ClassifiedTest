// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RentPayment User navigates to ViewMyRents 1`] = `
<withI18nextTranslation(withRouter(ViewMyRents))
  history={[MockFunction]}
  id="ViewMyRents"
  location={[MockFunction]}
  match={[MockFunction]}
  navigation={Object {}}
>
  <withRouter(ViewMyRents)
    history={[MockFunction]}
    i18n={Object {}}
    id="ViewMyRents"
    location={[MockFunction]}
    match={[MockFunction]}
    navigation={Object {}}
    t={[Function]}
    tReady={false}
  >
    <Route>
      <ViewMyRents
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        i18n={Object {}}
        id="ViewMyRents"
        location={
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          }
        }
        match={
          Object {
            "isExact": true,
            "params": Object {},
            "path": "/",
            "url": "/",
          }
        }
        navigation={Object {}}
        t={[Function]}
        tReady={false}
      >
        <WithStyles(ForwardRef(Grid))
          className="auth-cols"
          item={true}
          md={12}
          xs={12}
        >
          <ForwardRef(Grid)
            className="auth-cols"
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            item={true}
            md={12}
            xs={12}
          >
            <div
              className="MuiGrid-root auth-cols MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-12"
            >
              <WithStyles(ForwardRef(Grid))
                container={true}
                style={
                  Object {
                    "margin": "1rem",
                    "width": "90%",
                  }
                }
              >
                <ForwardRef(Grid)
                  classes={
                    Object {
                      "align-content-xs-center": "MuiGrid-align-content-xs-center",
                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                      "align-items-xs-center": "MuiGrid-align-items-xs-center",
                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                      "container": "MuiGrid-container",
                      "direction-xs-column": "MuiGrid-direction-xs-column",
                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                      "grid-lg-1": "MuiGrid-grid-lg-1",
                      "grid-lg-10": "MuiGrid-grid-lg-10",
                      "grid-lg-11": "MuiGrid-grid-lg-11",
                      "grid-lg-12": "MuiGrid-grid-lg-12",
                      "grid-lg-2": "MuiGrid-grid-lg-2",
                      "grid-lg-3": "MuiGrid-grid-lg-3",
                      "grid-lg-4": "MuiGrid-grid-lg-4",
                      "grid-lg-5": "MuiGrid-grid-lg-5",
                      "grid-lg-6": "MuiGrid-grid-lg-6",
                      "grid-lg-7": "MuiGrid-grid-lg-7",
                      "grid-lg-8": "MuiGrid-grid-lg-8",
                      "grid-lg-9": "MuiGrid-grid-lg-9",
                      "grid-lg-auto": "MuiGrid-grid-lg-auto",
                      "grid-lg-true": "MuiGrid-grid-lg-true",
                      "grid-md-1": "MuiGrid-grid-md-1",
                      "grid-md-10": "MuiGrid-grid-md-10",
                      "grid-md-11": "MuiGrid-grid-md-11",
                      "grid-md-12": "MuiGrid-grid-md-12",
                      "grid-md-2": "MuiGrid-grid-md-2",
                      "grid-md-3": "MuiGrid-grid-md-3",
                      "grid-md-4": "MuiGrid-grid-md-4",
                      "grid-md-5": "MuiGrid-grid-md-5",
                      "grid-md-6": "MuiGrid-grid-md-6",
                      "grid-md-7": "MuiGrid-grid-md-7",
                      "grid-md-8": "MuiGrid-grid-md-8",
                      "grid-md-9": "MuiGrid-grid-md-9",
                      "grid-md-auto": "MuiGrid-grid-md-auto",
                      "grid-md-true": "MuiGrid-grid-md-true",
                      "grid-sm-1": "MuiGrid-grid-sm-1",
                      "grid-sm-10": "MuiGrid-grid-sm-10",
                      "grid-sm-11": "MuiGrid-grid-sm-11",
                      "grid-sm-12": "MuiGrid-grid-sm-12",
                      "grid-sm-2": "MuiGrid-grid-sm-2",
                      "grid-sm-3": "MuiGrid-grid-sm-3",
                      "grid-sm-4": "MuiGrid-grid-sm-4",
                      "grid-sm-5": "MuiGrid-grid-sm-5",
                      "grid-sm-6": "MuiGrid-grid-sm-6",
                      "grid-sm-7": "MuiGrid-grid-sm-7",
                      "grid-sm-8": "MuiGrid-grid-sm-8",
                      "grid-sm-9": "MuiGrid-grid-sm-9",
                      "grid-sm-auto": "MuiGrid-grid-sm-auto",
                      "grid-sm-true": "MuiGrid-grid-sm-true",
                      "grid-xl-1": "MuiGrid-grid-xl-1",
                      "grid-xl-10": "MuiGrid-grid-xl-10",
                      "grid-xl-11": "MuiGrid-grid-xl-11",
                      "grid-xl-12": "MuiGrid-grid-xl-12",
                      "grid-xl-2": "MuiGrid-grid-xl-2",
                      "grid-xl-3": "MuiGrid-grid-xl-3",
                      "grid-xl-4": "MuiGrid-grid-xl-4",
                      "grid-xl-5": "MuiGrid-grid-xl-5",
                      "grid-xl-6": "MuiGrid-grid-xl-6",
                      "grid-xl-7": "MuiGrid-grid-xl-7",
                      "grid-xl-8": "MuiGrid-grid-xl-8",
                      "grid-xl-9": "MuiGrid-grid-xl-9",
                      "grid-xl-auto": "MuiGrid-grid-xl-auto",
                      "grid-xl-true": "MuiGrid-grid-xl-true",
                      "grid-xs-1": "MuiGrid-grid-xs-1",
                      "grid-xs-10": "MuiGrid-grid-xs-10",
                      "grid-xs-11": "MuiGrid-grid-xs-11",
                      "grid-xs-12": "MuiGrid-grid-xs-12",
                      "grid-xs-2": "MuiGrid-grid-xs-2",
                      "grid-xs-3": "MuiGrid-grid-xs-3",
                      "grid-xs-4": "MuiGrid-grid-xs-4",
                      "grid-xs-5": "MuiGrid-grid-xs-5",
                      "grid-xs-6": "MuiGrid-grid-xs-6",
                      "grid-xs-7": "MuiGrid-grid-xs-7",
                      "grid-xs-8": "MuiGrid-grid-xs-8",
                      "grid-xs-9": "MuiGrid-grid-xs-9",
                      "grid-xs-auto": "MuiGrid-grid-xs-auto",
                      "grid-xs-true": "MuiGrid-grid-xs-true",
                      "item": "MuiGrid-item",
                      "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                      "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                      "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                      "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                      "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                      "root": "MuiGrid-root",
                      "spacing-xs-1": "MuiGrid-spacing-xs-1",
                      "spacing-xs-10": "MuiGrid-spacing-xs-10",
                      "spacing-xs-2": "MuiGrid-spacing-xs-2",
                      "spacing-xs-3": "MuiGrid-spacing-xs-3",
                      "spacing-xs-4": "MuiGrid-spacing-xs-4",
                      "spacing-xs-5": "MuiGrid-spacing-xs-5",
                      "spacing-xs-6": "MuiGrid-spacing-xs-6",
                      "spacing-xs-7": "MuiGrid-spacing-xs-7",
                      "spacing-xs-8": "MuiGrid-spacing-xs-8",
                      "spacing-xs-9": "MuiGrid-spacing-xs-9",
                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                      "zeroMinWidth": "MuiGrid-zeroMinWidth",
                    }
                  }
                  container={true}
                  style={
                    Object {
                      "margin": "1rem",
                      "width": "90%",
                    }
                  }
                >
                  <div
                    className="MuiGrid-root MuiGrid-container"
                    style={
                      Object {
                        "margin": "1rem",
                        "width": "90%",
                      }
                    }
                  >
                    <WithStyles(ForwardRef(Grid))
                      item={true}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "gap": "1rem",
                          "justifyContent": "space-between",
                        }
                      }
                      xs={12}
                    >
                      <ForwardRef(Grid)
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                            "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                            "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                            "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                            "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        item={true}
                        style={
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "gap": "1rem",
                            "justifyContent": "space-between",
                          }
                        }
                        xs={12}
                      >
                        <div
                          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                          style={
                            Object {
                              "alignItems": "center",
                              "display": "flex",
                              "gap": "1rem",
                              "justifyContent": "space-between",
                            }
                          }
                        >
                          <Styled(MuiBox)
                            style={
                              Object {
                                "alignItems": "center",
                                "display": "flex",
                                "gap": "1rem",
                              }
                            }
                          >
                            <div
                              className="MuiBox-root MuiBox-root-1"
                              style={
                                Object {
                                  "alignItems": "center",
                                  "display": "flex",
                                  "gap": "1rem",
                                }
                              }
                            >
                              <ForwardRef(ArrowBackIcon)
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(SvgIcon))
                                  onClick={[Function]}
                                >
                                  <ForwardRef(SvgIcon)
                                    classes={
                                      Object {
                                        "colorAction": "MuiSvgIcon-colorAction",
                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                        "colorError": "MuiSvgIcon-colorError",
                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                        "root": "MuiSvgIcon-root",
                                      }
                                    }
                                    onClick={[Function]}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="MuiSvgIcon-root"
                                      focusable="false"
                                      onClick={[Function]}
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
                                      />
                                    </svg>
                                  </ForwardRef(SvgIcon)>
                                </WithStyles(ForwardRef(SvgIcon))>
                              </ForwardRef(ArrowBackIcon)>
                              <p
                                style={
                                  Object {
                                    "fontSize": "1.2rem",
                                    "fontWeight": 600,
                                  }
                                }
                              >
                                 / 
                              </p>
                            </div>
                          </Styled(MuiBox)>
                          <Styled(MuiBox)>
                            <div
                              className="MuiBox-root MuiBox-root-2"
                            >
                              <WithStyles(ForwardRef(IconButton))
                                onClick={[Function]}
                                style={
                                  Object {
                                    "padding": "8px",
                                  }
                                }
                              >
                                <ForwardRef(IconButton)
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "padding": "8px",
                                    }
                                  }
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    centerRipple={true}
                                    className="MuiIconButton-root"
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "padding": "8px",
                                      }
                                    }
                                  >
                                    <ForwardRef(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "padding": "8px",
                                        }
                                      }
                                    >
                                      <button
                                        className="MuiButtonBase-root MuiIconButton-root"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        style={
                                          Object {
                                            "padding": "8px",
                                          }
                                        }
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <img
                                            src={
                                              Object {
                                                "testUri": "../../../packages/blocks/BroadcastMessage/assets/shortIcon.png",
                                              }
                                            }
                                          />
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                              <WithStyles(ForwardRef(IconButton))
                                style={
                                  Object {
                                    "padding": "8px",
                                  }
                                }
                              >
                                <ForwardRef(IconButton)
                                  classes={
                                    Object {
                                      "colorInherit": "MuiIconButton-colorInherit",
                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                      "edgeStart": "MuiIconButton-edgeStart",
                                      "label": "MuiIconButton-label",
                                      "root": "MuiIconButton-root",
                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                    }
                                  }
                                  style={
                                    Object {
                                      "padding": "8px",
                                    }
                                  }
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    centerRipple={true}
                                    className="MuiIconButton-root"
                                    disabled={false}
                                    focusRipple={true}
                                    style={
                                      Object {
                                        "padding": "8px",
                                      }
                                    }
                                  >
                                    <ForwardRef(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      style={
                                        Object {
                                          "padding": "8px",
                                        }
                                      }
                                    >
                                      <button
                                        className="MuiButtonBase-root MuiIconButton-root"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        style={
                                          Object {
                                            "padding": "8px",
                                          }
                                        }
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <span
                                          className="MuiIconButton-label"
                                        >
                                          <img
                                            src={
                                              Object {
                                                "testUri": "../../../packages/blocks/BroadcastMessage/assets/filterIcon.png",
                                              }
                                            }
                                          />
                                        </span>
                                        <WithStyles(memo)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(IconButton)>
                              </WithStyles(ForwardRef(IconButton))>
                              <WithStyles(ForwardRef(Menu))
                                anchorEl={null}
                                id="simple-menu"
                                keepMounted={true}
                                onClose={[Function]}
                                open={false}
                              >
                                <ForwardRef(Menu)
                                  anchorEl={null}
                                  classes={
                                    Object {
                                      "list": "MuiMenu-list",
                                      "paper": "MuiMenu-paper",
                                    }
                                  }
                                  id="simple-menu"
                                  keepMounted={true}
                                  onClose={[Function]}
                                  open={false}
                                >
                                  <WithStyles(ForwardRef(Popover))
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                      }
                                    }
                                    TransitionProps={
                                      Object {
                                        "onEntering": [Function],
                                      }
                                    }
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="simple-menu"
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Popover)
                                      PaperProps={
                                        Object {
                                          "classes": Object {
                                            "root": "MuiMenu-paper",
                                          },
                                        }
                                      }
                                      TransitionProps={
                                        Object {
                                          "onEntering": [Function],
                                        }
                                      }
                                      anchorEl={null}
                                      anchorOrigin={
                                        Object {
                                          "horizontal": "left",
                                          "vertical": "top",
                                        }
                                      }
                                      classes={
                                        Object {
                                          "paper": "MuiPopover-paper",
                                          "root": "MuiPopover-root",
                                        }
                                      }
                                      getContentAnchorEl={[Function]}
                                      id="simple-menu"
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                      transformOrigin={
                                        Object {
                                          "horizontal": "left",
                                          "vertical": "top",
                                        }
                                      }
                                      transitionDuration="auto"
                                    >
                                      <ForwardRef(Modal)
                                        BackdropProps={
                                          Object {
                                            "invisible": true,
                                          }
                                        }
                                        className="MuiPopover-root"
                                        id="simple-menu"
                                        keepMounted={true}
                                        onClose={[Function]}
                                        open={false}
                                      >
                                        <ForwardRef(Portal)
                                          disablePortal={false}
                                        >
                                          <Portal
                                            containerInfo={
                                              <body>
                                                <div
                                                  aria-hidden="true"
                                                  class="MuiPopover-root"
                                                  id="simple-menu"
                                                  role="presentation"
                                                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                >
                                                  <div
                                                    data-test="sentinelStart"
                                                    tabindex="0"
                                                  />
                                                  <div
                                                    class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                    style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                    tabindex="-1"
                                                  >
                                                    <ul
                                                      class="MuiList-root MuiMenu-list MuiList-padding"
                                                      role="menu"
                                                      tabindex="-1"
                                                    >
                                                      <li
                                                        aria-disabled="false"
                                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        role="menuitem"
                                                        style="padding: 0px; min-height: 20px;"
                                                        tabindex="0"
                                                      >
                                                        Paid
                                                        <span
                                                          class="MuiTouchRipple-root"
                                                        />
                                                      </li>
                                                      <li
                                                        aria-disabled="false"
                                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        role="menuitem"
                                                        tabindex="-1"
                                                      >
                                                        Due
                                                        <span
                                                          class="MuiTouchRipple-root"
                                                        />
                                                      </li>
                                                      <li
                                                        aria-disabled="false"
                                                        class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        role="menuitem"
                                                        tabindex="-1"
                                                      >
                                                        OverDue
                                                        <span
                                                          class="MuiTouchRipple-root"
                                                        />
                                                      </li>
                                                    </ul>
                                                  </div>
                                                  <div
                                                    data-test="sentinelEnd"
                                                    tabindex="0"
                                                  />
                                                </div>
                                              </body>
                                            }
                                          >
                                            <div
                                              className="MuiPopover-root"
                                              id="simple-menu"
                                              onKeyDown={[Function]}
                                              role="presentation"
                                              style={
                                                Object {
                                                  "bottom": 0,
                                                  "left": 0,
                                                  "position": "fixed",
                                                  "right": 0,
                                                  "top": 0,
                                                  "visibility": "hidden",
                                                  "zIndex": 1300,
                                                }
                                              }
                                            >
                                              <ForwardRef(SimpleBackdrop)
                                                invisible={true}
                                                onClick={[Function]}
                                                open={false}
                                              />
                                              <Unstable_TrapFocus
                                                disableAutoFocus={false}
                                                disableEnforceFocus={false}
                                                disableRestoreFocus={false}
                                                getDoc={[Function]}
                                                isEnabled={[Function]}
                                                open={false}
                                              >
                                                <div
                                                  data-test="sentinelStart"
                                                  tabIndex={0}
                                                />
                                                <ForwardRef(Grow)
                                                  appear={true}
                                                  in={false}
                                                  onEnter={[Function]}
                                                  onEntering={[Function]}
                                                  onExited={[Function]}
                                                  tabIndex="-1"
                                                  timeout="auto"
                                                >
                                                  <Transition
                                                    addEndListener={[Function]}
                                                    appear={true}
                                                    enter={true}
                                                    exit={true}
                                                    in={false}
                                                    mountOnEnter={false}
                                                    onEnter={[Function]}
                                                    onEntered={[Function]}
                                                    onEntering={[Function]}
                                                    onExit={[Function]}
                                                    onExited={[Function]}
                                                    onExiting={[Function]}
                                                    tabIndex="-1"
                                                    timeout={null}
                                                    unmountOnExit={false}
                                                  >
                                                    <WithStyles(ForwardRef(Paper))
                                                      className="MuiPopover-paper"
                                                      classes={
                                                        Object {
                                                          "root": "MuiMenu-paper",
                                                        }
                                                      }
                                                      elevation={8}
                                                      style={
                                                        Object {
                                                          "opacity": 0,
                                                          "transform": "scale(0.75, 0.5625)",
                                                          "visibility": "hidden",
                                                        }
                                                      }
                                                      tabIndex="-1"
                                                    >
                                                      <ForwardRef(Paper)
                                                        className="MuiPopover-paper"
                                                        classes={
                                                          Object {
                                                            "elevation0": "MuiPaper-elevation0",
                                                            "elevation1": "MuiPaper-elevation1",
                                                            "elevation10": "MuiPaper-elevation10",
                                                            "elevation11": "MuiPaper-elevation11",
                                                            "elevation12": "MuiPaper-elevation12",
                                                            "elevation13": "MuiPaper-elevation13",
                                                            "elevation14": "MuiPaper-elevation14",
                                                            "elevation15": "MuiPaper-elevation15",
                                                            "elevation16": "MuiPaper-elevation16",
                                                            "elevation17": "MuiPaper-elevation17",
                                                            "elevation18": "MuiPaper-elevation18",
                                                            "elevation19": "MuiPaper-elevation19",
                                                            "elevation2": "MuiPaper-elevation2",
                                                            "elevation20": "MuiPaper-elevation20",
                                                            "elevation21": "MuiPaper-elevation21",
                                                            "elevation22": "MuiPaper-elevation22",
                                                            "elevation23": "MuiPaper-elevation23",
                                                            "elevation24": "MuiPaper-elevation24",
                                                            "elevation3": "MuiPaper-elevation3",
                                                            "elevation4": "MuiPaper-elevation4",
                                                            "elevation5": "MuiPaper-elevation5",
                                                            "elevation6": "MuiPaper-elevation6",
                                                            "elevation7": "MuiPaper-elevation7",
                                                            "elevation8": "MuiPaper-elevation8",
                                                            "elevation9": "MuiPaper-elevation9",
                                                            "outlined": "MuiPaper-outlined",
                                                            "root": "MuiPaper-root MuiMenu-paper",
                                                            "rounded": "MuiPaper-rounded",
                                                          }
                                                        }
                                                        elevation={8}
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "transform": "scale(0.75, 0.5625)",
                                                            "visibility": "hidden",
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <div
                                                          className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                          style={
                                                            Object {
                                                              "opacity": 0,
                                                              "transform": "scale(0.75, 0.5625)",
                                                              "visibility": "hidden",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <ForwardRef(MenuList)
                                                            actions={
                                                              Object {
                                                                "current": Object {
                                                                  "adjustStyleForScrollbar": [Function],
                                                                },
                                                              }
                                                            }
                                                            autoFocus={false}
                                                            autoFocusItem={false}
                                                            className="MuiMenu-list"
                                                            onKeyDown={[Function]}
                                                            variant="selectedMenu"
                                                          >
                                                            <WithStyles(ForwardRef(List))
                                                              className="MuiMenu-list"
                                                              onKeyDown={[Function]}
                                                              role="menu"
                                                              tabIndex={-1}
                                                            >
                                                              <ForwardRef(List)
                                                                className="MuiMenu-list"
                                                                classes={
                                                                  Object {
                                                                    "dense": "MuiList-dense",
                                                                    "padding": "MuiList-padding",
                                                                    "root": "MuiList-root",
                                                                    "subheader": "MuiList-subheader",
                                                                  }
                                                                }
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <ul
                                                                  className="MuiList-root MuiMenu-list MuiList-padding"
                                                                  onKeyDown={[Function]}
                                                                  role="menu"
                                                                  tabIndex={-1}
                                                                >
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    key=".$.0"
                                                                    onClick={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "minHeight": "20px",
                                                                        "padding": "0px",
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <ForwardRef(MenuItem)
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                          "gutters": "MuiMenuItem-gutters",
                                                                          "root": "MuiMenuItem-root",
                                                                          "selected": "Mui-selected",
                                                                        }
                                                                      }
                                                                      onClick={[Function]}
                                                                      style={
                                                                        Object {
                                                                          "minHeight": "20px",
                                                                          "padding": "0px",
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <WithStyles(ForwardRef(ListItem))
                                                                        button={true}
                                                                        className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "dense": "MuiMenuItem-dense",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        style={
                                                                          Object {
                                                                            "minHeight": "20px",
                                                                            "padding": "0px",
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        <ForwardRef(ListItem)
                                                                          button={true}
                                                                          className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                          classes={
                                                                            Object {
                                                                              "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                              "button": "MuiListItem-button",
                                                                              "container": "MuiListItem-container",
                                                                              "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                              "disabled": "Mui-disabled",
                                                                              "divider": "MuiListItem-divider",
                                                                              "focusVisible": "Mui-focusVisible",
                                                                              "gutters": "MuiListItem-gutters",
                                                                              "root": "MuiListItem-root",
                                                                              "secondaryAction": "MuiListItem-secondaryAction",
                                                                              "selected": "Mui-selected",
                                                                            }
                                                                          }
                                                                          component="li"
                                                                          disableGutters={false}
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          style={
                                                                            Object {
                                                                              "minHeight": "20px",
                                                                              "padding": "0px",
                                                                            }
                                                                          }
                                                                          tabIndex={0}
                                                                        >
                                                                          <WithStyles(ForwardRef(ButtonBase))
                                                                            className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            style={
                                                                              Object {
                                                                                "minHeight": "20px",
                                                                                "padding": "0px",
                                                                              }
                                                                            }
                                                                            tabIndex={0}
                                                                          >
                                                                            <ForwardRef(ButtonBase)
                                                                              className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              classes={
                                                                                Object {
                                                                                  "disabled": "Mui-disabled",
                                                                                  "focusVisible": "Mui-focusVisible",
                                                                                  "root": "MuiButtonBase-root",
                                                                                }
                                                                              }
                                                                              component="li"
                                                                              disabled={false}
                                                                              focusVisibleClassName="Mui-focusVisible"
                                                                              onClick={[Function]}
                                                                              role="menuitem"
                                                                              style={
                                                                                Object {
                                                                                  "minHeight": "20px",
                                                                                  "padding": "0px",
                                                                                }
                                                                              }
                                                                              tabIndex={0}
                                                                            >
                                                                              <li
                                                                                aria-disabled={false}
                                                                                className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                onBlur={[Function]}
                                                                                onClick={[Function]}
                                                                                onDragLeave={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                onMouseUp={[Function]}
                                                                                onTouchEnd={[Function]}
                                                                                onTouchMove={[Function]}
                                                                                onTouchStart={[Function]}
                                                                                role="menuitem"
                                                                                style={
                                                                                  Object {
                                                                                    "minHeight": "20px",
                                                                                    "padding": "0px",
                                                                                  }
                                                                                }
                                                                                tabIndex={0}
                                                                              >
                                                                                Paid
                                                                                <WithStyles(memo)
                                                                                  center={false}
                                                                                >
                                                                                  <ForwardRef(TouchRipple)
                                                                                    center={false}
                                                                                    classes={
                                                                                      Object {
                                                                                        "child": "MuiTouchRipple-child",
                                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                        "root": "MuiTouchRipple-root",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <span
                                                                                      className="MuiTouchRipple-root"
                                                                                    >
                                                                                      <TransitionGroup
                                                                                        childFactory={[Function]}
                                                                                        component={null}
                                                                                        exit={true}
                                                                                      />
                                                                                    </span>
                                                                                  </ForwardRef(TouchRipple)>
                                                                                </WithStyles(memo)>
                                                                              </li>
                                                                            </ForwardRef(ButtonBase)>
                                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                                        </ForwardRef(ListItem)>
                                                                      </WithStyles(ForwardRef(ListItem))>
                                                                    </ForwardRef(MenuItem)>
                                                                  </WithStyles(ForwardRef(MenuItem))>
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    key=".$.1"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <ForwardRef(MenuItem)
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                          "gutters": "MuiMenuItem-gutters",
                                                                          "root": "MuiMenuItem-root",
                                                                          "selected": "Mui-selected",
                                                                        }
                                                                      }
                                                                      onClick={[Function]}
                                                                    >
                                                                      <WithStyles(ForwardRef(ListItem))
                                                                        button={true}
                                                                        className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "dense": "MuiMenuItem-dense",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <ForwardRef(ListItem)
                                                                          button={true}
                                                                          className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                          classes={
                                                                            Object {
                                                                              "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                              "button": "MuiListItem-button",
                                                                              "container": "MuiListItem-container",
                                                                              "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                              "disabled": "Mui-disabled",
                                                                              "divider": "MuiListItem-divider",
                                                                              "focusVisible": "Mui-focusVisible",
                                                                              "gutters": "MuiListItem-gutters",
                                                                              "root": "MuiListItem-root",
                                                                              "secondaryAction": "MuiListItem-secondaryAction",
                                                                              "selected": "Mui-selected",
                                                                            }
                                                                          }
                                                                          component="li"
                                                                          disableGutters={false}
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <WithStyles(ForwardRef(ButtonBase))
                                                                            className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <ForwardRef(ButtonBase)
                                                                              className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              classes={
                                                                                Object {
                                                                                  "disabled": "Mui-disabled",
                                                                                  "focusVisible": "Mui-focusVisible",
                                                                                  "root": "MuiButtonBase-root",
                                                                                }
                                                                              }
                                                                              component="li"
                                                                              disabled={false}
                                                                              focusVisibleClassName="Mui-focusVisible"
                                                                              onClick={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              <li
                                                                                aria-disabled={false}
                                                                                className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                onBlur={[Function]}
                                                                                onClick={[Function]}
                                                                                onDragLeave={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                onMouseUp={[Function]}
                                                                                onTouchEnd={[Function]}
                                                                                onTouchMove={[Function]}
                                                                                onTouchStart={[Function]}
                                                                                role="menuitem"
                                                                                tabIndex={-1}
                                                                              >
                                                                                Due
                                                                                <WithStyles(memo)
                                                                                  center={false}
                                                                                >
                                                                                  <ForwardRef(TouchRipple)
                                                                                    center={false}
                                                                                    classes={
                                                                                      Object {
                                                                                        "child": "MuiTouchRipple-child",
                                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                        "root": "MuiTouchRipple-root",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <span
                                                                                      className="MuiTouchRipple-root"
                                                                                    >
                                                                                      <TransitionGroup
                                                                                        childFactory={[Function]}
                                                                                        component={null}
                                                                                        exit={true}
                                                                                      />
                                                                                    </span>
                                                                                  </ForwardRef(TouchRipple)>
                                                                                </WithStyles(memo)>
                                                                              </li>
                                                                            </ForwardRef(ButtonBase)>
                                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                                        </ForwardRef(ListItem)>
                                                                      </WithStyles(ForwardRef(ListItem))>
                                                                    </ForwardRef(MenuItem)>
                                                                  </WithStyles(ForwardRef(MenuItem))>
                                                                  <WithStyles(ForwardRef(MenuItem))
                                                                    key=".$.2"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <ForwardRef(MenuItem)
                                                                      classes={
                                                                        Object {
                                                                          "dense": "MuiMenuItem-dense",
                                                                          "gutters": "MuiMenuItem-gutters",
                                                                          "root": "MuiMenuItem-root",
                                                                          "selected": "Mui-selected",
                                                                        }
                                                                      }
                                                                      onClick={[Function]}
                                                                    >
                                                                      <WithStyles(ForwardRef(ListItem))
                                                                        button={true}
                                                                        className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                        classes={
                                                                          Object {
                                                                            "dense": "MuiMenuItem-dense",
                                                                          }
                                                                        }
                                                                        component="li"
                                                                        disableGutters={false}
                                                                        onClick={[Function]}
                                                                        role="menuitem"
                                                                        tabIndex={-1}
                                                                      >
                                                                        <ForwardRef(ListItem)
                                                                          button={true}
                                                                          className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                          classes={
                                                                            Object {
                                                                              "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                              "button": "MuiListItem-button",
                                                                              "container": "MuiListItem-container",
                                                                              "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                              "disabled": "Mui-disabled",
                                                                              "divider": "MuiListItem-divider",
                                                                              "focusVisible": "Mui-focusVisible",
                                                                              "gutters": "MuiListItem-gutters",
                                                                              "root": "MuiListItem-root",
                                                                              "secondaryAction": "MuiListItem-secondaryAction",
                                                                              "selected": "Mui-selected",
                                                                            }
                                                                          }
                                                                          component="li"
                                                                          disableGutters={false}
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={-1}
                                                                        >
                                                                          <WithStyles(ForwardRef(ButtonBase))
                                                                            className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                            component="li"
                                                                            disabled={false}
                                                                            focusVisibleClassName="Mui-focusVisible"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <ForwardRef(ButtonBase)
                                                                              className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              classes={
                                                                                Object {
                                                                                  "disabled": "Mui-disabled",
                                                                                  "focusVisible": "Mui-focusVisible",
                                                                                  "root": "MuiButtonBase-root",
                                                                                }
                                                                              }
                                                                              component="li"
                                                                              disabled={false}
                                                                              focusVisibleClassName="Mui-focusVisible"
                                                                              onClick={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              <li
                                                                                aria-disabled={false}
                                                                                className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                onBlur={[Function]}
                                                                                onClick={[Function]}
                                                                                onDragLeave={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onKeyUp={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                onMouseLeave={[Function]}
                                                                                onMouseUp={[Function]}
                                                                                onTouchEnd={[Function]}
                                                                                onTouchMove={[Function]}
                                                                                onTouchStart={[Function]}
                                                                                role="menuitem"
                                                                                tabIndex={-1}
                                                                              >
                                                                                OverDue
                                                                                <WithStyles(memo)
                                                                                  center={false}
                                                                                >
                                                                                  <ForwardRef(TouchRipple)
                                                                                    center={false}
                                                                                    classes={
                                                                                      Object {
                                                                                        "child": "MuiTouchRipple-child",
                                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                        "root": "MuiTouchRipple-root",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <span
                                                                                      className="MuiTouchRipple-root"
                                                                                    >
                                                                                      <TransitionGroup
                                                                                        childFactory={[Function]}
                                                                                        component={null}
                                                                                        exit={true}
                                                                                      />
                                                                                    </span>
                                                                                  </ForwardRef(TouchRipple)>
                                                                                </WithStyles(memo)>
                                                                              </li>
                                                                            </ForwardRef(ButtonBase)>
                                                                          </WithStyles(ForwardRef(ButtonBase))>
                                                                        </ForwardRef(ListItem)>
                                                                      </WithStyles(ForwardRef(ListItem))>
                                                                    </ForwardRef(MenuItem)>
                                                                  </WithStyles(ForwardRef(MenuItem))>
                                                                </ul>
                                                              </ForwardRef(List)>
                                                            </WithStyles(ForwardRef(List))>
                                                          </ForwardRef(MenuList)>
                                                        </div>
                                                      </ForwardRef(Paper)>
                                                    </WithStyles(ForwardRef(Paper))>
                                                  </Transition>
                                                </ForwardRef(Grow)>
                                                <div
                                                  data-test="sentinelEnd"
                                                  tabIndex={0}
                                                />
                                              </Unstable_TrapFocus>
                                            </div>
                                          </Portal>
                                        </ForwardRef(Portal)>
                                      </ForwardRef(Modal)>
                                    </ForwardRef(Popover)>
                                  </WithStyles(ForwardRef(Popover))>
                                </ForwardRef(Menu)>
                              </WithStyles(ForwardRef(Menu))>
                            </div>
                          </Styled(MuiBox)>
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                  </div>
                </ForwardRef(Grid)>
              </WithStyles(ForwardRef(Grid))>
              <Styled(MuiBox)
                style={
                  Object {
                    "alignItems": "center",
                    "background": "#F7F9FE",
                    "display": "flex",
                    "flexDirection": "column",
                    "justifyContent": "space-between",
                    "minHeight": "95%",
                  }
                }
              >
                <div
                  className="MuiBox-root MuiBox-root-3"
                  style={
                    Object {
                      "alignItems": "center",
                      "background": "#F7F9FE",
                      "display": "flex",
                      "flexDirection": "column",
                      "justifyContent": "space-between",
                      "minHeight": "95%",
                    }
                  }
                >
                  <WithStyles(ForwardRef(Grid))
                    container={true}
                    spacing={2}
                    style={
                      Object {
                        "marginTop": ".5rem",
                        "width": "90%",
                      }
                    }
                  >
                    <ForwardRef(Grid)
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      container={true}
                      spacing={2}
                      style={
                        Object {
                          "marginTop": ".5rem",
                          "width": "90%",
                        }
                      }
                    >
                      <div
                        className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                        style={
                          Object {
                            "marginTop": ".5rem",
                            "width": "90%",
                          }
                        }
                      />
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                </div>
              </Styled(MuiBox)>
              <ForwardRef(Modal)
                BackdropComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Naked": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "invisible": [Function],
                        "open": [Function],
                        "transitionDuration": [Function],
                      },
                      "render": [Function],
                    },
                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                    "options": Object {
                      "defaultTheme": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "activatedOpacity": 0.12,
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "disabledOpacity": 0.38,
                            "focus": "rgba(0, 0, 0, 0.12)",
                            "focusOpacity": 0.12,
                            "hover": "rgba(0, 0, 0, 0.04)",
                            "hoverOpacity": 0.04,
                            "selected": "rgba(0, 0, 0, 0.08)",
                            "selectedOpacity": 0.08,
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "info": Object {
                            "contrastText": "#fff",
                            "dark": "#1976d2",
                            "light": "#64b5f6",
                            "main": "#2196f3",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "success": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                          "warning": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#f57c00",
                            "light": "#ffb74d",
                            "main": "#ff9800",
                          },
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": [Function],
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.43,
                          },
                          "button": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1.167,
                          },
                          "h2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1.2,
                          },
                          "h3": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.167,
                          },
                          "h4": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.235,
                          },
                          "h5": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.334,
                          },
                          "h6": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "htmlFontSize": 16,
                          "overline": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subtitle1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "speedDial": 1050,
                          "tooltip": 1500,
                        },
                      },
                      "name": "MuiBackdrop",
                    },
                    "propTypes": Object {
                      "classes": [Function],
                      "innerRef": [Function],
                    },
                    "render": [Function],
                    "useStyles": [Function],
                  }
                }
                BackdropProps={
                  Object {
                    "timeout": 500,
                  }
                }
                aria-describedby="transition-modal-description"
                aria-labelledby="transition-modal-title"
                className="modalStyle"
                closeAfterTransition={true}
                onClose={[Function]}
                open={false}
              />
            </div>
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
      </ViewMyRents>
    </Route>
  </withRouter(ViewMyRents)>
</withI18nextTranslation(withRouter(ViewMyRents))>
`;
