// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DocumentListChairman User navigates to DocumentListChairman 1`] = `
<DocumentListChairman
  classes={
    Object {
      "buildingDocument": Object {
        "& .content-area": Object {
          "height": "85vh",
          "overflowX": "hidden",
          "overflowY": "auto",
        },
        "& .document .left-side": Object {
          "alignItems": "center",
          "display": "flex",
        },
        "& .document .left-side h4": Object {
          "textTransform": "capitalize",
          "wordBreak": "break-all",
        },
        "& .document .left-side img": Object {
          "marginRight": "10px",
          "width": "35px",
        },
        "& .document-box .card-item": Object {
          "boxShadow": "none",
          "padding": "10px 20px 20px",
        },
        "& .document-box .card-item .heading": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "marginBottom": "10px",
          "textTransform": "capitalize",
          "wordBreak": "break-all",
        },
        "& .document-box .card-item .item-title h6": Object {
          "fontSize": "14px",
          "fontWeight": "600",
          "lineHeight": "18px",
          "marginLeft": "5px",
          "textTransform": "capitalize",
        },
        "& .document-box .card-item .res-info": Object {
          "display": "flex",
          "marginBottom": "10px",
          "width": "100%",
        },
        "& .document-box .card-item .res-info .info-item": Object {
          "width": "50%",
        },
        "& .document-box .card-item .res-info p": Object {
          "color": "darkgray",
        },
        "& .document-box .card-item .res-info span": Object {
          "color": "black",
        },
        "& .document-box .item": Object {
          "alignItems": "center",
          "background": "white",
          "borderRadius": 10,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "minHeight": "34px",
          "padding": 15,
        },
        "& .document-box .item .heading": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
        },
        "& .document-box .item .heading h4": Object {
          "fontSize": "16px",
          "fontWeight": "600",
          "marginLeft": "10px",
          "textTransform": "capitalize",
          "wordBreak": "break-all",
        },
        "& .document-box .item button.color-btn": Object {
          "background": "#FEF9F3",
          "borderRadius": "25px",
          "color": "#FD9048",
          "fontWeight": "600",
          "minWidth": "60px",
          "padding": "5px 11px",
        },
        "& .document-box .meeting-item": Object {
          "alignItems": "center",
          "border": "2px solid lightgray",
          "borderRadius": 10,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "minHeight": "34px",
          "padding": 15,
        },
        "& .document-box .meeting-item .icons img": Object {
          "cursor": "pointer",
          "margin": "0 5px",
          "width": "20px",
        },
        "& .document-box .meeting-item .item-title,& .document-box .meeting-item .icons": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
        },
        "& .document-box.resolution-box": Object {
          "background": "#F8F9FE",
        },
        "& .document-view iframe": Object {
          "border": "0",
          "height": "95%",
          "width": "100%",
        },
        "& .list .personal-documents .empty-list": Object {
          "background": "white",
          "height": "calc(100% - 40px)",
        },
        "& .list .personal-documents .empty-list .content-box": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "height": "100%",
          "justifyContent": "center",
          "padding": "20px",
          "textAlign": "center",
        },
        "& .meeting-details": Object {},
        "& .meeting-details .card": Object {
          "marginBottom": "10px",
          "marginTop": "10px",
          "padding": "15px",
        },
        "& .meeting-details p": Object {
          "color": "darkgray",
          "paddingTop": "5px",
        },
        "& .meeting-details p:first-child": Object {
          "paddingTop": "0",
        },
        "& .meeting-details span": Object {
          "color": "black",
        },
        "& .menu": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "marginBottom": "18px",
          "padding": "10px 20px",
          "textTransform": "capitalize",
        },
        "& .menu .name": Object {
          "alignItems": "center",
          "display": "flex",
          "maxWidth": "95%",
        },
        "& .menu span": Object {
          "overflow": "hidden",
          "textOverflow": "ellipsis",
          "whiteSpace": "nowrap",
        },
        "& .menu.building-document-menu": Object {
          "justifyContent": "space-between",
        },
        "& .right-image": Object {
          "padding": "25px 60px",
        },
        "& .view": Object {
          "marginBottom": "15px",
          "marginTop": "15px",
        },
        "& .view .item-title h6": Object {
          "fontWeight": "600",
          "lineHeight": "18px",
          "marginLeft": "10px",
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
      },
      "documentChairman": Object {
        "& .document-box": Object {
          "background": "#FFF",
          "borderRadius": 5,
          "marginBottom": 20,
          "padding": 20,
        },
        "& .document-box .card-item": Object {
          "boxShadow": "none",
          "padding": "10px 18px 18px",
        },
        "& .document-box .card-item .heading": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "marginBottom": "10px",
          "textTransform": "capitalize",
        },
        "& .document-box .card-item .heading h4": Object {
          "wordBreak": "break-all",
        },
        "& .document-box .card-item .item .icons img": Object {
          "cursor": "pointer",
          "margin": "0 5px",
          "width": "20px",
        },
        "& .document-box .card-item .item .item-title,& .document-box .card-item .item .icons": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
        },
        "& .document-box .card-item .item-title h6": Object {
          "fontSize": "14px",
          "fontWeight": "600",
          "marginLeft": "5px",
          "textTransform": "capitalize",
        },
        "& .document-box .card-item .res-info": Object {
          "display": "flex",
          "width": "100%",
        },
        "& .document-box .card-item .res-info .info-item": Object {
          "width": "50%",
        },
        "& .document-box .card-item .res-info p": Object {
          "color": "darkgray",
        },
        "& .document-box .card-item .res-info span": Object {
          "color": "black",
        },
        "& .document-box .item": Object {
          "alignItems": "center",
          "border": "2px solid lightgray",
          "borderRadius": 10,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "minHeight": "34px",
          "padding": 12,
        },
        "& .document-box .item .heading": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
        },
        "& .document-box .item .heading h4": Object {
          "fontSize": "16px",
          "fontWeight": "600",
          "marginLeft": "10px",
          "wordBreak": "break-all",
        },
        "& .document-box .item button.color-btn": Object {
          "background": "#FEF9F3",
          "borderRadius": "25px",
          "color": "#FD9048",
          "fontWeight": "600",
          "minWidth": "60px",
          "padding": "5px 11px",
        },
        "& .document-box a, & .navigation a": Object {
          "textDecoration": "none !important",
        },
        "& .document-box iframe": Object {
          "border": "0",
          "height": "80vh",
          "width": "100%",
        },
        "& .document-box.resolutions": Object {
          "background": "#F4F7FF",
          "borderRadius": 5,
          "marginBottom": 20,
          "marginTop": 10,
          "padding": 0,
        },
        "& .document-box.resolutions .item": Object {
          "marginTop": "15px",
          "minHeight": "20px",
        },
        "& .navigation": Object {
          "display": "flex",
          "justifyContent": "space-between",
          "marginBottom": "20px",
        },
        "& .navigation .sub-heading": Object {
          "fontWeight": 600,
          "marginRight": "15px",
          "wordBreak": "break-all",
        },
        "& .navigation .top-heading": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 0,
          "marginTop": 10,
          "width": "100%",
        },
        "& .navigation > .MuiBox-root": Object {
          "width": "100%",
        },
        "& .navigation button": Object {
          "background": "#2b6fed",
          "borderRadius": "8px",
          "color": "#FFF",
          "fontWeight": "bold",
          "padding": "10px",
          "width": "220px",
        },
        "& .szh-menu-container ul li a": Object {
          "color": "black",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "textDecoration": "none",
        },
      },
      "personalDocument": Object {
        "& .content-area": Object {
          "height": "85vh",
          "overflowX": "hidden",
          "overflowY": "auto",
        },
        "& .document .left-side": Object {
          "alignItems": "center",
          "display": "flex",
        },
        "& .document .left-side .info .more-info": Object {
          "alignItems": "center",
          "display": "flex",
        },
        "& .document .left-side .info .more-info p": Object {
          "marginRight": "10px",
        },
        "& .document .left-side .info .more-info span": Object {
          "color": "orange",
          "marginRight": "5px",
        },
        "& .document .left-side h4": Object {
          "display": "block",
          "textTransform": "capitalize",
          "wordBreak": "break-all",
        },
        "& .document .left-side img": Object {
          "marginRight": "10px",
          "width": "45px",
        },
        "& .document-box .item": Object {
          "alignItems": "center",
          "background": "white",
          "borderRadius": 10,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "minHeight": "34px",
          "padding": 15,
        },
        "& .document-box .item .heading": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
        },
        "& .document-box .item .heading h4": Object {
          "fontSize": "16px",
          "fontWeight": "600",
          "marginLeft": "10px",
          "textTransform": "capitalize",
          "wordBreak": "break-all",
        },
        "& .document-box .item button.color-btn": Object {
          "background": "#FEF9F3",
          "borderRadius": "25px",
          "color": "#FD9048",
          "fontWeight": "600",
          "minWidth": "60px",
          "padding": "5px 11px",
        },
        "& .document-view": Object {
          "background": "white",
          "padding": "15px",
        },
        "& .document-view iframe": Object {
          "border": "0",
          "height": "95%",
          "width": "100%",
        },
        "& .list": Object {
          "position": "relative",
          "width": "100%",
        },
        "& .list .personal-documents": Object {
          "minHeight": "calc(100% - 70px)",
        },
        "& .list .personal-documents .content-box h3": Object {
          "fontWeight": "600",
          "marginBottom": "15px",
        },
        "& .list .personal-documents .empty-list": Object {
          "background": "white",
          "height": "calc(100% - 70px)",
        },
        "& .list .personal-documents .empty-list .content-box": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "column",
          "height": "100%",
          "justifyContent": "center",
          "padding": "20px",
          "textAlign": "center",
        },
        "& .list .personal-documents .empty-list .content-box img": Object {
          "marginBottom": "20px",
        },
        "& .list > .MuiGrid-root": Object {
          "alignContent": "flex-start",
        },
        "& .menu": Object {
          "alignItems": "center",
          "background": "#FFFFFF",
          "cursor": "pointer",
          "display": "flex",
          "fontWeight": "600",
          "marginBottom": "18px",
          "padding": "10px 20px",
        },
        "& .menu.personal-document-menu": Object {
          "justifyContent": "space-between",
          "textTransform": "capitalize",
        },
        "& .menu.personal-document-menu .name": Object {
          "alignItems": "center",
          "display": "flex",
          "maxWidth": "95%",
        },
        "& .menu.personal-document-menu span": Object {
          "overflow": "hidden",
          "textOverflow": "ellipsis",
          "whiteSpace": "nowrap",
        },
        "& .right-image": Object {
          "padding": "25px 60px",
        },
        "& .szh-menu-container ul li a": Object {
          "color": "black",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "textDecoration": "none",
        },
        "& .upload-button": Object {
          "alignItems": "center",
          "bottom": 0,
          "display": "flex",
          "justifyContent": "center",
          "left": 0,
          "padding": "10px 0",
          "position": "sticky",
          "right": 0,
        },
        "& .upload-button .MuiGrid-container": Object {
          "width": "fit-content",
        },
        "& .upload-button button": Object {
          "background": "#2b6fec",
          "borderRadius": "25px",
          "color": "white",
          "padding": "12px 50px",
        },
        "& a": Object {
          "textDecoration": "none !important",
        },
      },
    }
  }
  id="DocumentListChairman"
  navigation={
    Object {
      "dispatch": [Function],
      "getParam": [Function],
      "navigate": [Function],
      "setParams": [Function],
    }
  }
  t={[Function]}
>
  <Styled(MuiBox)
    className={
      Object {
        "& .document-box": Object {
          "background": "#FFF",
          "borderRadius": 5,
          "marginBottom": 20,
          "padding": 20,
        },
        "& .document-box .card-item": Object {
          "boxShadow": "none",
          "padding": "10px 18px 18px",
        },
        "& .document-box .card-item .heading": Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "space-between",
          "marginBottom": "10px",
          "textTransform": "capitalize",
        },
        "& .document-box .card-item .heading h4": Object {
          "wordBreak": "break-all",
        },
        "& .document-box .card-item .item .icons img": Object {
          "cursor": "pointer",
          "margin": "0 5px",
          "width": "20px",
        },
        "& .document-box .card-item .item .item-title,& .document-box .card-item .item .icons": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
        },
        "& .document-box .card-item .item-title h6": Object {
          "fontSize": "14px",
          "fontWeight": "600",
          "marginLeft": "5px",
          "textTransform": "capitalize",
        },
        "& .document-box .card-item .res-info": Object {
          "display": "flex",
          "width": "100%",
        },
        "& .document-box .card-item .res-info .info-item": Object {
          "width": "50%",
        },
        "& .document-box .card-item .res-info p": Object {
          "color": "darkgray",
        },
        "& .document-box .card-item .res-info span": Object {
          "color": "black",
        },
        "& .document-box .item": Object {
          "alignItems": "center",
          "border": "2px solid lightgray",
          "borderRadius": 10,
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "minHeight": "34px",
          "padding": 12,
        },
        "& .document-box .item .heading": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
        },
        "& .document-box .item .heading h4": Object {
          "fontSize": "16px",
          "fontWeight": "600",
          "marginLeft": "10px",
          "wordBreak": "break-all",
        },
        "& .document-box .item button.color-btn": Object {
          "background": "#FEF9F3",
          "borderRadius": "25px",
          "color": "#FD9048",
          "fontWeight": "600",
          "minWidth": "60px",
          "padding": "5px 11px",
        },
        "& .document-box a, & .navigation a": Object {
          "textDecoration": "none !important",
        },
        "& .document-box iframe": Object {
          "border": "0",
          "height": "80vh",
          "width": "100%",
        },
        "& .document-box.resolutions": Object {
          "background": "#F4F7FF",
          "borderRadius": 5,
          "marginBottom": 20,
          "marginTop": 10,
          "padding": 0,
        },
        "& .document-box.resolutions .item": Object {
          "marginTop": "15px",
          "minHeight": "20px",
        },
        "& .navigation": Object {
          "display": "flex",
          "justifyContent": "space-between",
          "marginBottom": "20px",
        },
        "& .navigation .sub-heading": Object {
          "fontWeight": 600,
          "marginRight": "15px",
          "wordBreak": "break-all",
        },
        "& .navigation .top-heading": Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 0,
          "marginTop": 10,
          "width": "100%",
        },
        "& .navigation > .MuiBox-root": Object {
          "width": "100%",
        },
        "& .navigation button": Object {
          "background": "#2b6fed",
          "borderRadius": "8px",
          "color": "#FFF",
          "fontWeight": "bold",
          "padding": "10px",
          "width": "220px",
        },
        "& .szh-menu-container ul li a": Object {
          "color": "black",
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "textDecoration": "none",
        },
      }
    }
    style={
      Object {
        "background": "#F4F7FF",
      }
    }
  >
    <div
      className="MuiBox-root MuiBox-root-1 & .navigation & .navigation > .MuiBox-root & .navigation button & .navigation .top-heading & .navigation .sub-heading & .document-box & .document-box .item & .document-box .item .heading & .document-box .item .heading h4 & .document-box .item button.color-btn & .document-box a, & .navigation a & .document-box iframe & .document-box.resolutions & .document-box .card-item & .document-box .card-item .heading & .document-box .card-item .heading h4 & .document-box .card-item .res-info & .document-box .card-item .res-info span & .document-box .card-item .res-info p & .document-box .card-item .res-info .info-item & .document-box .card-item .item .item-title,& .document-box .card-item .item .icons & .document-box .card-item .item .icons img & .document-box .card-item .item-title h6 & .document-box.resolutions .item & .szh-menu-container ul li a"
      style={
        Object {
          "background": "#F4F7FF",
        }
      }
    >
      <DashboardHeader
        classes={
          Object {
            "buildingDocument": Object {
              "& .content-area": Object {
                "height": "85vh",
                "overflowX": "hidden",
                "overflowY": "auto",
              },
              "& .document .left-side": Object {
                "alignItems": "center",
                "display": "flex",
              },
              "& .document .left-side h4": Object {
                "textTransform": "capitalize",
                "wordBreak": "break-all",
              },
              "& .document .left-side img": Object {
                "marginRight": "10px",
                "width": "35px",
              },
              "& .document-box .card-item": Object {
                "boxShadow": "none",
                "padding": "10px 20px 20px",
              },
              "& .document-box .card-item .heading": Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
                "marginBottom": "10px",
                "textTransform": "capitalize",
                "wordBreak": "break-all",
              },
              "& .document-box .card-item .item-title h6": Object {
                "fontSize": "14px",
                "fontWeight": "600",
                "lineHeight": "18px",
                "marginLeft": "5px",
                "textTransform": "capitalize",
              },
              "& .document-box .card-item .res-info": Object {
                "display": "flex",
                "marginBottom": "10px",
                "width": "100%",
              },
              "& .document-box .card-item .res-info .info-item": Object {
                "width": "50%",
              },
              "& .document-box .card-item .res-info p": Object {
                "color": "darkgray",
              },
              "& .document-box .card-item .res-info span": Object {
                "color": "black",
              },
              "& .document-box .item": Object {
                "alignItems": "center",
                "background": "white",
                "borderRadius": 10,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "minHeight": "34px",
                "padding": 15,
              },
              "& .document-box .item .heading": Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
              },
              "& .document-box .item .heading h4": Object {
                "fontSize": "16px",
                "fontWeight": "600",
                "marginLeft": "10px",
                "textTransform": "capitalize",
                "wordBreak": "break-all",
              },
              "& .document-box .item button.color-btn": Object {
                "background": "#FEF9F3",
                "borderRadius": "25px",
                "color": "#FD9048",
                "fontWeight": "600",
                "minWidth": "60px",
                "padding": "5px 11px",
              },
              "& .document-box .meeting-item": Object {
                "alignItems": "center",
                "border": "2px solid lightgray",
                "borderRadius": 10,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "minHeight": "34px",
                "padding": 15,
              },
              "& .document-box .meeting-item .icons img": Object {
                "cursor": "pointer",
                "margin": "0 5px",
                "width": "20px",
              },
              "& .document-box .meeting-item .item-title,& .document-box .meeting-item .icons": Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
              },
              "& .document-box.resolution-box": Object {
                "background": "#F8F9FE",
              },
              "& .document-view iframe": Object {
                "border": "0",
                "height": "95%",
                "width": "100%",
              },
              "& .list .personal-documents .empty-list": Object {
                "background": "white",
                "height": "calc(100% - 40px)",
              },
              "& .list .personal-documents .empty-list .content-box": Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "column",
                "height": "100%",
                "justifyContent": "center",
                "padding": "20px",
                "textAlign": "center",
              },
              "& .meeting-details": Object {},
              "& .meeting-details .card": Object {
                "marginBottom": "10px",
                "marginTop": "10px",
                "padding": "15px",
              },
              "& .meeting-details p": Object {
                "color": "darkgray",
                "paddingTop": "5px",
              },
              "& .meeting-details p:first-child": Object {
                "paddingTop": "0",
              },
              "& .meeting-details span": Object {
                "color": "black",
              },
              "& .menu": Object {
                "alignItems": "center",
                "background": "#FFFFFF",
                "cursor": "pointer",
                "display": "flex",
                "fontWeight": "600",
                "marginBottom": "18px",
                "padding": "10px 20px",
                "textTransform": "capitalize",
              },
              "& .menu .name": Object {
                "alignItems": "center",
                "display": "flex",
                "maxWidth": "95%",
              },
              "& .menu span": Object {
                "overflow": "hidden",
                "textOverflow": "ellipsis",
                "whiteSpace": "nowrap",
              },
              "& .menu.building-document-menu": Object {
                "justifyContent": "space-between",
              },
              "& .right-image": Object {
                "padding": "25px 60px",
              },
              "& .view": Object {
                "marginBottom": "15px",
                "marginTop": "15px",
              },
              "& .view .item-title h6": Object {
                "fontWeight": "600",
                "lineHeight": "18px",
                "marginLeft": "10px",
              },
              "& a": Object {
                "textDecoration": "none !important",
              },
            },
            "documentChairman": Object {
              "& .document-box": Object {
                "background": "#FFF",
                "borderRadius": 5,
                "marginBottom": 20,
                "padding": 20,
              },
              "& .document-box .card-item": Object {
                "boxShadow": "none",
                "padding": "10px 18px 18px",
              },
              "& .document-box .card-item .heading": Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "space-between",
                "marginBottom": "10px",
                "textTransform": "capitalize",
              },
              "& .document-box .card-item .heading h4": Object {
                "wordBreak": "break-all",
              },
              "& .document-box .card-item .item .icons img": Object {
                "cursor": "pointer",
                "margin": "0 5px",
                "width": "20px",
              },
              "& .document-box .card-item .item .item-title,& .document-box .card-item .item .icons": Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
              },
              "& .document-box .card-item .item-title h6": Object {
                "fontSize": "14px",
                "fontWeight": "600",
                "marginLeft": "5px",
                "textTransform": "capitalize",
              },
              "& .document-box .card-item .res-info": Object {
                "display": "flex",
                "width": "100%",
              },
              "& .document-box .card-item .res-info .info-item": Object {
                "width": "50%",
              },
              "& .document-box .card-item .res-info p": Object {
                "color": "darkgray",
              },
              "& .document-box .card-item .res-info span": Object {
                "color": "black",
              },
              "& .document-box .item": Object {
                "alignItems": "center",
                "border": "2px solid lightgray",
                "borderRadius": 10,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "minHeight": "34px",
                "padding": 12,
              },
              "& .document-box .item .heading": Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
              },
              "& .document-box .item .heading h4": Object {
                "fontSize": "16px",
                "fontWeight": "600",
                "marginLeft": "10px",
                "wordBreak": "break-all",
              },
              "& .document-box .item button.color-btn": Object {
                "background": "#FEF9F3",
                "borderRadius": "25px",
                "color": "#FD9048",
                "fontWeight": "600",
                "minWidth": "60px",
                "padding": "5px 11px",
              },
              "& .document-box a, & .navigation a": Object {
                "textDecoration": "none !important",
              },
              "& .document-box iframe": Object {
                "border": "0",
                "height": "80vh",
                "width": "100%",
              },
              "& .document-box.resolutions": Object {
                "background": "#F4F7FF",
                "borderRadius": 5,
                "marginBottom": 20,
                "marginTop": 10,
                "padding": 0,
              },
              "& .document-box.resolutions .item": Object {
                "marginTop": "15px",
                "minHeight": "20px",
              },
              "& .navigation": Object {
                "display": "flex",
                "justifyContent": "space-between",
                "marginBottom": "20px",
              },
              "& .navigation .sub-heading": Object {
                "fontWeight": 600,
                "marginRight": "15px",
                "wordBreak": "break-all",
              },
              "& .navigation .top-heading": Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 0,
                "marginTop": 10,
                "width": "100%",
              },
              "& .navigation > .MuiBox-root": Object {
                "width": "100%",
              },
              "& .navigation button": Object {
                "background": "#2b6fed",
                "borderRadius": "8px",
                "color": "#FFF",
                "fontWeight": "bold",
                "padding": "10px",
                "width": "220px",
              },
              "& .szh-menu-container ul li a": Object {
                "color": "black",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "textDecoration": "none",
              },
            },
            "personalDocument": Object {
              "& .content-area": Object {
                "height": "85vh",
                "overflowX": "hidden",
                "overflowY": "auto",
              },
              "& .document .left-side": Object {
                "alignItems": "center",
                "display": "flex",
              },
              "& .document .left-side .info .more-info": Object {
                "alignItems": "center",
                "display": "flex",
              },
              "& .document .left-side .info .more-info p": Object {
                "marginRight": "10px",
              },
              "& .document .left-side .info .more-info span": Object {
                "color": "orange",
                "marginRight": "5px",
              },
              "& .document .left-side h4": Object {
                "display": "block",
                "textTransform": "capitalize",
                "wordBreak": "break-all",
              },
              "& .document .left-side img": Object {
                "marginRight": "10px",
                "width": "45px",
              },
              "& .document-box .item": Object {
                "alignItems": "center",
                "background": "white",
                "borderRadius": 10,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "minHeight": "34px",
                "padding": 15,
              },
              "& .document-box .item .heading": Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
              },
              "& .document-box .item .heading h4": Object {
                "fontSize": "16px",
                "fontWeight": "600",
                "marginLeft": "10px",
                "textTransform": "capitalize",
                "wordBreak": "break-all",
              },
              "& .document-box .item button.color-btn": Object {
                "background": "#FEF9F3",
                "borderRadius": "25px",
                "color": "#FD9048",
                "fontWeight": "600",
                "minWidth": "60px",
                "padding": "5px 11px",
              },
              "& .document-view": Object {
                "background": "white",
                "padding": "15px",
              },
              "& .document-view iframe": Object {
                "border": "0",
                "height": "95%",
                "width": "100%",
              },
              "& .list": Object {
                "position": "relative",
                "width": "100%",
              },
              "& .list .personal-documents": Object {
                "minHeight": "calc(100% - 70px)",
              },
              "& .list .personal-documents .content-box h3": Object {
                "fontWeight": "600",
                "marginBottom": "15px",
              },
              "& .list .personal-documents .empty-list": Object {
                "background": "white",
                "height": "calc(100% - 70px)",
              },
              "& .list .personal-documents .empty-list .content-box": Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "column",
                "height": "100%",
                "justifyContent": "center",
                "padding": "20px",
                "textAlign": "center",
              },
              "& .list .personal-documents .empty-list .content-box img": Object {
                "marginBottom": "20px",
              },
              "& .list > .MuiGrid-root": Object {
                "alignContent": "flex-start",
              },
              "& .menu": Object {
                "alignItems": "center",
                "background": "#FFFFFF",
                "cursor": "pointer",
                "display": "flex",
                "fontWeight": "600",
                "marginBottom": "18px",
                "padding": "10px 20px",
              },
              "& .menu.personal-document-menu": Object {
                "justifyContent": "space-between",
                "textTransform": "capitalize",
              },
              "& .menu.personal-document-menu .name": Object {
                "alignItems": "center",
                "display": "flex",
                "maxWidth": "95%",
              },
              "& .menu.personal-document-menu span": Object {
                "overflow": "hidden",
                "textOverflow": "ellipsis",
                "whiteSpace": "nowrap",
              },
              "& .right-image": Object {
                "padding": "25px 60px",
              },
              "& .szh-menu-container ul li a": Object {
                "color": "black",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "textDecoration": "none",
              },
              "& .upload-button": Object {
                "alignItems": "center",
                "bottom": 0,
                "display": "flex",
                "justifyContent": "center",
                "left": 0,
                "padding": "10px 0",
                "position": "sticky",
                "right": 0,
              },
              "& .upload-button .MuiGrid-container": Object {
                "width": "fit-content",
              },
              "& .upload-button button": Object {
                "background": "#2b6fec",
                "borderRadius": "25px",
                "color": "white",
                "padding": "12px 50px",
              },
              "& a": Object {
                "textDecoration": "none !important",
              },
            },
          }
        }
        id="DocumentListChairman"
        navigation={
          Object {
            "dispatch": [Function],
            "getParam": [Function],
            "navigate": [Function],
            "setParams": [Function],
          }
        }
        t={[Function]}
      >
        <Styled(MuiBox)
          style={
            Object {
              "background": "#fff",
              "padding": 20,
            }
          }
        >
          <div
            className="MuiBox-root MuiBox-root-2"
            style={
              Object {
                "background": "#fff",
                "padding": 20,
              }
            }
          >
            <WithStyles(ForwardRef(Grid))
              container={true}
              spacing={2}
            >
              <ForwardRef(Grid)
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                    "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                    "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                    "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                    "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                container={true}
                spacing={2}
              >
                <div
                  className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                >
                  <WithStyles(ForwardRef(Grid))
                    item={true}
                    md={6}
                    sm={6}
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "gap": "20px",
                        "justifyContent": "start",
                      }
                    }
                    xs={6}
                  >
                    <ForwardRef(Grid)
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      item={true}
                      md={6}
                      sm={6}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "gap": "20px",
                          "justifyContent": "start",
                        }
                      }
                      xs={6}
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-6 MuiGrid-grid-sm-6 MuiGrid-grid-md-6"
                        style={
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "gap": "20px",
                            "justifyContent": "start",
                          }
                        }
                      >
                        <img
                          alt="BuildingLogo"
                          width={70}
                        />
                        <WithStyles(ForwardRef(Link))
                          href="#"
                          style={
                            Object {
                              "textDecoration": "none",
                            }
                          }
                        >
                          <ForwardRef(Link)
                            classes={
                              Object {
                                "button": "MuiLink-button",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiLink-root",
                                "underlineAlways": "MuiLink-underlineAlways",
                                "underlineHover": "MuiLink-underlineHover",
                                "underlineNone": "MuiLink-underlineNone",
                              }
                            }
                            href="#"
                            style={
                              Object {
                                "textDecoration": "none",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(Typography))
                              className="MuiLink-root MuiLink-underlineHover"
                              color="primary"
                              component="a"
                              href="#"
                              onBlur={[Function]}
                              onFocus={[Function]}
                              style={
                                Object {
                                  "textDecoration": "none",
                                }
                              }
                              variant="inherit"
                            >
                              <ForwardRef(Typography)
                                className="MuiLink-root MuiLink-underlineHover"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                color="primary"
                                component="a"
                                href="#"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                style={
                                  Object {
                                    "textDecoration": "none",
                                  }
                                }
                                variant="inherit"
                              >
                                <a
                                  className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                  href="#"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  style={
                                    Object {
                                      "textDecoration": "none",
                                    }
                                  }
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    style={
                                      Object {
                                        "fontWeight": 600,
                                      }
                                    }
                                    variant="h6"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      style={
                                        Object {
                                          "fontWeight": 600,
                                        }
                                      }
                                      variant="h6"
                                    >
                                      <h6
                                        className="MuiTypography-root MuiTypography-h6"
                                        style={
                                          Object {
                                            "fontWeight": 600,
                                          }
                                        }
                                      >
                                        Complex_Name
                                      </h6>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                </a>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </ForwardRef(Link)>
                        </WithStyles(ForwardRef(Link))>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                  <WithStyles(ForwardRef(Grid))
                    item={true}
                    md={6}
                    sm={6}
                    style={
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "gap": "20px",
                        "justifyContent": "end",
                      }
                    }
                    xs={6}
                  >
                    <ForwardRef(Grid)
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                          "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                          "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                          "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                          "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                          "root": "MuiGrid-root",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      item={true}
                      md={6}
                      sm={6}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "gap": "20px",
                          "justifyContent": "end",
                        }
                      }
                      xs={6}
                    >
                      <div
                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-6 MuiGrid-grid-sm-6 MuiGrid-grid-md-6"
                        style={
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "gap": "20px",
                            "justifyContent": "end",
                          }
                        }
                      >
                        <div
                          className="right-icon"
                          style={
                            Object {
                              "display": "flex",
                              "gap": "15px",
                            }
                          }
                        >
                          <Styled(MuiBox)>
                            <div
                              className="MuiBox-root MuiBox-root-3"
                            >
                              <ForwardRef(Menu)
                                align="center"
                                arrow={true}
                                className="chairman-lang-menu"
                                direction="bottom"
                                menuButton={
                                  <img
                                    alt="GlobalIcon"
                                    src={
                                      Object {
                                        "testUri": "../../../packages/blocks/dashboard/assets/global.png",
                                      }
                                    }
                                  />
                                }
                                offsetX={0}
                                offsetY={0}
                                overflow="visible"
                                position="auto"
                                reposition="auto"
                                submenuCloseDelay={150}
                                submenuOpenDelay={300}
                                transitionTimeout={500}
                                viewScroll="initial"
                              >
                                <img
                                  alt="GlobalIcon"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  src={
                                    Object {
                                      "testUri": "../../../packages/blocks/dashboard/assets/global.png",
                                    }
                                  }
                                />
                                <ForwardRef(ControlledMenu)
                                  align="center"
                                  anchorRef={
                                    Object {
                                      "current": <img
                                        alt="GlobalIcon"
                                        src="[object Object]"
                                      />,
                                    }
                                  }
                                  aria-label="Menu"
                                  arrow={true}
                                  className="chairman-lang-menu"
                                  direction="bottom"
                                  endTransition={[Function]}
                                  menuItemFocus={Object {}}
                                  offsetX={0}
                                  offsetY={0}
                                  onClose={[Function]}
                                  overflow="visible"
                                  position="auto"
                                  reposition="auto"
                                  skipOpen={
                                    Object {
                                      "current": false,
                                    }
                                  }
                                  submenuCloseDelay={150}
                                  submenuOpenDelay={300}
                                  transitionTimeout={500}
                                  viewScroll="initial"
                                >
                                  <div
                                    className="szh-menu-container chairman-lang-menu"
                                    onBlur={[Function]}
                                    onKeyDown={[Function]}
                                  />
                                </ForwardRef(ControlledMenu)>
                              </ForwardRef(Menu)>
                            </div>
                          </Styled(MuiBox)>
                          <WithStyles(ForwardRef(Link))>
                            <ForwardRef(Link)
                              classes={
                                Object {
                                  "button": "MuiLink-button",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiLink-root",
                                  "underlineAlways": "MuiLink-underlineAlways",
                                  "underlineHover": "MuiLink-underlineHover",
                                  "underlineNone": "MuiLink-underlineNone",
                                }
                              }
                            >
                              <WithStyles(ForwardRef(Typography))
                                className="MuiLink-root MuiLink-underlineHover"
                                color="primary"
                                component="a"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                variant="inherit"
                              >
                                <ForwardRef(Typography)
                                  className="MuiLink-root MuiLink-underlineHover"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  color="primary"
                                  component="a"
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  variant="inherit"
                                >
                                  <a
                                    className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                  >
                                    <img
                                      alt="GlobalIcon"
                                      src={
                                        Object {
                                          "testUri": "../../../packages/blocks/dashboard/assets/notification.png",
                                        }
                                      }
                                      style={
                                        Object {
                                          "marginLeft": "10px",
                                        }
                                      }
                                    />
                                  </a>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </ForwardRef(Link)>
                          </WithStyles(ForwardRef(Link))>
                        </div>
                        <Styled(MuiBox)
                          style={
                            Object {
                              "alignItems": "center",
                              "display": "flex",
                              "gap": "20px",
                              "justifyContent": "start",
                            }
                          }
                        >
                          <div
                            className="MuiBox-root MuiBox-root-4"
                            style={
                              Object {
                                "alignItems": "center",
                                "display": "flex",
                                "gap": "20px",
                                "justifyContent": "start",
                              }
                            }
                          >
                            <img
                              alt="ChairmanUser"
                              style={
                                Object {
                                  "borderRadius": "50%",
                                }
                              }
                              width={50}
                            />
                            <Styled(MuiBox)>
                              <div
                                className="MuiBox-root MuiBox-root-5"
                              >
                                <p
                                  style={
                                    Object {
                                      "textTransform": "capitalize",
                                    }
                                  }
                                >
                                  User_Name
                                </p>
                                <WithStyles(ForwardRef(Typography))
                                  variant="body2"
                                >
                                  <ForwardRef(Typography)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    variant="body2"
                                  >
                                    <p
                                      className="MuiTypography-root MuiTypography-body2"
                                    >
                                      User_Role
                                    </p>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                            </Styled(MuiBox)>
                          </div>
                        </Styled(MuiBox)>
                        <ForwardRef(Menu)
                          align="end"
                          arrow={true}
                          className="chairman-top-menu"
                          direction="bottom"
                          menuButton={
                            <WithStyles(ForwardRef(IconButton))>
                              <Memo />
                            </WithStyles(ForwardRef(IconButton))>
                          }
                          offsetX={0}
                          offsetY={0}
                          overflow="visible"
                          position="auto"
                          reposition="auto"
                          submenuCloseDelay={150}
                          submenuOpenDelay={300}
                          transitionTimeout={500}
                          viewScroll="initial"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            onClick={[Function]}
                            onKeyDown={[Function]}
                          >
                            <ForwardRef(IconButton)
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              onClick={[Function]}
                              onKeyDown={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                centerRipple={true}
                                className="MuiIconButton-root"
                                disabled={false}
                                focusRipple={true}
                                onClick={[Function]}
                                onKeyDown={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  centerRipple={true}
                                  className="MuiIconButton-root"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                >
                                  <button
                                    className="MuiButtonBase-root MuiIconButton-root"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef(KeyboardArrowDownIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(KeyboardArrowDownIcon)>
                                    </span>
                                    <WithStyles(memo)
                                      center={true}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={true}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                          <ForwardRef(ControlledMenu)
                            align="end"
                            anchorRef={
                              Object {
                                "current": <button
                                  class="MuiButtonBase-root MuiIconButton-root"
                                  tabindex="0"
                                  type="button"
                                >
                                  <span
                                    class="MuiIconButton-label"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      class="MuiSvgIcon-root"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"
                                      />
                                    </svg>
                                  </span>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </button>,
                              }
                            }
                            aria-label="Menu"
                            arrow={true}
                            className="chairman-top-menu"
                            direction="bottom"
                            endTransition={[Function]}
                            menuItemFocus={Object {}}
                            offsetX={0}
                            offsetY={0}
                            onClose={[Function]}
                            overflow="visible"
                            position="auto"
                            reposition="auto"
                            skipOpen={
                              Object {
                                "current": false,
                              }
                            }
                            submenuCloseDelay={150}
                            submenuOpenDelay={300}
                            transitionTimeout={500}
                            viewScroll="initial"
                          >
                            <div
                              className="szh-menu-container chairman-top-menu"
                              onBlur={[Function]}
                              onKeyDown={[Function]}
                            />
                          </ForwardRef(ControlledMenu)>
                        </ForwardRef(Menu)>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
            <WithStyles(ForwardRef(Dialog))
              className="delete-document personal chairman-logout"
              fullWidth={true}
              onClose={[Function]}
              open={false}
            >
              <ForwardRef(Dialog)
                className="delete-document personal chairman-logout"
                classes={
                  Object {
                    "container": "MuiDialog-container",
                    "paper": "MuiDialog-paper",
                    "paperFullScreen": "MuiDialog-paperFullScreen",
                    "paperFullWidth": "MuiDialog-paperFullWidth",
                    "paperScrollBody": "MuiDialog-paperScrollBody",
                    "paperScrollPaper": "MuiDialog-paperScrollPaper",
                    "paperWidthFalse": "MuiDialog-paperWidthFalse",
                    "paperWidthLg": "MuiDialog-paperWidthLg",
                    "paperWidthMd": "MuiDialog-paperWidthMd",
                    "paperWidthSm": "MuiDialog-paperWidthSm",
                    "paperWidthXl": "MuiDialog-paperWidthXl",
                    "paperWidthXs": "MuiDialog-paperWidthXs",
                    "root": "MuiDialog-root",
                    "scrollBody": "MuiDialog-scrollBody",
                    "scrollPaper": "MuiDialog-scrollPaper",
                  }
                }
                fullWidth={true}
                onClose={[Function]}
                open={false}
              >
                <ForwardRef(Modal)
                  BackdropComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "Naked": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "invisible": [Function],
                          "open": [Function],
                          "transitionDuration": [Function],
                        },
                        "render": [Function],
                      },
                      "displayName": "WithStyles(ForwardRef(Backdrop))",
                      "options": Object {
                        "defaultTheme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                            "width": [Function],
                          },
                          "direction": "ltr",
                          "mixins": Object {
                            "gutters": [Function],
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "overrides": Object {},
                          "palette": Object {
                            "action": Object {
                              "activatedOpacity": 0.12,
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "disabledOpacity": 0.38,
                              "focus": "rgba(0, 0, 0, 0.12)",
                              "focusOpacity": 0.12,
                              "hover": "rgba(0, 0, 0, 0.04)",
                              "hoverOpacity": 0.04,
                              "selected": "rgba(0, 0, 0, 0.08)",
                              "selectedOpacity": 0.08,
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#fafafa",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "info": Object {
                              "contrastText": "#fff",
                              "dark": "#1976d2",
                              "light": "#64b5f6",
                              "main": "#2196f3",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "success": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#388e3c",
                              "light": "#81c784",
                              "main": "#4caf50",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "tonalOffset": 0.2,
                            "type": "light",
                            "warning": Object {
                              "contrastText": "rgba(0, 0, 0, 0.87)",
                              "dark": "#f57c00",
                              "light": "#ffb74d",
                              "main": "#ff9800",
                            },
                          },
                          "props": Object {},
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": [Function],
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.43,
                            },
                            "button": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.75,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightBold": 700,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1.167,
                            },
                            "h2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1.2,
                            },
                            "h3": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.167,
                            },
                            "h4": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.235,
                            },
                            "h5": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.334,
                            },
                            "h6": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "htmlFontSize": 16,
                            "overline": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "round": [Function],
                            "subtitle1": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "speedDial": 1050,
                            "tooltip": 1500,
                          },
                        },
                        "name": "MuiBackdrop",
                      },
                      "propTypes": Object {
                        "classes": [Function],
                        "innerRef": [Function],
                      },
                      "render": [Function],
                      "useStyles": [Function],
                    }
                  }
                  BackdropProps={
                    Object {
                      "transitionDuration": Object {
                        "enter": 225,
                        "exit": 195,
                      },
                    }
                  }
                  className="MuiDialog-root delete-document personal chairman-logout"
                  closeAfterTransition={true}
                  disableEscapeKeyDown={false}
                  onClose={[Function]}
                  open={false}
                />
              </ForwardRef(Dialog)>
            </WithStyles(ForwardRef(Dialog))>
          </div>
        </Styled(MuiBox)>
      </DashboardHeader>
      <Styled(MuiBox)
        style={
          Object {
            "display": "flex",
          }
        }
      >
        <div
          className="MuiBox-root MuiBox-root-6"
          style={
            Object {
              "display": "flex",
            }
          }
        >
          <WithStyles(ForwardRef(Grid))
            className="SideBar"
            item={true}
            md={3}
            sm={3}
            xs={3}
          >
            <ForwardRef(Grid)
              className="SideBar"
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                  "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                  "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                  "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                  "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              item={true}
              md={3}
              sm={3}
              xs={3}
            >
              <div
                className="MuiGrid-root SideBar MuiGrid-item MuiGrid-grid-xs-3 MuiGrid-grid-sm-3 MuiGrid-grid-md-3"
              >
                <withRouter(ChairmanSidebar)
                  classes={
                    Object {
                      "buildingDocument": Object {
                        "& .content-area": Object {
                          "height": "85vh",
                          "overflowX": "hidden",
                          "overflowY": "auto",
                        },
                        "& .document .left-side": Object {
                          "alignItems": "center",
                          "display": "flex",
                        },
                        "& .document .left-side h4": Object {
                          "textTransform": "capitalize",
                          "wordBreak": "break-all",
                        },
                        "& .document .left-side img": Object {
                          "marginRight": "10px",
                          "width": "35px",
                        },
                        "& .document-box .card-item": Object {
                          "boxShadow": "none",
                          "padding": "10px 20px 20px",
                        },
                        "& .document-box .card-item .heading": Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "space-between",
                          "marginBottom": "10px",
                          "textTransform": "capitalize",
                          "wordBreak": "break-all",
                        },
                        "& .document-box .card-item .item-title h6": Object {
                          "fontSize": "14px",
                          "fontWeight": "600",
                          "lineHeight": "18px",
                          "marginLeft": "5px",
                          "textTransform": "capitalize",
                        },
                        "& .document-box .card-item .res-info": Object {
                          "display": "flex",
                          "marginBottom": "10px",
                          "width": "100%",
                        },
                        "& .document-box .card-item .res-info .info-item": Object {
                          "width": "50%",
                        },
                        "& .document-box .card-item .res-info p": Object {
                          "color": "darkgray",
                        },
                        "& .document-box .card-item .res-info span": Object {
                          "color": "black",
                        },
                        "& .document-box .item": Object {
                          "alignItems": "center",
                          "background": "white",
                          "borderRadius": 10,
                          "display": "flex",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                          "minHeight": "34px",
                          "padding": 15,
                        },
                        "& .document-box .item .heading": Object {
                          "alignItems": "center",
                          "display": "flex",
                          "flexDirection": "row",
                        },
                        "& .document-box .item .heading h4": Object {
                          "fontSize": "16px",
                          "fontWeight": "600",
                          "marginLeft": "10px",
                          "textTransform": "capitalize",
                          "wordBreak": "break-all",
                        },
                        "& .document-box .item button.color-btn": Object {
                          "background": "#FEF9F3",
                          "borderRadius": "25px",
                          "color": "#FD9048",
                          "fontWeight": "600",
                          "minWidth": "60px",
                          "padding": "5px 11px",
                        },
                        "& .document-box .meeting-item": Object {
                          "alignItems": "center",
                          "border": "2px solid lightgray",
                          "borderRadius": 10,
                          "display": "flex",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                          "minHeight": "34px",
                          "padding": 15,
                        },
                        "& .document-box .meeting-item .icons img": Object {
                          "cursor": "pointer",
                          "margin": "0 5px",
                          "width": "20px",
                        },
                        "& .document-box .meeting-item .item-title,& .document-box .meeting-item .icons": Object {
                          "alignItems": "center",
                          "display": "flex",
                          "flexDirection": "row",
                        },
                        "& .document-box.resolution-box": Object {
                          "background": "#F8F9FE",
                        },
                        "& .document-view iframe": Object {
                          "border": "0",
                          "height": "95%",
                          "width": "100%",
                        },
                        "& .list .personal-documents .empty-list": Object {
                          "background": "white",
                          "height": "calc(100% - 40px)",
                        },
                        "& .list .personal-documents .empty-list .content-box": Object {
                          "alignItems": "center",
                          "display": "flex",
                          "flexDirection": "column",
                          "height": "100%",
                          "justifyContent": "center",
                          "padding": "20px",
                          "textAlign": "center",
                        },
                        "& .meeting-details": Object {},
                        "& .meeting-details .card": Object {
                          "marginBottom": "10px",
                          "marginTop": "10px",
                          "padding": "15px",
                        },
                        "& .meeting-details p": Object {
                          "color": "darkgray",
                          "paddingTop": "5px",
                        },
                        "& .meeting-details p:first-child": Object {
                          "paddingTop": "0",
                        },
                        "& .meeting-details span": Object {
                          "color": "black",
                        },
                        "& .menu": Object {
                          "alignItems": "center",
                          "background": "#FFFFFF",
                          "cursor": "pointer",
                          "display": "flex",
                          "fontWeight": "600",
                          "marginBottom": "18px",
                          "padding": "10px 20px",
                          "textTransform": "capitalize",
                        },
                        "& .menu .name": Object {
                          "alignItems": "center",
                          "display": "flex",
                          "maxWidth": "95%",
                        },
                        "& .menu span": Object {
                          "overflow": "hidden",
                          "textOverflow": "ellipsis",
                          "whiteSpace": "nowrap",
                        },
                        "& .menu.building-document-menu": Object {
                          "justifyContent": "space-between",
                        },
                        "& .right-image": Object {
                          "padding": "25px 60px",
                        },
                        "& .view": Object {
                          "marginBottom": "15px",
                          "marginTop": "15px",
                        },
                        "& .view .item-title h6": Object {
                          "fontWeight": "600",
                          "lineHeight": "18px",
                          "marginLeft": "10px",
                        },
                        "& a": Object {
                          "textDecoration": "none !important",
                        },
                      },
                      "documentChairman": Object {
                        "& .document-box": Object {
                          "background": "#FFF",
                          "borderRadius": 5,
                          "marginBottom": 20,
                          "padding": 20,
                        },
                        "& .document-box .card-item": Object {
                          "boxShadow": "none",
                          "padding": "10px 18px 18px",
                        },
                        "& .document-box .card-item .heading": Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "space-between",
                          "marginBottom": "10px",
                          "textTransform": "capitalize",
                        },
                        "& .document-box .card-item .heading h4": Object {
                          "wordBreak": "break-all",
                        },
                        "& .document-box .card-item .item .icons img": Object {
                          "cursor": "pointer",
                          "margin": "0 5px",
                          "width": "20px",
                        },
                        "& .document-box .card-item .item .item-title,& .document-box .card-item .item .icons": Object {
                          "alignItems": "center",
                          "display": "flex",
                          "flexDirection": "row",
                        },
                        "& .document-box .card-item .item-title h6": Object {
                          "fontSize": "14px",
                          "fontWeight": "600",
                          "marginLeft": "5px",
                          "textTransform": "capitalize",
                        },
                        "& .document-box .card-item .res-info": Object {
                          "display": "flex",
                          "width": "100%",
                        },
                        "& .document-box .card-item .res-info .info-item": Object {
                          "width": "50%",
                        },
                        "& .document-box .card-item .res-info p": Object {
                          "color": "darkgray",
                        },
                        "& .document-box .card-item .res-info span": Object {
                          "color": "black",
                        },
                        "& .document-box .item": Object {
                          "alignItems": "center",
                          "border": "2px solid lightgray",
                          "borderRadius": 10,
                          "display": "flex",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                          "minHeight": "34px",
                          "padding": 12,
                        },
                        "& .document-box .item .heading": Object {
                          "alignItems": "center",
                          "display": "flex",
                          "flexDirection": "row",
                        },
                        "& .document-box .item .heading h4": Object {
                          "fontSize": "16px",
                          "fontWeight": "600",
                          "marginLeft": "10px",
                          "wordBreak": "break-all",
                        },
                        "& .document-box .item button.color-btn": Object {
                          "background": "#FEF9F3",
                          "borderRadius": "25px",
                          "color": "#FD9048",
                          "fontWeight": "600",
                          "minWidth": "60px",
                          "padding": "5px 11px",
                        },
                        "& .document-box a, & .navigation a": Object {
                          "textDecoration": "none !important",
                        },
                        "& .document-box iframe": Object {
                          "border": "0",
                          "height": "80vh",
                          "width": "100%",
                        },
                        "& .document-box.resolutions": Object {
                          "background": "#F4F7FF",
                          "borderRadius": 5,
                          "marginBottom": 20,
                          "marginTop": 10,
                          "padding": 0,
                        },
                        "& .document-box.resolutions .item": Object {
                          "marginTop": "15px",
                          "minHeight": "20px",
                        },
                        "& .navigation": Object {
                          "display": "flex",
                          "justifyContent": "space-between",
                          "marginBottom": "20px",
                        },
                        "& .navigation .sub-heading": Object {
                          "fontWeight": 600,
                          "marginRight": "15px",
                          "wordBreak": "break-all",
                        },
                        "& .navigation .top-heading": Object {
                          "alignItems": "center",
                          "display": "flex",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                          "marginBottom": 0,
                          "marginTop": 10,
                          "width": "100%",
                        },
                        "& .navigation > .MuiBox-root": Object {
                          "width": "100%",
                        },
                        "& .navigation button": Object {
                          "background": "#2b6fed",
                          "borderRadius": "8px",
                          "color": "#FFF",
                          "fontWeight": "bold",
                          "padding": "10px",
                          "width": "220px",
                        },
                        "& .szh-menu-container ul li a": Object {
                          "color": "black",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "textDecoration": "none",
                        },
                      },
                      "personalDocument": Object {
                        "& .content-area": Object {
                          "height": "85vh",
                          "overflowX": "hidden",
                          "overflowY": "auto",
                        },
                        "& .document .left-side": Object {
                          "alignItems": "center",
                          "display": "flex",
                        },
                        "& .document .left-side .info .more-info": Object {
                          "alignItems": "center",
                          "display": "flex",
                        },
                        "& .document .left-side .info .more-info p": Object {
                          "marginRight": "10px",
                        },
                        "& .document .left-side .info .more-info span": Object {
                          "color": "orange",
                          "marginRight": "5px",
                        },
                        "& .document .left-side h4": Object {
                          "display": "block",
                          "textTransform": "capitalize",
                          "wordBreak": "break-all",
                        },
                        "& .document .left-side img": Object {
                          "marginRight": "10px",
                          "width": "45px",
                        },
                        "& .document-box .item": Object {
                          "alignItems": "center",
                          "background": "white",
                          "borderRadius": 10,
                          "display": "flex",
                          "flexDirection": "row",
                          "justifyContent": "space-between",
                          "minHeight": "34px",
                          "padding": 15,
                        },
                        "& .document-box .item .heading": Object {
                          "alignItems": "center",
                          "display": "flex",
                          "flexDirection": "row",
                        },
                        "& .document-box .item .heading h4": Object {
                          "fontSize": "16px",
                          "fontWeight": "600",
                          "marginLeft": "10px",
                          "textTransform": "capitalize",
                          "wordBreak": "break-all",
                        },
                        "& .document-box .item button.color-btn": Object {
                          "background": "#FEF9F3",
                          "borderRadius": "25px",
                          "color": "#FD9048",
                          "fontWeight": "600",
                          "minWidth": "60px",
                          "padding": "5px 11px",
                        },
                        "& .document-view": Object {
                          "background": "white",
                          "padding": "15px",
                        },
                        "& .document-view iframe": Object {
                          "border": "0",
                          "height": "95%",
                          "width": "100%",
                        },
                        "& .list": Object {
                          "position": "relative",
                          "width": "100%",
                        },
                        "& .list .personal-documents": Object {
                          "minHeight": "calc(100% - 70px)",
                        },
                        "& .list .personal-documents .content-box h3": Object {
                          "fontWeight": "600",
                          "marginBottom": "15px",
                        },
                        "& .list .personal-documents .empty-list": Object {
                          "background": "white",
                          "height": "calc(100% - 70px)",
                        },
                        "& .list .personal-documents .empty-list .content-box": Object {
                          "alignItems": "center",
                          "display": "flex",
                          "flexDirection": "column",
                          "height": "100%",
                          "justifyContent": "center",
                          "padding": "20px",
                          "textAlign": "center",
                        },
                        "& .list .personal-documents .empty-list .content-box img": Object {
                          "marginBottom": "20px",
                        },
                        "& .list > .MuiGrid-root": Object {
                          "alignContent": "flex-start",
                        },
                        "& .menu": Object {
                          "alignItems": "center",
                          "background": "#FFFFFF",
                          "cursor": "pointer",
                          "display": "flex",
                          "fontWeight": "600",
                          "marginBottom": "18px",
                          "padding": "10px 20px",
                        },
                        "& .menu.personal-document-menu": Object {
                          "justifyContent": "space-between",
                          "textTransform": "capitalize",
                        },
                        "& .menu.personal-document-menu .name": Object {
                          "alignItems": "center",
                          "display": "flex",
                          "maxWidth": "95%",
                        },
                        "& .menu.personal-document-menu span": Object {
                          "overflow": "hidden",
                          "textOverflow": "ellipsis",
                          "whiteSpace": "nowrap",
                        },
                        "& .right-image": Object {
                          "padding": "25px 60px",
                        },
                        "& .szh-menu-container ul li a": Object {
                          "color": "black",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "textDecoration": "none",
                        },
                        "& .upload-button": Object {
                          "alignItems": "center",
                          "bottom": 0,
                          "display": "flex",
                          "justifyContent": "center",
                          "left": 0,
                          "padding": "10px 0",
                          "position": "sticky",
                          "right": 0,
                        },
                        "& .upload-button .MuiGrid-container": Object {
                          "width": "fit-content",
                        },
                        "& .upload-button button": Object {
                          "background": "#2b6fec",
                          "borderRadius": "25px",
                          "color": "white",
                          "padding": "12px 50px",
                        },
                        "& a": Object {
                          "textDecoration": "none !important",
                        },
                      },
                    }
                  }
                  id="DocumentListChairman"
                  navigation={
                    Object {
                      "dispatch": [Function],
                      "getParam": [Function],
                      "navigate": [Function],
                      "setParams": [Function],
                    }
                  }
                  t={[Function]}
                >
                  <Route>
                    <ChairmanSidebar
                      classes={
                        Object {
                          "buildingDocument": Object {
                            "& .content-area": Object {
                              "height": "85vh",
                              "overflowX": "hidden",
                              "overflowY": "auto",
                            },
                            "& .document .left-side": Object {
                              "alignItems": "center",
                              "display": "flex",
                            },
                            "& .document .left-side h4": Object {
                              "textTransform": "capitalize",
                              "wordBreak": "break-all",
                            },
                            "& .document .left-side img": Object {
                              "marginRight": "10px",
                              "width": "35px",
                            },
                            "& .document-box .card-item": Object {
                              "boxShadow": "none",
                              "padding": "10px 20px 20px",
                            },
                            "& .document-box .card-item .heading": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "justifyContent": "space-between",
                              "marginBottom": "10px",
                              "textTransform": "capitalize",
                              "wordBreak": "break-all",
                            },
                            "& .document-box .card-item .item-title h6": Object {
                              "fontSize": "14px",
                              "fontWeight": "600",
                              "lineHeight": "18px",
                              "marginLeft": "5px",
                              "textTransform": "capitalize",
                            },
                            "& .document-box .card-item .res-info": Object {
                              "display": "flex",
                              "marginBottom": "10px",
                              "width": "100%",
                            },
                            "& .document-box .card-item .res-info .info-item": Object {
                              "width": "50%",
                            },
                            "& .document-box .card-item .res-info p": Object {
                              "color": "darkgray",
                            },
                            "& .document-box .card-item .res-info span": Object {
                              "color": "black",
                            },
                            "& .document-box .item": Object {
                              "alignItems": "center",
                              "background": "white",
                              "borderRadius": 10,
                              "display": "flex",
                              "flexDirection": "row",
                              "justifyContent": "space-between",
                              "minHeight": "34px",
                              "padding": 15,
                            },
                            "& .document-box .item .heading": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "row",
                            },
                            "& .document-box .item .heading h4": Object {
                              "fontSize": "16px",
                              "fontWeight": "600",
                              "marginLeft": "10px",
                              "textTransform": "capitalize",
                              "wordBreak": "break-all",
                            },
                            "& .document-box .item button.color-btn": Object {
                              "background": "#FEF9F3",
                              "borderRadius": "25px",
                              "color": "#FD9048",
                              "fontWeight": "600",
                              "minWidth": "60px",
                              "padding": "5px 11px",
                            },
                            "& .document-box .meeting-item": Object {
                              "alignItems": "center",
                              "border": "2px solid lightgray",
                              "borderRadius": 10,
                              "display": "flex",
                              "flexDirection": "row",
                              "justifyContent": "space-between",
                              "minHeight": "34px",
                              "padding": 15,
                            },
                            "& .document-box .meeting-item .icons img": Object {
                              "cursor": "pointer",
                              "margin": "0 5px",
                              "width": "20px",
                            },
                            "& .document-box .meeting-item .item-title,& .document-box .meeting-item .icons": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "row",
                            },
                            "& .document-box.resolution-box": Object {
                              "background": "#F8F9FE",
                            },
                            "& .document-view iframe": Object {
                              "border": "0",
                              "height": "95%",
                              "width": "100%",
                            },
                            "& .list .personal-documents .empty-list": Object {
                              "background": "white",
                              "height": "calc(100% - 40px)",
                            },
                            "& .list .personal-documents .empty-list .content-box": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "column",
                              "height": "100%",
                              "justifyContent": "center",
                              "padding": "20px",
                              "textAlign": "center",
                            },
                            "& .meeting-details": Object {},
                            "& .meeting-details .card": Object {
                              "marginBottom": "10px",
                              "marginTop": "10px",
                              "padding": "15px",
                            },
                            "& .meeting-details p": Object {
                              "color": "darkgray",
                              "paddingTop": "5px",
                            },
                            "& .meeting-details p:first-child": Object {
                              "paddingTop": "0",
                            },
                            "& .meeting-details span": Object {
                              "color": "black",
                            },
                            "& .menu": Object {
                              "alignItems": "center",
                              "background": "#FFFFFF",
                              "cursor": "pointer",
                              "display": "flex",
                              "fontWeight": "600",
                              "marginBottom": "18px",
                              "padding": "10px 20px",
                              "textTransform": "capitalize",
                            },
                            "& .menu .name": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "maxWidth": "95%",
                            },
                            "& .menu span": Object {
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "whiteSpace": "nowrap",
                            },
                            "& .menu.building-document-menu": Object {
                              "justifyContent": "space-between",
                            },
                            "& .right-image": Object {
                              "padding": "25px 60px",
                            },
                            "& .view": Object {
                              "marginBottom": "15px",
                              "marginTop": "15px",
                            },
                            "& .view .item-title h6": Object {
                              "fontWeight": "600",
                              "lineHeight": "18px",
                              "marginLeft": "10px",
                            },
                            "& a": Object {
                              "textDecoration": "none !important",
                            },
                          },
                          "documentChairman": Object {
                            "& .document-box": Object {
                              "background": "#FFF",
                              "borderRadius": 5,
                              "marginBottom": 20,
                              "padding": 20,
                            },
                            "& .document-box .card-item": Object {
                              "boxShadow": "none",
                              "padding": "10px 18px 18px",
                            },
                            "& .document-box .card-item .heading": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "justifyContent": "space-between",
                              "marginBottom": "10px",
                              "textTransform": "capitalize",
                            },
                            "& .document-box .card-item .heading h4": Object {
                              "wordBreak": "break-all",
                            },
                            "& .document-box .card-item .item .icons img": Object {
                              "cursor": "pointer",
                              "margin": "0 5px",
                              "width": "20px",
                            },
                            "& .document-box .card-item .item .item-title,& .document-box .card-item .item .icons": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "row",
                            },
                            "& .document-box .card-item .item-title h6": Object {
                              "fontSize": "14px",
                              "fontWeight": "600",
                              "marginLeft": "5px",
                              "textTransform": "capitalize",
                            },
                            "& .document-box .card-item .res-info": Object {
                              "display": "flex",
                              "width": "100%",
                            },
                            "& .document-box .card-item .res-info .info-item": Object {
                              "width": "50%",
                            },
                            "& .document-box .card-item .res-info p": Object {
                              "color": "darkgray",
                            },
                            "& .document-box .card-item .res-info span": Object {
                              "color": "black",
                            },
                            "& .document-box .item": Object {
                              "alignItems": "center",
                              "border": "2px solid lightgray",
                              "borderRadius": 10,
                              "display": "flex",
                              "flexDirection": "row",
                              "justifyContent": "space-between",
                              "minHeight": "34px",
                              "padding": 12,
                            },
                            "& .document-box .item .heading": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "row",
                            },
                            "& .document-box .item .heading h4": Object {
                              "fontSize": "16px",
                              "fontWeight": "600",
                              "marginLeft": "10px",
                              "wordBreak": "break-all",
                            },
                            "& .document-box .item button.color-btn": Object {
                              "background": "#FEF9F3",
                              "borderRadius": "25px",
                              "color": "#FD9048",
                              "fontWeight": "600",
                              "minWidth": "60px",
                              "padding": "5px 11px",
                            },
                            "& .document-box a, & .navigation a": Object {
                              "textDecoration": "none !important",
                            },
                            "& .document-box iframe": Object {
                              "border": "0",
                              "height": "80vh",
                              "width": "100%",
                            },
                            "& .document-box.resolutions": Object {
                              "background": "#F4F7FF",
                              "borderRadius": 5,
                              "marginBottom": 20,
                              "marginTop": 10,
                              "padding": 0,
                            },
                            "& .document-box.resolutions .item": Object {
                              "marginTop": "15px",
                              "minHeight": "20px",
                            },
                            "& .navigation": Object {
                              "display": "flex",
                              "justifyContent": "space-between",
                              "marginBottom": "20px",
                            },
                            "& .navigation .sub-heading": Object {
                              "fontWeight": 600,
                              "marginRight": "15px",
                              "wordBreak": "break-all",
                            },
                            "& .navigation .top-heading": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "row",
                              "justifyContent": "space-between",
                              "marginBottom": 0,
                              "marginTop": 10,
                              "width": "100%",
                            },
                            "& .navigation > .MuiBox-root": Object {
                              "width": "100%",
                            },
                            "& .navigation button": Object {
                              "background": "#2b6fed",
                              "borderRadius": "8px",
                              "color": "#FFF",
                              "fontWeight": "bold",
                              "padding": "10px",
                              "width": "220px",
                            },
                            "& .szh-menu-container ul li a": Object {
                              "color": "black",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "textDecoration": "none",
                            },
                          },
                          "personalDocument": Object {
                            "& .content-area": Object {
                              "height": "85vh",
                              "overflowX": "hidden",
                              "overflowY": "auto",
                            },
                            "& .document .left-side": Object {
                              "alignItems": "center",
                              "display": "flex",
                            },
                            "& .document .left-side .info .more-info": Object {
                              "alignItems": "center",
                              "display": "flex",
                            },
                            "& .document .left-side .info .more-info p": Object {
                              "marginRight": "10px",
                            },
                            "& .document .left-side .info .more-info span": Object {
                              "color": "orange",
                              "marginRight": "5px",
                            },
                            "& .document .left-side h4": Object {
                              "display": "block",
                              "textTransform": "capitalize",
                              "wordBreak": "break-all",
                            },
                            "& .document .left-side img": Object {
                              "marginRight": "10px",
                              "width": "45px",
                            },
                            "& .document-box .item": Object {
                              "alignItems": "center",
                              "background": "white",
                              "borderRadius": 10,
                              "display": "flex",
                              "flexDirection": "row",
                              "justifyContent": "space-between",
                              "minHeight": "34px",
                              "padding": 15,
                            },
                            "& .document-box .item .heading": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "row",
                            },
                            "& .document-box .item .heading h4": Object {
                              "fontSize": "16px",
                              "fontWeight": "600",
                              "marginLeft": "10px",
                              "textTransform": "capitalize",
                              "wordBreak": "break-all",
                            },
                            "& .document-box .item button.color-btn": Object {
                              "background": "#FEF9F3",
                              "borderRadius": "25px",
                              "color": "#FD9048",
                              "fontWeight": "600",
                              "minWidth": "60px",
                              "padding": "5px 11px",
                            },
                            "& .document-view": Object {
                              "background": "white",
                              "padding": "15px",
                            },
                            "& .document-view iframe": Object {
                              "border": "0",
                              "height": "95%",
                              "width": "100%",
                            },
                            "& .list": Object {
                              "position": "relative",
                              "width": "100%",
                            },
                            "& .list .personal-documents": Object {
                              "minHeight": "calc(100% - 70px)",
                            },
                            "& .list .personal-documents .content-box h3": Object {
                              "fontWeight": "600",
                              "marginBottom": "15px",
                            },
                            "& .list .personal-documents .empty-list": Object {
                              "background": "white",
                              "height": "calc(100% - 70px)",
                            },
                            "& .list .personal-documents .empty-list .content-box": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "flexDirection": "column",
                              "height": "100%",
                              "justifyContent": "center",
                              "padding": "20px",
                              "textAlign": "center",
                            },
                            "& .list .personal-documents .empty-list .content-box img": Object {
                              "marginBottom": "20px",
                            },
                            "& .list > .MuiGrid-root": Object {
                              "alignContent": "flex-start",
                            },
                            "& .menu": Object {
                              "alignItems": "center",
                              "background": "#FFFFFF",
                              "cursor": "pointer",
                              "display": "flex",
                              "fontWeight": "600",
                              "marginBottom": "18px",
                              "padding": "10px 20px",
                            },
                            "& .menu.personal-document-menu": Object {
                              "justifyContent": "space-between",
                              "textTransform": "capitalize",
                            },
                            "& .menu.personal-document-menu .name": Object {
                              "alignItems": "center",
                              "display": "flex",
                              "maxWidth": "95%",
                            },
                            "& .menu.personal-document-menu span": Object {
                              "overflow": "hidden",
                              "textOverflow": "ellipsis",
                              "whiteSpace": "nowrap",
                            },
                            "& .right-image": Object {
                              "padding": "25px 60px",
                            },
                            "& .szh-menu-container ul li a": Object {
                              "color": "black",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "textDecoration": "none",
                            },
                            "& .upload-button": Object {
                              "alignItems": "center",
                              "bottom": 0,
                              "display": "flex",
                              "justifyContent": "center",
                              "left": 0,
                              "padding": "10px 0",
                              "position": "sticky",
                              "right": 0,
                            },
                            "& .upload-button .MuiGrid-container": Object {
                              "width": "fit-content",
                            },
                            "& .upload-button button": Object {
                              "background": "#2b6fec",
                              "borderRadius": "25px",
                              "color": "white",
                              "padding": "12px 50px",
                            },
                            "& a": Object {
                              "textDecoration": "none !important",
                            },
                          },
                        }
                      }
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                      id="DocumentListChairman"
                      location={
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      match={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        }
                      }
                      navigation={
                        Object {
                          "dispatch": [Function],
                          "getParam": [Function],
                          "navigate": [Function],
                          "setParams": [Function],
                        }
                      }
                      t={[Function]}
                    >
                      <Styled(MuiBox)
                        className="AccordinoList"
                      >
                        <div
                          className="MuiBox-root MuiBox-root-7 AccordinoList"
                        >
                          <WithStyles(ForwardRef(Accordion))
                            expanded={false}
                            onChange={[Function]}
                          >
                            <ForwardRef(Accordion)
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "expanded": "Mui-expanded",
                                  "root": "MuiAccordion-root",
                                  "rounded": "MuiAccordion-rounded",
                                }
                              }
                              expanded={false}
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(Paper))
                                className="MuiAccordion-root MuiAccordion-rounded"
                                square={false}
                              >
                                <ForwardRef(Paper)
                                  className="MuiAccordion-root MuiAccordion-rounded"
                                  classes={
                                    Object {
                                      "elevation0": "MuiPaper-elevation0",
                                      "elevation1": "MuiPaper-elevation1",
                                      "elevation10": "MuiPaper-elevation10",
                                      "elevation11": "MuiPaper-elevation11",
                                      "elevation12": "MuiPaper-elevation12",
                                      "elevation13": "MuiPaper-elevation13",
                                      "elevation14": "MuiPaper-elevation14",
                                      "elevation15": "MuiPaper-elevation15",
                                      "elevation16": "MuiPaper-elevation16",
                                      "elevation17": "MuiPaper-elevation17",
                                      "elevation18": "MuiPaper-elevation18",
                                      "elevation19": "MuiPaper-elevation19",
                                      "elevation2": "MuiPaper-elevation2",
                                      "elevation20": "MuiPaper-elevation20",
                                      "elevation21": "MuiPaper-elevation21",
                                      "elevation22": "MuiPaper-elevation22",
                                      "elevation23": "MuiPaper-elevation23",
                                      "elevation24": "MuiPaper-elevation24",
                                      "elevation3": "MuiPaper-elevation3",
                                      "elevation4": "MuiPaper-elevation4",
                                      "elevation5": "MuiPaper-elevation5",
                                      "elevation6": "MuiPaper-elevation6",
                                      "elevation7": "MuiPaper-elevation7",
                                      "elevation8": "MuiPaper-elevation8",
                                      "elevation9": "MuiPaper-elevation9",
                                      "outlined": "MuiPaper-outlined",
                                      "root": "MuiPaper-root",
                                      "rounded": "MuiPaper-rounded",
                                    }
                                  }
                                  square={false}
                                >
                                  <div
                                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                  >
                                    <WithStyles(ForwardRef(AccordionSummary))
                                      aria-controls="panel2bh-content"
                                      expandIcon={
                                        <Memo
                                          style={
                                            Object {
                                              "height": 16,
                                              "width": 16,
                                            }
                                          }
                                        />
                                      }
                                      id="Dashboards"
                                      key=".0"
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "marginTop": "20px",
                                        }
                                      }
                                    >
                                      <ForwardRef(AccordionSummary)
                                        aria-controls="panel2bh-content"
                                        classes={
                                          Object {
                                            "content": "MuiAccordionSummary-content",
                                            "disabled": "Mui-disabled",
                                            "expandIcon": "MuiAccordionSummary-expandIcon",
                                            "expanded": "Mui-expanded",
                                            "focusVisible": "Mui-focusVisible",
                                            "focused": "Mui-focused",
                                            "root": "MuiAccordionSummary-root",
                                          }
                                        }
                                        expandIcon={
                                          <Memo
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          />
                                        }
                                        id="Dashboards"
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "marginTop": "20px",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          aria-controls="panel2bh-content"
                                          aria-expanded={false}
                                          className="MuiAccordionSummary-root"
                                          component="div"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={false}
                                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                                          id="Dashboards"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "marginTop": "20px",
                                            }
                                          }
                                        >
                                          <ForwardRef(ButtonBase)
                                            aria-controls="panel2bh-content"
                                            aria-expanded={false}
                                            className="MuiAccordionSummary-root"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="div"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={false}
                                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                                            id="Dashboards"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "marginTop": "20px",
                                              }
                                            }
                                          >
                                            <div
                                              aria-controls="panel2bh-content"
                                              aria-disabled={false}
                                              aria-expanded={false}
                                              className="MuiButtonBase-root MuiAccordionSummary-root"
                                              id="Dashboards"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              style={
                                                Object {
                                                  "alignItems": "center",
                                                  "marginTop": "20px",
                                                }
                                              }
                                              tabIndex={0}
                                            >
                                              <div
                                                className="MuiAccordionSummary-content"
                                              >
                                                <WithStyles(ForwardRef(Typography))>
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTypography-body1"
                                                    >
                                                      <ForwardRef(DashboardOutlinedIcon)>
                                                        <WithStyles(ForwardRef(SvgIcon))>
                                                          <ForwardRef(SvgIcon)
                                                            classes={
                                                              Object {
                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                "colorError": "MuiSvgIcon-colorError",
                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                "root": "MuiSvgIcon-root",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="MuiSvgIcon-root"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                                              />
                                                            </svg>
                                                          </ForwardRef(SvgIcon)>
                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                      </ForwardRef(DashboardOutlinedIcon)>
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="ListItemText"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="ListItemText"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                                    />
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                              <WithStyles(ForwardRef(IconButton))
                                                aria-hidden={true}
                                                className="MuiAccordionSummary-expandIcon"
                                                component="div"
                                                edge="end"
                                                role={null}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  aria-hidden={true}
                                                  className="MuiAccordionSummary-expandIcon"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  component="div"
                                                  edge="end"
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    aria-hidden={true}
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                    component="div"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      aria-hidden={true}
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="div"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <div
                                                        aria-disabled={false}
                                                        aria-hidden={true}
                                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                            style={
                                                              Object {
                                                                "height": 16,
                                                                "width": 16,
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              style={
                                                                Object {
                                                                  "height": 16,
                                                                  "width": 16,
                                                                }
                                                              }
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </div>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </div>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(AccordionSummary)>
                                    </WithStyles(ForwardRef(AccordionSummary))>
                                    <WithStyles(ForwardRef(Collapse))
                                      in={false}
                                      timeout="auto"
                                    >
                                      <ForwardRef(Collapse)
                                        classes={
                                          Object {
                                            "entered": "MuiCollapse-entered",
                                            "hidden": "MuiCollapse-hidden",
                                            "root": "MuiCollapse-root",
                                            "wrapper": "MuiCollapse-wrapper",
                                            "wrapperInner": "MuiCollapse-wrapperInner",
                                          }
                                        }
                                        in={false}
                                        timeout="auto"
                                      >
                                        <Transition
                                          addEndListener={[Function]}
                                          appear={false}
                                          enter={true}
                                          exit={true}
                                          in={false}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={null}
                                          unmountOnExit={false}
                                        >
                                          <div
                                            className="MuiCollapse-root MuiCollapse-hidden"
                                            style={
                                              Object {
                                                "minHeight": "0px",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCollapse-wrapper"
                                            >
                                              <div
                                                className="MuiCollapse-wrapperInner"
                                              >
                                                <div
                                                  aria-labelledby="Dashboards"
                                                  id="panel2bh-content"
                                                  role="region"
                                                >
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".1"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            >
                                                              General Dashboard
                                                            </p>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".2"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".3"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".4"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".5"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            >
                                                              Budget Dashboard
                                                            </p>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".6"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            >
                                                              Action Assigned to me
                                                            </p>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </Transition>
                                      </ForwardRef(Collapse)>
                                    </WithStyles(ForwardRef(Collapse))>
                                  </div>
                                </ForwardRef(Paper)>
                              </WithStyles(ForwardRef(Paper))>
                            </ForwardRef(Accordion)>
                          </WithStyles(ForwardRef(Accordion))>
                          <WithStyles(ForwardRef(Accordion))
                            expanded={false}
                            onChange={[Function]}
                          >
                            <ForwardRef(Accordion)
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "expanded": "Mui-expanded",
                                  "root": "MuiAccordion-root",
                                  "rounded": "MuiAccordion-rounded",
                                }
                              }
                              expanded={false}
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(Paper))
                                className="MuiAccordion-root MuiAccordion-rounded"
                                square={false}
                              >
                                <ForwardRef(Paper)
                                  className="MuiAccordion-root MuiAccordion-rounded"
                                  classes={
                                    Object {
                                      "elevation0": "MuiPaper-elevation0",
                                      "elevation1": "MuiPaper-elevation1",
                                      "elevation10": "MuiPaper-elevation10",
                                      "elevation11": "MuiPaper-elevation11",
                                      "elevation12": "MuiPaper-elevation12",
                                      "elevation13": "MuiPaper-elevation13",
                                      "elevation14": "MuiPaper-elevation14",
                                      "elevation15": "MuiPaper-elevation15",
                                      "elevation16": "MuiPaper-elevation16",
                                      "elevation17": "MuiPaper-elevation17",
                                      "elevation18": "MuiPaper-elevation18",
                                      "elevation19": "MuiPaper-elevation19",
                                      "elevation2": "MuiPaper-elevation2",
                                      "elevation20": "MuiPaper-elevation20",
                                      "elevation21": "MuiPaper-elevation21",
                                      "elevation22": "MuiPaper-elevation22",
                                      "elevation23": "MuiPaper-elevation23",
                                      "elevation24": "MuiPaper-elevation24",
                                      "elevation3": "MuiPaper-elevation3",
                                      "elevation4": "MuiPaper-elevation4",
                                      "elevation5": "MuiPaper-elevation5",
                                      "elevation6": "MuiPaper-elevation6",
                                      "elevation7": "MuiPaper-elevation7",
                                      "elevation8": "MuiPaper-elevation8",
                                      "elevation9": "MuiPaper-elevation9",
                                      "outlined": "MuiPaper-outlined",
                                      "root": "MuiPaper-root",
                                      "rounded": "MuiPaper-rounded",
                                    }
                                  }
                                  square={false}
                                >
                                  <div
                                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                  >
                                    <WithStyles(ForwardRef(AccordionSummary))
                                      className="ListItem"
                                      expandIcon={
                                        <Memo
                                          style={
                                            Object {
                                              "height": 16,
                                              "width": 16,
                                            }
                                          }
                                        />
                                      }
                                      id="ListItem"
                                      key=".0"
                                    >
                                      <ForwardRef(AccordionSummary)
                                        className="ListItem"
                                        classes={
                                          Object {
                                            "content": "MuiAccordionSummary-content",
                                            "disabled": "Mui-disabled",
                                            "expandIcon": "MuiAccordionSummary-expandIcon",
                                            "expanded": "Mui-expanded",
                                            "focusVisible": "Mui-focusVisible",
                                            "focused": "Mui-focused",
                                            "root": "MuiAccordionSummary-root",
                                          }
                                        }
                                        expandIcon={
                                          <Memo
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          />
                                        }
                                        id="ListItem"
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          aria-expanded={false}
                                          className="MuiAccordionSummary-root ListItem"
                                          component="div"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={false}
                                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                                          id="ListItem"
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(ButtonBase)
                                            aria-expanded={false}
                                            className="MuiAccordionSummary-root ListItem"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="div"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={false}
                                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                                            id="ListItem"
                                            onClick={[Function]}
                                          >
                                            <div
                                              aria-disabled={false}
                                              aria-expanded={false}
                                              className="MuiButtonBase-root MuiAccordionSummary-root ListItem"
                                              id="ListItem"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              tabIndex={0}
                                            >
                                              <div
                                                className="MuiAccordionSummary-content"
                                              >
                                                <WithStyles(ForwardRef(Typography))>
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTypography-body1"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/dashboard/assets/myteam.png",
                                                          }
                                                        }
                                                      />
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="ListItemText"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="ListItemText"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                                    />
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                              <WithStyles(ForwardRef(IconButton))
                                                aria-hidden={true}
                                                className="MuiAccordionSummary-expandIcon"
                                                component="div"
                                                edge="end"
                                                role={null}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  aria-hidden={true}
                                                  className="MuiAccordionSummary-expandIcon"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  component="div"
                                                  edge="end"
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    aria-hidden={true}
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                    component="div"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      aria-hidden={true}
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="div"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <div
                                                        aria-disabled={false}
                                                        aria-hidden={true}
                                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                            style={
                                                              Object {
                                                                "height": 16,
                                                                "width": 16,
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              style={
                                                                Object {
                                                                  "height": 16,
                                                                  "width": 16,
                                                                }
                                                              }
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </div>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </div>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(AccordionSummary)>
                                    </WithStyles(ForwardRef(AccordionSummary))>
                                    <WithStyles(ForwardRef(Collapse))
                                      in={false}
                                      timeout="auto"
                                    >
                                      <ForwardRef(Collapse)
                                        classes={
                                          Object {
                                            "entered": "MuiCollapse-entered",
                                            "hidden": "MuiCollapse-hidden",
                                            "root": "MuiCollapse-root",
                                            "wrapper": "MuiCollapse-wrapper",
                                            "wrapperInner": "MuiCollapse-wrapperInner",
                                          }
                                        }
                                        in={false}
                                        timeout="auto"
                                      >
                                        <Transition
                                          addEndListener={[Function]}
                                          appear={false}
                                          enter={true}
                                          exit={true}
                                          in={false}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={null}
                                          unmountOnExit={false}
                                        >
                                          <div
                                            className="MuiCollapse-root MuiCollapse-hidden"
                                            style={
                                              Object {
                                                "minHeight": "0px",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCollapse-wrapper"
                                            >
                                              <div
                                                className="MuiCollapse-wrapperInner"
                                              >
                                                <div
                                                  aria-labelledby="ListItem"
                                                  role="region"
                                                >
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".1"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".2"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".3"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </Transition>
                                      </ForwardRef(Collapse)>
                                    </WithStyles(ForwardRef(Collapse))>
                                  </div>
                                </ForwardRef(Paper)>
                              </WithStyles(ForwardRef(Paper))>
                            </ForwardRef(Accordion)>
                          </WithStyles(ForwardRef(Accordion))>
                          <WithStyles(ForwardRef(Accordion))
                            expanded={false}
                            onChange={[Function]}
                          >
                            <ForwardRef(Accordion)
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "expanded": "Mui-expanded",
                                  "root": "MuiAccordion-root",
                                  "rounded": "MuiAccordion-rounded",
                                }
                              }
                              expanded={false}
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(Paper))
                                className="MuiAccordion-root MuiAccordion-rounded"
                                square={false}
                              >
                                <ForwardRef(Paper)
                                  className="MuiAccordion-root MuiAccordion-rounded"
                                  classes={
                                    Object {
                                      "elevation0": "MuiPaper-elevation0",
                                      "elevation1": "MuiPaper-elevation1",
                                      "elevation10": "MuiPaper-elevation10",
                                      "elevation11": "MuiPaper-elevation11",
                                      "elevation12": "MuiPaper-elevation12",
                                      "elevation13": "MuiPaper-elevation13",
                                      "elevation14": "MuiPaper-elevation14",
                                      "elevation15": "MuiPaper-elevation15",
                                      "elevation16": "MuiPaper-elevation16",
                                      "elevation17": "MuiPaper-elevation17",
                                      "elevation18": "MuiPaper-elevation18",
                                      "elevation19": "MuiPaper-elevation19",
                                      "elevation2": "MuiPaper-elevation2",
                                      "elevation20": "MuiPaper-elevation20",
                                      "elevation21": "MuiPaper-elevation21",
                                      "elevation22": "MuiPaper-elevation22",
                                      "elevation23": "MuiPaper-elevation23",
                                      "elevation24": "MuiPaper-elevation24",
                                      "elevation3": "MuiPaper-elevation3",
                                      "elevation4": "MuiPaper-elevation4",
                                      "elevation5": "MuiPaper-elevation5",
                                      "elevation6": "MuiPaper-elevation6",
                                      "elevation7": "MuiPaper-elevation7",
                                      "elevation8": "MuiPaper-elevation8",
                                      "elevation9": "MuiPaper-elevation9",
                                      "outlined": "MuiPaper-outlined",
                                      "root": "MuiPaper-root",
                                      "rounded": "MuiPaper-rounded",
                                    }
                                  }
                                  square={false}
                                >
                                  <div
                                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                  >
                                    <WithStyles(ForwardRef(AccordionSummary))
                                      aria-controls="panel2bh-content"
                                      expandIcon={
                                        <Memo
                                          style={
                                            Object {
                                              "height": 16,
                                              "width": 16,
                                            }
                                          }
                                        />
                                      }
                                      id="Dashboards"
                                      key=".0"
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "marginTop": "20px",
                                        }
                                      }
                                    >
                                      <ForwardRef(AccordionSummary)
                                        aria-controls="panel2bh-content"
                                        classes={
                                          Object {
                                            "content": "MuiAccordionSummary-content",
                                            "disabled": "Mui-disabled",
                                            "expandIcon": "MuiAccordionSummary-expandIcon",
                                            "expanded": "Mui-expanded",
                                            "focusVisible": "Mui-focusVisible",
                                            "focused": "Mui-focused",
                                            "root": "MuiAccordionSummary-root",
                                          }
                                        }
                                        expandIcon={
                                          <Memo
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          />
                                        }
                                        id="Dashboards"
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "marginTop": "20px",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          aria-controls="panel2bh-content"
                                          aria-expanded={false}
                                          className="MuiAccordionSummary-root"
                                          component="div"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={false}
                                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                                          id="Dashboards"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "marginTop": "20px",
                                            }
                                          }
                                        >
                                          <ForwardRef(ButtonBase)
                                            aria-controls="panel2bh-content"
                                            aria-expanded={false}
                                            className="MuiAccordionSummary-root"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="div"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={false}
                                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                                            id="Dashboards"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "marginTop": "20px",
                                              }
                                            }
                                          >
                                            <div
                                              aria-controls="panel2bh-content"
                                              aria-disabled={false}
                                              aria-expanded={false}
                                              className="MuiButtonBase-root MuiAccordionSummary-root"
                                              id="Dashboards"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              style={
                                                Object {
                                                  "alignItems": "center",
                                                  "marginTop": "20px",
                                                }
                                              }
                                              tabIndex={0}
                                            >
                                              <div
                                                className="MuiAccordionSummary-content"
                                              >
                                                <WithStyles(ForwardRef(Typography))>
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTypography-body1"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/dashboard/assets/community.png",
                                                          }
                                                        }
                                                      />
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="ListItemText"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="ListItemText"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                                    />
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                              <WithStyles(ForwardRef(IconButton))
                                                aria-hidden={true}
                                                className="MuiAccordionSummary-expandIcon"
                                                component="div"
                                                edge="end"
                                                role={null}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  aria-hidden={true}
                                                  className="MuiAccordionSummary-expandIcon"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  component="div"
                                                  edge="end"
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    aria-hidden={true}
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                    component="div"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      aria-hidden={true}
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="div"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <div
                                                        aria-disabled={false}
                                                        aria-hidden={true}
                                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                            style={
                                                              Object {
                                                                "height": 16,
                                                                "width": 16,
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              style={
                                                                Object {
                                                                  "height": 16,
                                                                  "width": 16,
                                                                }
                                                              }
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </div>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </div>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(AccordionSummary)>
                                    </WithStyles(ForwardRef(AccordionSummary))>
                                    <WithStyles(ForwardRef(Collapse))
                                      in={false}
                                      timeout="auto"
                                    >
                                      <ForwardRef(Collapse)
                                        classes={
                                          Object {
                                            "entered": "MuiCollapse-entered",
                                            "hidden": "MuiCollapse-hidden",
                                            "root": "MuiCollapse-root",
                                            "wrapper": "MuiCollapse-wrapper",
                                            "wrapperInner": "MuiCollapse-wrapperInner",
                                          }
                                        }
                                        in={false}
                                        timeout="auto"
                                      >
                                        <Transition
                                          addEndListener={[Function]}
                                          appear={false}
                                          enter={true}
                                          exit={true}
                                          in={false}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={null}
                                          unmountOnExit={false}
                                        >
                                          <div
                                            className="MuiCollapse-root MuiCollapse-hidden"
                                            style={
                                              Object {
                                                "minHeight": "0px",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCollapse-wrapper"
                                            >
                                              <div
                                                className="MuiCollapse-wrapperInner"
                                              >
                                                <div
                                                  aria-labelledby="Dashboards"
                                                  id="panel2bh-content"
                                                  role="region"
                                                >
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".1"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".2"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".3"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".4"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </Transition>
                                      </ForwardRef(Collapse)>
                                    </WithStyles(ForwardRef(Collapse))>
                                  </div>
                                </ForwardRef(Paper)>
                              </WithStyles(ForwardRef(Paper))>
                            </ForwardRef(Accordion)>
                          </WithStyles(ForwardRef(Accordion))>
                          <WithStyles(ForwardRef(Accordion))
                            expanded={false}
                            onChange={[Function]}
                          >
                            <ForwardRef(Accordion)
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "expanded": "Mui-expanded",
                                  "root": "MuiAccordion-root",
                                  "rounded": "MuiAccordion-rounded",
                                }
                              }
                              expanded={false}
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(Paper))
                                className="MuiAccordion-root MuiAccordion-rounded"
                                square={false}
                              >
                                <ForwardRef(Paper)
                                  className="MuiAccordion-root MuiAccordion-rounded"
                                  classes={
                                    Object {
                                      "elevation0": "MuiPaper-elevation0",
                                      "elevation1": "MuiPaper-elevation1",
                                      "elevation10": "MuiPaper-elevation10",
                                      "elevation11": "MuiPaper-elevation11",
                                      "elevation12": "MuiPaper-elevation12",
                                      "elevation13": "MuiPaper-elevation13",
                                      "elevation14": "MuiPaper-elevation14",
                                      "elevation15": "MuiPaper-elevation15",
                                      "elevation16": "MuiPaper-elevation16",
                                      "elevation17": "MuiPaper-elevation17",
                                      "elevation18": "MuiPaper-elevation18",
                                      "elevation19": "MuiPaper-elevation19",
                                      "elevation2": "MuiPaper-elevation2",
                                      "elevation20": "MuiPaper-elevation20",
                                      "elevation21": "MuiPaper-elevation21",
                                      "elevation22": "MuiPaper-elevation22",
                                      "elevation23": "MuiPaper-elevation23",
                                      "elevation24": "MuiPaper-elevation24",
                                      "elevation3": "MuiPaper-elevation3",
                                      "elevation4": "MuiPaper-elevation4",
                                      "elevation5": "MuiPaper-elevation5",
                                      "elevation6": "MuiPaper-elevation6",
                                      "elevation7": "MuiPaper-elevation7",
                                      "elevation8": "MuiPaper-elevation8",
                                      "elevation9": "MuiPaper-elevation9",
                                      "outlined": "MuiPaper-outlined",
                                      "root": "MuiPaper-root",
                                      "rounded": "MuiPaper-rounded",
                                    }
                                  }
                                  square={false}
                                >
                                  <div
                                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                  >
                                    <WithStyles(ForwardRef(AccordionSummary))
                                      aria-controls="panel2bh-content"
                                      expandIcon={
                                        <Memo
                                          style={
                                            Object {
                                              "height": 16,
                                              "width": 16,
                                            }
                                          }
                                        />
                                      }
                                      id="panel2bh-header"
                                      key=".0"
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "marginTop": "20px",
                                        }
                                      }
                                    >
                                      <ForwardRef(AccordionSummary)
                                        aria-controls="panel2bh-content"
                                        classes={
                                          Object {
                                            "content": "MuiAccordionSummary-content",
                                            "disabled": "Mui-disabled",
                                            "expandIcon": "MuiAccordionSummary-expandIcon",
                                            "expanded": "Mui-expanded",
                                            "focusVisible": "Mui-focusVisible",
                                            "focused": "Mui-focused",
                                            "root": "MuiAccordionSummary-root",
                                          }
                                        }
                                        expandIcon={
                                          <Memo
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          />
                                        }
                                        id="panel2bh-header"
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "marginTop": "20px",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          aria-controls="panel2bh-content"
                                          aria-expanded={false}
                                          className="MuiAccordionSummary-root"
                                          component="div"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={false}
                                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                                          id="panel2bh-header"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "marginTop": "20px",
                                            }
                                          }
                                        >
                                          <ForwardRef(ButtonBase)
                                            aria-controls="panel2bh-content"
                                            aria-expanded={false}
                                            className="MuiAccordionSummary-root"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="div"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={false}
                                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                                            id="panel2bh-header"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "marginTop": "20px",
                                              }
                                            }
                                          >
                                            <div
                                              aria-controls="panel2bh-content"
                                              aria-disabled={false}
                                              aria-expanded={false}
                                              className="MuiButtonBase-root MuiAccordionSummary-root"
                                              id="panel2bh-header"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              style={
                                                Object {
                                                  "alignItems": "center",
                                                  "marginTop": "20px",
                                                }
                                              }
                                              tabIndex={0}
                                            >
                                              <div
                                                className="MuiAccordionSummary-content"
                                              >
                                                <WithStyles(ForwardRef(Typography))>
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTypography-body1"
                                                    >
                                                      <ForwardRef(DashboardOutlinedIcon)>
                                                        <WithStyles(ForwardRef(SvgIcon))>
                                                          <ForwardRef(SvgIcon)
                                                            classes={
                                                              Object {
                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                "colorError": "MuiSvgIcon-colorError",
                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                "root": "MuiSvgIcon-root",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="MuiSvgIcon-root"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                                              />
                                                            </svg>
                                                          </ForwardRef(SvgIcon)>
                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                      </ForwardRef(DashboardOutlinedIcon)>
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="ListItemText"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="ListItemText"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                                    />
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                              <WithStyles(ForwardRef(IconButton))
                                                aria-hidden={true}
                                                className="MuiAccordionSummary-expandIcon"
                                                component="div"
                                                edge="end"
                                                role={null}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  aria-hidden={true}
                                                  className="MuiAccordionSummary-expandIcon"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  component="div"
                                                  edge="end"
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    aria-hidden={true}
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                    component="div"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      aria-hidden={true}
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="div"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <div
                                                        aria-disabled={false}
                                                        aria-hidden={true}
                                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                            style={
                                                              Object {
                                                                "height": 16,
                                                                "width": 16,
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              style={
                                                                Object {
                                                                  "height": 16,
                                                                  "width": 16,
                                                                }
                                                              }
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </div>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </div>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(AccordionSummary)>
                                    </WithStyles(ForwardRef(AccordionSummary))>
                                    <WithStyles(ForwardRef(Collapse))
                                      in={false}
                                      timeout="auto"
                                    >
                                      <ForwardRef(Collapse)
                                        classes={
                                          Object {
                                            "entered": "MuiCollapse-entered",
                                            "hidden": "MuiCollapse-hidden",
                                            "root": "MuiCollapse-root",
                                            "wrapper": "MuiCollapse-wrapper",
                                            "wrapperInner": "MuiCollapse-wrapperInner",
                                          }
                                        }
                                        in={false}
                                        timeout="auto"
                                      >
                                        <Transition
                                          addEndListener={[Function]}
                                          appear={false}
                                          enter={true}
                                          exit={true}
                                          in={false}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={null}
                                          unmountOnExit={false}
                                        >
                                          <div
                                            className="MuiCollapse-root MuiCollapse-hidden"
                                            style={
                                              Object {
                                                "minHeight": "0px",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCollapse-wrapper"
                                            >
                                              <div
                                                className="MuiCollapse-wrapperInner"
                                              >
                                                <div
                                                  aria-labelledby="panel2bh-header"
                                                  id="panel2bh-content"
                                                  role="region"
                                                >
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".1"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root MuiTypography-body2"
                                                            >
                                                              Invoices
                                                            </p>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".2"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root MuiTypography-body2"
                                                            >
                                                              Receipts
                                                            </p>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".3"
                                                    onClick={[Function]}
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root MuiTypography-body2"
                                                            >
                                                              Payment History
                                                            </p>
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </Transition>
                                      </ForwardRef(Collapse)>
                                    </WithStyles(ForwardRef(Collapse))>
                                  </div>
                                </ForwardRef(Paper)>
                              </WithStyles(ForwardRef(Paper))>
                            </ForwardRef(Accordion)>
                          </WithStyles(ForwardRef(Accordion))>
                          <Styled(MuiBox)
                            className="SingleLink"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-8 SingleLink"
                            >
                              <WithStyles(ForwardRef(Typography))
                                className="SingleLinkSize"
                              >
                                <ForwardRef(Typography)
                                  className="SingleLinkSize"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                >
                                  <p
                                    className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                  >
                                    <ForwardRef(DashboardOutlinedIcon)>
                                      <WithStyles(ForwardRef(SvgIcon))>
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef(DashboardOutlinedIcon)>
                                  </p>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <div
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(Typography))
                                  className="SingleLinkSize"
                                >
                                  <ForwardRef(Typography)
                                    className="SingleLinkSize"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                    />
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                            </div>
                          </Styled(MuiBox)>
                          <WithStyles(ForwardRef(Accordion))
                            expanded={false}
                            onChange={[Function]}
                          >
                            <ForwardRef(Accordion)
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "expanded": "Mui-expanded",
                                  "root": "MuiAccordion-root",
                                  "rounded": "MuiAccordion-rounded",
                                }
                              }
                              expanded={false}
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(Paper))
                                className="MuiAccordion-root MuiAccordion-rounded"
                                square={false}
                              >
                                <ForwardRef(Paper)
                                  className="MuiAccordion-root MuiAccordion-rounded"
                                  classes={
                                    Object {
                                      "elevation0": "MuiPaper-elevation0",
                                      "elevation1": "MuiPaper-elevation1",
                                      "elevation10": "MuiPaper-elevation10",
                                      "elevation11": "MuiPaper-elevation11",
                                      "elevation12": "MuiPaper-elevation12",
                                      "elevation13": "MuiPaper-elevation13",
                                      "elevation14": "MuiPaper-elevation14",
                                      "elevation15": "MuiPaper-elevation15",
                                      "elevation16": "MuiPaper-elevation16",
                                      "elevation17": "MuiPaper-elevation17",
                                      "elevation18": "MuiPaper-elevation18",
                                      "elevation19": "MuiPaper-elevation19",
                                      "elevation2": "MuiPaper-elevation2",
                                      "elevation20": "MuiPaper-elevation20",
                                      "elevation21": "MuiPaper-elevation21",
                                      "elevation22": "MuiPaper-elevation22",
                                      "elevation23": "MuiPaper-elevation23",
                                      "elevation24": "MuiPaper-elevation24",
                                      "elevation3": "MuiPaper-elevation3",
                                      "elevation4": "MuiPaper-elevation4",
                                      "elevation5": "MuiPaper-elevation5",
                                      "elevation6": "MuiPaper-elevation6",
                                      "elevation7": "MuiPaper-elevation7",
                                      "elevation8": "MuiPaper-elevation8",
                                      "elevation9": "MuiPaper-elevation9",
                                      "outlined": "MuiPaper-outlined",
                                      "root": "MuiPaper-root",
                                      "rounded": "MuiPaper-rounded",
                                    }
                                  }
                                  square={false}
                                >
                                  <div
                                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                  >
                                    <WithStyles(ForwardRef(AccordionSummary))
                                      expandIcon={
                                        <Memo
                                          style={
                                            Object {
                                              "height": 16,
                                              "width": 16,
                                            }
                                          }
                                        />
                                      }
                                      key=".0"
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "marginTop": "20px",
                                        }
                                      }
                                    >
                                      <ForwardRef(AccordionSummary)
                                        classes={
                                          Object {
                                            "content": "MuiAccordionSummary-content",
                                            "disabled": "Mui-disabled",
                                            "expandIcon": "MuiAccordionSummary-expandIcon",
                                            "expanded": "Mui-expanded",
                                            "focusVisible": "Mui-focusVisible",
                                            "focused": "Mui-focused",
                                            "root": "MuiAccordionSummary-root",
                                          }
                                        }
                                        expandIcon={
                                          <Memo
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          />
                                        }
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "marginTop": "20px",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          aria-expanded={false}
                                          className="MuiAccordionSummary-root"
                                          component="div"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={false}
                                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "marginTop": "20px",
                                            }
                                          }
                                        >
                                          <ForwardRef(ButtonBase)
                                            aria-expanded={false}
                                            className="MuiAccordionSummary-root"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="div"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={false}
                                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "marginTop": "20px",
                                              }
                                            }
                                          >
                                            <div
                                              aria-disabled={false}
                                              aria-expanded={false}
                                              className="MuiButtonBase-root MuiAccordionSummary-root"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              style={
                                                Object {
                                                  "alignItems": "center",
                                                  "marginTop": "20px",
                                                }
                                              }
                                              tabIndex={0}
                                            >
                                              <div
                                                className="MuiAccordionSummary-content"
                                              >
                                                <WithStyles(ForwardRef(Typography))>
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTypography-body1"
                                                    >
                                                      <img
                                                        alt=""
                                                        src={
                                                          Object {
                                                            "testUri": "../../../packages/blocks/dashboard/assets/meetings.png",
                                                          }
                                                        }
                                                      />
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="ListItemText"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="ListItemText"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                                    />
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                              <WithStyles(ForwardRef(IconButton))
                                                aria-hidden={true}
                                                className="MuiAccordionSummary-expandIcon"
                                                component="div"
                                                edge="end"
                                                role={null}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  aria-hidden={true}
                                                  className="MuiAccordionSummary-expandIcon"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  component="div"
                                                  edge="end"
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    aria-hidden={true}
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                    component="div"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      aria-hidden={true}
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="div"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <div
                                                        aria-disabled={false}
                                                        aria-hidden={true}
                                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                            style={
                                                              Object {
                                                                "height": 16,
                                                                "width": 16,
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              style={
                                                                Object {
                                                                  "height": 16,
                                                                  "width": 16,
                                                                }
                                                              }
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </div>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </div>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(AccordionSummary)>
                                    </WithStyles(ForwardRef(AccordionSummary))>
                                    <WithStyles(ForwardRef(Collapse))
                                      in={false}
                                      timeout="auto"
                                    >
                                      <ForwardRef(Collapse)
                                        classes={
                                          Object {
                                            "entered": "MuiCollapse-entered",
                                            "hidden": "MuiCollapse-hidden",
                                            "root": "MuiCollapse-root",
                                            "wrapper": "MuiCollapse-wrapper",
                                            "wrapperInner": "MuiCollapse-wrapperInner",
                                          }
                                        }
                                        in={false}
                                        timeout="auto"
                                      >
                                        <Transition
                                          addEndListener={[Function]}
                                          appear={false}
                                          enter={true}
                                          exit={true}
                                          in={false}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={null}
                                          unmountOnExit={false}
                                        >
                                          <div
                                            className="MuiCollapse-root MuiCollapse-hidden"
                                            style={
                                              Object {
                                                "minHeight": "0px",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCollapse-wrapper"
                                            >
                                              <div
                                                className="MuiCollapse-wrapperInner"
                                              >
                                                <div
                                                  role="region"
                                                >
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".1"
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "cursor": "pointer",
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "cursor": "pointer",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".2"
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "cursor": "pointer",
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "cursor": "pointer",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </Transition>
                                      </ForwardRef(Collapse)>
                                    </WithStyles(ForwardRef(Collapse))>
                                  </div>
                                </ForwardRef(Paper)>
                              </WithStyles(ForwardRef(Paper))>
                            </ForwardRef(Accordion)>
                          </WithStyles(ForwardRef(Accordion))>
                          <Styled(MuiBox)
                            className="SingleLink"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-9 SingleLink"
                            >
                              <WithStyles(ForwardRef(Typography))
                                className="SingleLinkSize"
                              >
                                <ForwardRef(Typography)
                                  className="SingleLinkSize"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                >
                                  <p
                                    className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                  >
                                    <ForwardRef(DashboardOutlinedIcon)>
                                      <WithStyles(ForwardRef(SvgIcon))>
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef(DashboardOutlinedIcon)>
                                  </p>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <div
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(Typography))
                                  className="SingleLinkSize"
                                >
                                  <ForwardRef(Typography)
                                    className="SingleLinkSize"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                    />
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                            </div>
                          </Styled(MuiBox)>
                          <WithStyles(ForwardRef(Accordion))
                            expanded={false}
                            onChange={[Function]}
                          >
                            <ForwardRef(Accordion)
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "expanded": "Mui-expanded",
                                  "root": "MuiAccordion-root",
                                  "rounded": "MuiAccordion-rounded",
                                }
                              }
                              expanded={false}
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(Paper))
                                className="MuiAccordion-root MuiAccordion-rounded"
                                square={false}
                              >
                                <ForwardRef(Paper)
                                  className="MuiAccordion-root MuiAccordion-rounded"
                                  classes={
                                    Object {
                                      "elevation0": "MuiPaper-elevation0",
                                      "elevation1": "MuiPaper-elevation1",
                                      "elevation10": "MuiPaper-elevation10",
                                      "elevation11": "MuiPaper-elevation11",
                                      "elevation12": "MuiPaper-elevation12",
                                      "elevation13": "MuiPaper-elevation13",
                                      "elevation14": "MuiPaper-elevation14",
                                      "elevation15": "MuiPaper-elevation15",
                                      "elevation16": "MuiPaper-elevation16",
                                      "elevation17": "MuiPaper-elevation17",
                                      "elevation18": "MuiPaper-elevation18",
                                      "elevation19": "MuiPaper-elevation19",
                                      "elevation2": "MuiPaper-elevation2",
                                      "elevation20": "MuiPaper-elevation20",
                                      "elevation21": "MuiPaper-elevation21",
                                      "elevation22": "MuiPaper-elevation22",
                                      "elevation23": "MuiPaper-elevation23",
                                      "elevation24": "MuiPaper-elevation24",
                                      "elevation3": "MuiPaper-elevation3",
                                      "elevation4": "MuiPaper-elevation4",
                                      "elevation5": "MuiPaper-elevation5",
                                      "elevation6": "MuiPaper-elevation6",
                                      "elevation7": "MuiPaper-elevation7",
                                      "elevation8": "MuiPaper-elevation8",
                                      "elevation9": "MuiPaper-elevation9",
                                      "outlined": "MuiPaper-outlined",
                                      "root": "MuiPaper-root",
                                      "rounded": "MuiPaper-rounded",
                                    }
                                  }
                                  square={false}
                                >
                                  <div
                                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                  >
                                    <WithStyles(ForwardRef(AccordionSummary))
                                      expandIcon={
                                        <Memo
                                          style={
                                            Object {
                                              "height": 16,
                                              "width": 16,
                                            }
                                          }
                                        />
                                      }
                                      key=".0"
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "marginTop": "20px",
                                        }
                                      }
                                    >
                                      <ForwardRef(AccordionSummary)
                                        classes={
                                          Object {
                                            "content": "MuiAccordionSummary-content",
                                            "disabled": "Mui-disabled",
                                            "expandIcon": "MuiAccordionSummary-expandIcon",
                                            "expanded": "Mui-expanded",
                                            "focusVisible": "Mui-focusVisible",
                                            "focused": "Mui-focused",
                                            "root": "MuiAccordionSummary-root",
                                          }
                                        }
                                        expandIcon={
                                          <Memo
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          />
                                        }
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "marginTop": "20px",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          aria-expanded={false}
                                          className="MuiAccordionSummary-root"
                                          component="div"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={false}
                                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "marginTop": "20px",
                                            }
                                          }
                                        >
                                          <ForwardRef(ButtonBase)
                                            aria-expanded={false}
                                            className="MuiAccordionSummary-root"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="div"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={false}
                                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "marginTop": "20px",
                                              }
                                            }
                                          >
                                            <div
                                              aria-disabled={false}
                                              aria-expanded={false}
                                              className="MuiButtonBase-root MuiAccordionSummary-root"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              style={
                                                Object {
                                                  "alignItems": "center",
                                                  "marginTop": "20px",
                                                }
                                              }
                                              tabIndex={0}
                                            >
                                              <div
                                                className="MuiAccordionSummary-content"
                                              >
                                                <WithStyles(ForwardRef(Typography))>
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTypography-body1"
                                                    >
                                                      <ForwardRef(DashboardOutlinedIcon)>
                                                        <WithStyles(ForwardRef(SvgIcon))>
                                                          <ForwardRef(SvgIcon)
                                                            classes={
                                                              Object {
                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                "colorError": "MuiSvgIcon-colorError",
                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                "root": "MuiSvgIcon-root",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="MuiSvgIcon-root"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                                              />
                                                            </svg>
                                                          </ForwardRef(SvgIcon)>
                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                      </ForwardRef(DashboardOutlinedIcon)>
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="ListItemText"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="ListItemText"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                                    />
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                              <WithStyles(ForwardRef(IconButton))
                                                aria-hidden={true}
                                                className="MuiAccordionSummary-expandIcon"
                                                component="div"
                                                edge="end"
                                                role={null}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  aria-hidden={true}
                                                  className="MuiAccordionSummary-expandIcon"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  component="div"
                                                  edge="end"
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    aria-hidden={true}
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                    component="div"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      aria-hidden={true}
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="div"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <div
                                                        aria-disabled={false}
                                                        aria-hidden={true}
                                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                            style={
                                                              Object {
                                                                "height": 16,
                                                                "width": 16,
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              style={
                                                                Object {
                                                                  "height": 16,
                                                                  "width": 16,
                                                                }
                                                              }
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </div>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </div>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(AccordionSummary)>
                                    </WithStyles(ForwardRef(AccordionSummary))>
                                    <WithStyles(ForwardRef(Collapse))
                                      in={false}
                                      timeout="auto"
                                    >
                                      <ForwardRef(Collapse)
                                        classes={
                                          Object {
                                            "entered": "MuiCollapse-entered",
                                            "hidden": "MuiCollapse-hidden",
                                            "root": "MuiCollapse-root",
                                            "wrapper": "MuiCollapse-wrapper",
                                            "wrapperInner": "MuiCollapse-wrapperInner",
                                          }
                                        }
                                        in={false}
                                        timeout="auto"
                                      >
                                        <Transition
                                          addEndListener={[Function]}
                                          appear={false}
                                          enter={true}
                                          exit={true}
                                          in={false}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={null}
                                          unmountOnExit={false}
                                        >
                                          <div
                                            className="MuiCollapse-root MuiCollapse-hidden"
                                            style={
                                              Object {
                                                "minHeight": "0px",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCollapse-wrapper"
                                            >
                                              <div
                                                className="MuiCollapse-wrapperInner"
                                              >
                                                <div
                                                  role="region"
                                                >
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".1"
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "cursor": "pointer",
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "cursor": "pointer",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".2"
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "cursor": "pointer",
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "cursor": "pointer",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </Transition>
                                      </ForwardRef(Collapse)>
                                    </WithStyles(ForwardRef(Collapse))>
                                  </div>
                                </ForwardRef(Paper)>
                              </WithStyles(ForwardRef(Paper))>
                            </ForwardRef(Accordion)>
                          </WithStyles(ForwardRef(Accordion))>
                          <Styled(MuiBox)
                            className="SingleLink"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-10 SingleLink"
                            >
                              <WithStyles(ForwardRef(Typography))
                                className="SingleLinkSize"
                              >
                                <ForwardRef(Typography)
                                  className="SingleLinkSize"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                >
                                  <p
                                    className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                  >
                                    <ForwardRef(DashboardOutlinedIcon)>
                                      <WithStyles(ForwardRef(SvgIcon))>
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef(DashboardOutlinedIcon)>
                                  </p>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <div
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(Typography))
                                  className="SingleLinkSize"
                                >
                                  <ForwardRef(Typography)
                                    className="SingleLinkSize"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                    />
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                            </div>
                          </Styled(MuiBox)>
                          <WithStyles(ForwardRef(Accordion))
                            expanded={false}
                            onChange={[Function]}
                          >
                            <ForwardRef(Accordion)
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "expanded": "Mui-expanded",
                                  "root": "MuiAccordion-root",
                                  "rounded": "MuiAccordion-rounded",
                                }
                              }
                              expanded={false}
                              onChange={[Function]}
                            >
                              <WithStyles(ForwardRef(Paper))
                                className="MuiAccordion-root MuiAccordion-rounded"
                                square={false}
                              >
                                <ForwardRef(Paper)
                                  className="MuiAccordion-root MuiAccordion-rounded"
                                  classes={
                                    Object {
                                      "elevation0": "MuiPaper-elevation0",
                                      "elevation1": "MuiPaper-elevation1",
                                      "elevation10": "MuiPaper-elevation10",
                                      "elevation11": "MuiPaper-elevation11",
                                      "elevation12": "MuiPaper-elevation12",
                                      "elevation13": "MuiPaper-elevation13",
                                      "elevation14": "MuiPaper-elevation14",
                                      "elevation15": "MuiPaper-elevation15",
                                      "elevation16": "MuiPaper-elevation16",
                                      "elevation17": "MuiPaper-elevation17",
                                      "elevation18": "MuiPaper-elevation18",
                                      "elevation19": "MuiPaper-elevation19",
                                      "elevation2": "MuiPaper-elevation2",
                                      "elevation20": "MuiPaper-elevation20",
                                      "elevation21": "MuiPaper-elevation21",
                                      "elevation22": "MuiPaper-elevation22",
                                      "elevation23": "MuiPaper-elevation23",
                                      "elevation24": "MuiPaper-elevation24",
                                      "elevation3": "MuiPaper-elevation3",
                                      "elevation4": "MuiPaper-elevation4",
                                      "elevation5": "MuiPaper-elevation5",
                                      "elevation6": "MuiPaper-elevation6",
                                      "elevation7": "MuiPaper-elevation7",
                                      "elevation8": "MuiPaper-elevation8",
                                      "elevation9": "MuiPaper-elevation9",
                                      "outlined": "MuiPaper-outlined",
                                      "root": "MuiPaper-root",
                                      "rounded": "MuiPaper-rounded",
                                    }
                                  }
                                  square={false}
                                >
                                  <div
                                    className="MuiPaper-root MuiAccordion-root MuiAccordion-rounded MuiPaper-elevation1 MuiPaper-rounded"
                                  >
                                    <WithStyles(ForwardRef(AccordionSummary))
                                      expandIcon={
                                        <Memo
                                          style={
                                            Object {
                                              "height": 16,
                                              "width": 16,
                                            }
                                          }
                                        />
                                      }
                                      key=".0"
                                      style={
                                        Object {
                                          "alignItems": "center",
                                          "marginTop": "20px",
                                        }
                                      }
                                    >
                                      <ForwardRef(AccordionSummary)
                                        classes={
                                          Object {
                                            "content": "MuiAccordionSummary-content",
                                            "disabled": "Mui-disabled",
                                            "expandIcon": "MuiAccordionSummary-expandIcon",
                                            "expanded": "Mui-expanded",
                                            "focusVisible": "Mui-focusVisible",
                                            "focused": "Mui-focused",
                                            "root": "MuiAccordionSummary-root",
                                          }
                                        }
                                        expandIcon={
                                          <Memo
                                            style={
                                              Object {
                                                "height": 16,
                                                "width": 16,
                                              }
                                            }
                                          />
                                        }
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "marginTop": "20px",
                                          }
                                        }
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          aria-expanded={false}
                                          className="MuiAccordionSummary-root"
                                          component="div"
                                          disableRipple={true}
                                          disabled={false}
                                          focusRipple={false}
                                          focusVisibleClassName="Mui-focusVisible Mui-focused"
                                          onClick={[Function]}
                                          style={
                                            Object {
                                              "alignItems": "center",
                                              "marginTop": "20px",
                                            }
                                          }
                                        >
                                          <ForwardRef(ButtonBase)
                                            aria-expanded={false}
                                            className="MuiAccordionSummary-root"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            component="div"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={false}
                                            focusVisibleClassName="Mui-focusVisible Mui-focused"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "alignItems": "center",
                                                "marginTop": "20px",
                                              }
                                            }
                                          >
                                            <div
                                              aria-disabled={false}
                                              aria-expanded={false}
                                              className="MuiButtonBase-root MuiAccordionSummary-root"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="button"
                                              style={
                                                Object {
                                                  "alignItems": "center",
                                                  "marginTop": "20px",
                                                }
                                              }
                                              tabIndex={0}
                                            >
                                              <div
                                                className="MuiAccordionSummary-content"
                                              >
                                                <WithStyles(ForwardRef(Typography))>
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root MuiTypography-body1"
                                                    >
                                                      <ForwardRef(DashboardOutlinedIcon)>
                                                        <WithStyles(ForwardRef(SvgIcon))>
                                                          <ForwardRef(SvgIcon)
                                                            classes={
                                                              Object {
                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                "colorError": "MuiSvgIcon-colorError",
                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                "root": "MuiSvgIcon-root",
                                                              }
                                                            }
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              className="MuiSvgIcon-root"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                                              />
                                                            </svg>
                                                          </ForwardRef(SvgIcon)>
                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                      </ForwardRef(DashboardOutlinedIcon)>
                                                    </p>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="ListItemText"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="ListItemText"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                  >
                                                    <p
                                                      className="MuiTypography-root ListItemText MuiTypography-body1"
                                                    />
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                              <WithStyles(ForwardRef(IconButton))
                                                aria-hidden={true}
                                                className="MuiAccordionSummary-expandIcon"
                                                component="div"
                                                edge="end"
                                                role={null}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  aria-hidden={true}
                                                  className="MuiAccordionSummary-expandIcon"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  component="div"
                                                  edge="end"
                                                  role={null}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    aria-hidden={true}
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                    component="div"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    role={null}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      aria-hidden={true}
                                                      centerRipple={true}
                                                      className="MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="div"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      role={null}
                                                      tabIndex={null}
                                                    >
                                                      <div
                                                        aria-disabled={false}
                                                        aria-hidden={true}
                                                        className="MuiButtonBase-root MuiIconButton-root MuiAccordionSummary-expandIcon MuiIconButton-edgeEnd"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role={null}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <ForwardRef(ArrowForwardIosOutlinedIcon)
                                                            style={
                                                              Object {
                                                                "height": 16,
                                                                "width": 16,
                                                              }
                                                            }
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              style={
                                                                Object {
                                                                  "height": 16,
                                                                  "width": 16,
                                                                }
                                                              }
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                style={
                                                                  Object {
                                                                    "height": 16,
                                                                    "width": 16,
                                                                  }
                                                                }
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root"
                                                                  focusable="false"
                                                                  style={
                                                                    Object {
                                                                      "height": 16,
                                                                      "width": 16,
                                                                    }
                                                                  }
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M6.49 20.13l1.77 1.77 9.9-9.9-9.9-9.9-1.77 1.77L14.62 12l-8.13 8.13z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef(ArrowForwardIosOutlinedIcon)>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={true}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={true}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </div>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </div>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(AccordionSummary)>
                                    </WithStyles(ForwardRef(AccordionSummary))>
                                    <WithStyles(ForwardRef(Collapse))
                                      in={false}
                                      timeout="auto"
                                    >
                                      <ForwardRef(Collapse)
                                        classes={
                                          Object {
                                            "entered": "MuiCollapse-entered",
                                            "hidden": "MuiCollapse-hidden",
                                            "root": "MuiCollapse-root",
                                            "wrapper": "MuiCollapse-wrapper",
                                            "wrapperInner": "MuiCollapse-wrapperInner",
                                          }
                                        }
                                        in={false}
                                        timeout="auto"
                                      >
                                        <Transition
                                          addEndListener={[Function]}
                                          appear={false}
                                          enter={true}
                                          exit={true}
                                          in={false}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={null}
                                          unmountOnExit={false}
                                        >
                                          <div
                                            className="MuiCollapse-root MuiCollapse-hidden"
                                            style={
                                              Object {
                                                "minHeight": "0px",
                                              }
                                            }
                                          >
                                            <div
                                              className="MuiCollapse-wrapper"
                                            >
                                              <div
                                                className="MuiCollapse-wrapperInner"
                                              >
                                                <div
                                                  role="region"
                                                >
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".1"
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "cursor": "pointer",
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "cursor": "pointer",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".2"
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "cursor": "pointer",
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "cursor": "pointer",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                  <WithStyles(ForwardRef(AccordionDetails))
                                                    key=".3"
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "cursor": "pointer",
                                                      }
                                                    }
                                                  >
                                                    <ForwardRef(AccordionDetails)
                                                      classes={
                                                        Object {
                                                          "root": "MuiAccordionDetails-root",
                                                        }
                                                      }
                                                      onClick={[Function]}
                                                      style={
                                                        Object {
                                                          "cursor": "pointer",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="MuiAccordionDetails-root"
                                                        onClick={[Function]}
                                                        style={
                                                          Object {
                                                            "cursor": "pointer",
                                                          }
                                                        }
                                                      >
                                                        <WithStyles(ForwardRef(Typography))
                                                          className="cursor-pointer"
                                                          variant="body2"
                                                        >
                                                          <ForwardRef(Typography)
                                                            className="cursor-pointer"
                                                            classes={
                                                              Object {
                                                                "alignCenter": "MuiTypography-alignCenter",
                                                                "alignJustify": "MuiTypography-alignJustify",
                                                                "alignLeft": "MuiTypography-alignLeft",
                                                                "alignRight": "MuiTypography-alignRight",
                                                                "body1": "MuiTypography-body1",
                                                                "body2": "MuiTypography-body2",
                                                                "button": "MuiTypography-button",
                                                                "caption": "MuiTypography-caption",
                                                                "colorError": "MuiTypography-colorError",
                                                                "colorInherit": "MuiTypography-colorInherit",
                                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                "displayBlock": "MuiTypography-displayBlock",
                                                                "displayInline": "MuiTypography-displayInline",
                                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                                "h1": "MuiTypography-h1",
                                                                "h2": "MuiTypography-h2",
                                                                "h3": "MuiTypography-h3",
                                                                "h4": "MuiTypography-h4",
                                                                "h5": "MuiTypography-h5",
                                                                "h6": "MuiTypography-h6",
                                                                "noWrap": "MuiTypography-noWrap",
                                                                "overline": "MuiTypography-overline",
                                                                "paragraph": "MuiTypography-paragraph",
                                                                "root": "MuiTypography-root",
                                                                "srOnly": "MuiTypography-srOnly",
                                                                "subtitle1": "MuiTypography-subtitle1",
                                                                "subtitle2": "MuiTypography-subtitle2",
                                                              }
                                                            }
                                                            variant="body2"
                                                          >
                                                            <p
                                                              className="MuiTypography-root cursor-pointer MuiTypography-body2"
                                                            />
                                                          </ForwardRef(Typography)>
                                                        </WithStyles(ForwardRef(Typography))>
                                                      </div>
                                                    </ForwardRef(AccordionDetails)>
                                                  </WithStyles(ForwardRef(AccordionDetails))>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </Transition>
                                      </ForwardRef(Collapse)>
                                    </WithStyles(ForwardRef(Collapse))>
                                  </div>
                                </ForwardRef(Paper)>
                              </WithStyles(ForwardRef(Paper))>
                            </ForwardRef(Accordion)>
                          </WithStyles(ForwardRef(Accordion))>
                          <Styled(MuiBox)
                            className="SingleLink"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-11 SingleLink"
                            >
                              <WithStyles(ForwardRef(Typography))
                                className="SingleLinkSize"
                              >
                                <ForwardRef(Typography)
                                  className="SingleLinkSize"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                >
                                  <p
                                    className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                  >
                                    <ForwardRef(DashboardOutlinedIcon)>
                                      <WithStyles(ForwardRef(SvgIcon))>
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef(DashboardOutlinedIcon)>
                                  </p>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <div
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(Typography))
                                  className="SingleLinkSize"
                                >
                                  <ForwardRef(Typography)
                                    className="SingleLinkSize"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                    >
                                      Incident Management
                                    </p>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                            </div>
                          </Styled(MuiBox)>
                          <Styled(MuiBox)
                            className="SingleLink"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-12 SingleLink"
                            >
                              <WithStyles(ForwardRef(Typography))
                                className="SingleLinkSize"
                              >
                                <ForwardRef(Typography)
                                  className="SingleLinkSize"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                >
                                  <p
                                    className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                  >
                                    <ForwardRef(DashboardOutlinedIcon)>
                                      <WithStyles(ForwardRef(SvgIcon))>
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M19 5v2h-4V5h4M9 5v6H5V5h4m10 8v6h-4v-6h4M9 17v2H5v-2h4M21 3h-8v6h8V3zM11 3H3v10h8V3zm10 8h-8v10h8V11zm-10 4H3v6h8v-6z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef(DashboardOutlinedIcon)>
                                  </p>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <div
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(Typography))
                                  className="SingleLinkSize"
                                >
                                  <ForwardRef(Typography)
                                    className="SingleLinkSize"
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                  >
                                    <p
                                      className="MuiTypography-root SingleLinkSize MuiTypography-body1"
                                    >
                                      Facility Reservation
                                    </p>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </div>
                            </div>
                          </Styled(MuiBox)>
                        </div>
                      </Styled(MuiBox)>
                      <Styled(MuiBox)
                        className="SideBarBottom"
                      >
                        <div
                          className="MuiBox-root MuiBox-root-13 SideBarBottom"
                        >
                          <Styled(MuiBox)>
                            <div
                              className="MuiBox-root MuiBox-root-14"
                            >
                              <WithStyles(ForwardRef(Typography))
                                style={
                                  Object {
                                    "fontSize": 10,
                                    "fontWeight": 600,
                                  }
                                }
                              >
                                <ForwardRef(Typography)
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  style={
                                    Object {
                                      "fontSize": 10,
                                      "fontWeight": 600,
                                    }
                                  }
                                >
                                  <p
                                    className="MuiTypography-root MuiTypography-body1"
                                    style={
                                      Object {
                                        "fontSize": 10,
                                        "fontWeight": 600,
                                      }
                                    }
                                  >
                                    <Styled(MuiBox)
                                      component="span"
                                      style={
                                        Object {
                                          "background": "#ff8100",
                                          "borderRadius": "5px",
                                          "marginRight": 8,
                                          "padding": 8,
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiBox-root MuiBox-root-15"
                                        style={
                                          Object {
                                            "background": "#ff8100",
                                            "borderRadius": "5px",
                                            "marginRight": 8,
                                            "padding": 8,
                                          }
                                        }
                                      />
                                    </Styled(MuiBox)>
                                  </p>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <WithStyles(ForwardRef(Typography))
                                style={
                                  Object {
                                    "fontSize": 12,
                                    "marginTop": 10,
                                  }
                                }
                              >
                                <ForwardRef(Typography)
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  style={
                                    Object {
                                      "fontSize": 12,
                                      "marginTop": 10,
                                    }
                                  }
                                >
                                  <p
                                    className="MuiTypography-root MuiTypography-body1"
                                    style={
                                      Object {
                                        "fontSize": 12,
                                        "marginTop": 10,
                                      }
                                    }
                                  >
                                    Expires in 125 days
                                  </p>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </div>
                          </Styled(MuiBox)>
                          <Styled(MuiBox)>
                            <div
                              className="MuiBox-root MuiBox-root-16"
                            >
                              <img
                                alt="TenantLogo"
                                width={110}
                              />
                            </div>
                          </Styled(MuiBox)>
                        </div>
                      </Styled(MuiBox)>
                    </ChairmanSidebar>
                  </Route>
                </withRouter(ChairmanSidebar)>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
          <WithStyles(ForwardRef(Grid))
            item={true}
            md={9}
            sm={9}
            style={
              Object {
                "paddingTop": 35,
              }
            }
            xs={9}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                  "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                  "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                  "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                  "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              item={true}
              md={9}
              sm={9}
              style={
                Object {
                  "paddingTop": 35,
                }
              }
              xs={9}
            >
              <div
                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-9 MuiGrid-grid-sm-9 MuiGrid-grid-md-9"
                style={
                  Object {
                    "paddingTop": 35,
                  }
                }
              >
                <WithStyles(ForwardRef(Container))>
                  <ForwardRef(Container)
                    classes={
                      Object {
                        "disableGutters": "MuiContainer-disableGutters",
                        "fixed": "MuiContainer-fixed",
                        "maxWidthLg": "MuiContainer-maxWidthLg",
                        "maxWidthMd": "MuiContainer-maxWidthMd",
                        "maxWidthSm": "MuiContainer-maxWidthSm",
                        "maxWidthXl": "MuiContainer-maxWidthXl",
                        "maxWidthXs": "MuiContainer-maxWidthXs",
                        "root": "MuiContainer-root",
                      }
                    }
                  >
                    <div
                      className="MuiContainer-root MuiContainer-maxWidthLg"
                    >
                      <Styled(MuiBox)>
                        <div
                          className="MuiBox-root MuiBox-root-17"
                        >
                          <Styled(MuiBox)
                            className="navigation"
                          >
                            <div
                              className="MuiBox-root MuiBox-root-18 navigation"
                            >
                              <Styled(MuiBox)>
                                <div
                                  className="MuiBox-root MuiBox-root-19"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    variant="body1"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      variant="body1"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body1"
                                      >
                                         /
                                         
                                        <Styled(MuiBox)
                                          component="span"
                                          style={
                                            Object {
                                              "color": "blue",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiBox-root MuiBox-root-20"
                                            style={
                                              Object {
                                                "color": "blue",
                                              }
                                            }
                                          />
                                        </Styled(MuiBox)>
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <Styled(MuiBox)
                                    className="top-heading"
                                  >
                                    <div
                                      className="MuiBox-root MuiBox-root-21 top-heading"
                                    >
                                      <WithStyles(ForwardRef(Typography))
                                        className="sub-heading"
                                        variant="h5"
                                      >
                                        <ForwardRef(Typography)
                                          className="sub-heading"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          variant="h5"
                                        >
                                          <h5
                                            className="MuiTypography-root sub-heading MuiTypography-h5"
                                          />
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                      <WithStyles(ForwardRef(Button))
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(Button)
                                          classes={
                                            Object {
                                              "colorInherit": "MuiButton-colorInherit",
                                              "contained": "MuiButton-contained",
                                              "containedPrimary": "MuiButton-containedPrimary",
                                              "containedSecondary": "MuiButton-containedSecondary",
                                              "containedSizeLarge": "MuiButton-containedSizeLarge",
                                              "containedSizeSmall": "MuiButton-containedSizeSmall",
                                              "disableElevation": "MuiButton-disableElevation",
                                              "disabled": "Mui-disabled",
                                              "endIcon": "MuiButton-endIcon",
                                              "focusVisible": "Mui-focusVisible",
                                              "fullWidth": "MuiButton-fullWidth",
                                              "iconSizeLarge": "MuiButton-iconSizeLarge",
                                              "iconSizeMedium": "MuiButton-iconSizeMedium",
                                              "iconSizeSmall": "MuiButton-iconSizeSmall",
                                              "label": "MuiButton-label",
                                              "outlined": "MuiButton-outlined",
                                              "outlinedPrimary": "MuiButton-outlinedPrimary",
                                              "outlinedSecondary": "MuiButton-outlinedSecondary",
                                              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                              "root": "MuiButton-root",
                                              "sizeLarge": "MuiButton-sizeLarge",
                                              "sizeSmall": "MuiButton-sizeSmall",
                                              "startIcon": "MuiButton-startIcon",
                                              "text": "MuiButton-text",
                                              "textPrimary": "MuiButton-textPrimary",
                                              "textSecondary": "MuiButton-textSecondary",
                                              "textSizeLarge": "MuiButton-textSizeLarge",
                                              "textSizeSmall": "MuiButton-textSizeSmall",
                                            }
                                          }
                                          onClick={[Function]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            className="MuiButton-root MuiButton-text"
                                            component="button"
                                            disabled={false}
                                            focusRipple={true}
                                            focusVisibleClassName="Mui-focusVisible"
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <ForwardRef(ButtonBase)
                                              className="MuiButton-root MuiButton-text"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="button"
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <button
                                                className="MuiButtonBase-root MuiButton-root MuiButton-text"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <span
                                                  className="MuiButton-label"
                                                />
                                                <WithStyles(memo)
                                                  center={false}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={false}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(Button)>
                                      </WithStyles(ForwardRef(Button))>
                                    </div>
                                  </Styled(MuiBox)>
                                </div>
                              </Styled(MuiBox)>
                            </div>
                          </Styled(MuiBox)>
                          <Styled(MuiBox)
                            className="document-box "
                          >
                            <div
                              className="MuiBox-root MuiBox-root-22 document-box "
                            >
                              <WithStyles(ForwardRef(Grid))
                                container={true}
                                spacing={2}
                              >
                                <ForwardRef(Grid)
                                  classes={
                                    Object {
                                      "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                      "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                      "container": "MuiGrid-container",
                                      "direction-xs-column": "MuiGrid-direction-xs-column",
                                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                      "grid-lg-1": "MuiGrid-grid-lg-1",
                                      "grid-lg-10": "MuiGrid-grid-lg-10",
                                      "grid-lg-11": "MuiGrid-grid-lg-11",
                                      "grid-lg-12": "MuiGrid-grid-lg-12",
                                      "grid-lg-2": "MuiGrid-grid-lg-2",
                                      "grid-lg-3": "MuiGrid-grid-lg-3",
                                      "grid-lg-4": "MuiGrid-grid-lg-4",
                                      "grid-lg-5": "MuiGrid-grid-lg-5",
                                      "grid-lg-6": "MuiGrid-grid-lg-6",
                                      "grid-lg-7": "MuiGrid-grid-lg-7",
                                      "grid-lg-8": "MuiGrid-grid-lg-8",
                                      "grid-lg-9": "MuiGrid-grid-lg-9",
                                      "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                      "grid-lg-true": "MuiGrid-grid-lg-true",
                                      "grid-md-1": "MuiGrid-grid-md-1",
                                      "grid-md-10": "MuiGrid-grid-md-10",
                                      "grid-md-11": "MuiGrid-grid-md-11",
                                      "grid-md-12": "MuiGrid-grid-md-12",
                                      "grid-md-2": "MuiGrid-grid-md-2",
                                      "grid-md-3": "MuiGrid-grid-md-3",
                                      "grid-md-4": "MuiGrid-grid-md-4",
                                      "grid-md-5": "MuiGrid-grid-md-5",
                                      "grid-md-6": "MuiGrid-grid-md-6",
                                      "grid-md-7": "MuiGrid-grid-md-7",
                                      "grid-md-8": "MuiGrid-grid-md-8",
                                      "grid-md-9": "MuiGrid-grid-md-9",
                                      "grid-md-auto": "MuiGrid-grid-md-auto",
                                      "grid-md-true": "MuiGrid-grid-md-true",
                                      "grid-sm-1": "MuiGrid-grid-sm-1",
                                      "grid-sm-10": "MuiGrid-grid-sm-10",
                                      "grid-sm-11": "MuiGrid-grid-sm-11",
                                      "grid-sm-12": "MuiGrid-grid-sm-12",
                                      "grid-sm-2": "MuiGrid-grid-sm-2",
                                      "grid-sm-3": "MuiGrid-grid-sm-3",
                                      "grid-sm-4": "MuiGrid-grid-sm-4",
                                      "grid-sm-5": "MuiGrid-grid-sm-5",
                                      "grid-sm-6": "MuiGrid-grid-sm-6",
                                      "grid-sm-7": "MuiGrid-grid-sm-7",
                                      "grid-sm-8": "MuiGrid-grid-sm-8",
                                      "grid-sm-9": "MuiGrid-grid-sm-9",
                                      "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                      "grid-sm-true": "MuiGrid-grid-sm-true",
                                      "grid-xl-1": "MuiGrid-grid-xl-1",
                                      "grid-xl-10": "MuiGrid-grid-xl-10",
                                      "grid-xl-11": "MuiGrid-grid-xl-11",
                                      "grid-xl-12": "MuiGrid-grid-xl-12",
                                      "grid-xl-2": "MuiGrid-grid-xl-2",
                                      "grid-xl-3": "MuiGrid-grid-xl-3",
                                      "grid-xl-4": "MuiGrid-grid-xl-4",
                                      "grid-xl-5": "MuiGrid-grid-xl-5",
                                      "grid-xl-6": "MuiGrid-grid-xl-6",
                                      "grid-xl-7": "MuiGrid-grid-xl-7",
                                      "grid-xl-8": "MuiGrid-grid-xl-8",
                                      "grid-xl-9": "MuiGrid-grid-xl-9",
                                      "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                      "grid-xl-true": "MuiGrid-grid-xl-true",
                                      "grid-xs-1": "MuiGrid-grid-xs-1",
                                      "grid-xs-10": "MuiGrid-grid-xs-10",
                                      "grid-xs-11": "MuiGrid-grid-xs-11",
                                      "grid-xs-12": "MuiGrid-grid-xs-12",
                                      "grid-xs-2": "MuiGrid-grid-xs-2",
                                      "grid-xs-3": "MuiGrid-grid-xs-3",
                                      "grid-xs-4": "MuiGrid-grid-xs-4",
                                      "grid-xs-5": "MuiGrid-grid-xs-5",
                                      "grid-xs-6": "MuiGrid-grid-xs-6",
                                      "grid-xs-7": "MuiGrid-grid-xs-7",
                                      "grid-xs-8": "MuiGrid-grid-xs-8",
                                      "grid-xs-9": "MuiGrid-grid-xs-9",
                                      "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                      "grid-xs-true": "MuiGrid-grid-xs-true",
                                      "item": "MuiGrid-item",
                                      "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                                      "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                                      "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                                      "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                                      "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                                      "root": "MuiGrid-root",
                                      "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                      "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                      "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                      "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                      "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                      "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                      "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                      "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                      "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                      "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                      "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                    }
                                  }
                                  container={true}
                                  spacing={2}
                                >
                                  <div
                                    className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                                  >
                                    <span />
                                  </div>
                                </ForwardRef(Grid)>
                              </WithStyles(ForwardRef(Grid))>
                            </div>
                          </Styled(MuiBox)>
                        </div>
                      </Styled(MuiBox)>
                    </div>
                  </ForwardRef(Container)>
                </WithStyles(ForwardRef(Container))>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
        </div>
      </Styled(MuiBox)>
    </div>
  </Styled(MuiBox)>
  <WithStyles(ForwardRef(Dialog))
    className="add-document"
    fullWidth={true}
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(Dialog)
      className="add-document"
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      fullWidth={true}
      onClose={[Function]}
      open={false}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "displayName": "WithStyles(ForwardRef(Backdrop))",
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root add-document"
        closeAfterTransition={true}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={false}
      />
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
  <WithStyles(ForwardRef(Dialog))
    className="delete-document"
    fullWidth={true}
    maxWidth="sm"
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(Dialog)
      className="delete-document"
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      fullWidth={true}
      maxWidth="sm"
      onClose={[Function]}
      open={false}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "displayName": "WithStyles(ForwardRef(Backdrop))",
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root delete-document"
        closeAfterTransition={true}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={false}
      />
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
  <WithStyles(ForwardRef(Dialog))
    className="add-document resolutions"
    fullWidth={true}
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(Dialog)
      className="add-document resolutions"
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      fullWidth={true}
      onClose={[Function]}
      open={false}
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "displayName": "WithStyles(ForwardRef(Backdrop))",
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root add-document resolutions"
        closeAfterTransition={true}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={false}
      />
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
  <WithStyles(ForwardRef(Dialog))
    className="select-meeting"
    fullWidth={true}
    maxWidth="md"
    onClose={[Function]}
    open={false}
    scroll="paper"
  >
    <ForwardRef(Dialog)
      className="select-meeting"
      classes={
        Object {
          "container": "MuiDialog-container",
          "paper": "MuiDialog-paper",
          "paperFullScreen": "MuiDialog-paperFullScreen",
          "paperFullWidth": "MuiDialog-paperFullWidth",
          "paperScrollBody": "MuiDialog-paperScrollBody",
          "paperScrollPaper": "MuiDialog-paperScrollPaper",
          "paperWidthFalse": "MuiDialog-paperWidthFalse",
          "paperWidthLg": "MuiDialog-paperWidthLg",
          "paperWidthMd": "MuiDialog-paperWidthMd",
          "paperWidthSm": "MuiDialog-paperWidthSm",
          "paperWidthXl": "MuiDialog-paperWidthXl",
          "paperWidthXs": "MuiDialog-paperWidthXs",
          "root": "MuiDialog-root",
          "scrollBody": "MuiDialog-scrollBody",
          "scrollPaper": "MuiDialog-scrollPaper",
        }
      }
      fullWidth={true}
      maxWidth="md"
      onClose={[Function]}
      open={false}
      scroll="paper"
    >
      <ForwardRef(Modal)
        BackdropComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Naked": Object {
              "$$typeof": Symbol(react.forward_ref),
              "propTypes": Object {
                "children": [Function],
                "className": [Function],
                "classes": [Function],
                "invisible": [Function],
                "open": [Function],
                "transitionDuration": [Function],
              },
              "render": [Function],
            },
            "displayName": "WithStyles(ForwardRef(Backdrop))",
            "options": Object {
              "defaultTheme": Object {
                "breakpoints": Object {
                  "between": [Function],
                  "down": [Function],
                  "keys": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                  "only": [Function],
                  "up": [Function],
                  "values": Object {
                    "lg": 1280,
                    "md": 960,
                    "sm": 600,
                    "xl": 1920,
                    "xs": 0,
                  },
                  "width": [Function],
                },
                "direction": "ltr",
                "mixins": Object {
                  "gutters": [Function],
                  "toolbar": Object {
                    "@media (min-width:0px) and (orientation: landscape)": Object {
                      "minHeight": 48,
                    },
                    "@media (min-width:600px)": Object {
                      "minHeight": 64,
                    },
                    "minHeight": 56,
                  },
                },
                "overrides": Object {},
                "palette": Object {
                  "action": Object {
                    "activatedOpacity": 0.12,
                    "active": "rgba(0, 0, 0, 0.54)",
                    "disabled": "rgba(0, 0, 0, 0.26)",
                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                    "disabledOpacity": 0.38,
                    "focus": "rgba(0, 0, 0, 0.12)",
                    "focusOpacity": 0.12,
                    "hover": "rgba(0, 0, 0, 0.04)",
                    "hoverOpacity": 0.04,
                    "selected": "rgba(0, 0, 0, 0.08)",
                    "selectedOpacity": 0.08,
                  },
                  "augmentColor": [Function],
                  "background": Object {
                    "default": "#fafafa",
                    "paper": "#fff",
                  },
                  "common": Object {
                    "black": "#000",
                    "white": "#fff",
                  },
                  "contrastThreshold": 3,
                  "divider": "rgba(0, 0, 0, 0.12)",
                  "error": Object {
                    "contrastText": "#fff",
                    "dark": "#d32f2f",
                    "light": "#e57373",
                    "main": "#f44336",
                  },
                  "getContrastText": [Function],
                  "grey": Object {
                    "100": "#f5f5f5",
                    "200": "#eeeeee",
                    "300": "#e0e0e0",
                    "400": "#bdbdbd",
                    "50": "#fafafa",
                    "500": "#9e9e9e",
                    "600": "#757575",
                    "700": "#616161",
                    "800": "#424242",
                    "900": "#212121",
                    "A100": "#d5d5d5",
                    "A200": "#aaaaaa",
                    "A400": "#303030",
                    "A700": "#616161",
                  },
                  "info": Object {
                    "contrastText": "#fff",
                    "dark": "#1976d2",
                    "light": "#64b5f6",
                    "main": "#2196f3",
                  },
                  "primary": Object {
                    "contrastText": "#fff",
                    "dark": "#303f9f",
                    "light": "#7986cb",
                    "main": "#3f51b5",
                  },
                  "secondary": Object {
                    "contrastText": "#fff",
                    "dark": "#c51162",
                    "light": "#ff4081",
                    "main": "#f50057",
                  },
                  "success": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#388e3c",
                    "light": "#81c784",
                    "main": "#4caf50",
                  },
                  "text": Object {
                    "disabled": "rgba(0, 0, 0, 0.38)",
                    "hint": "rgba(0, 0, 0, 0.38)",
                    "primary": "rgba(0, 0, 0, 0.87)",
                    "secondary": "rgba(0, 0, 0, 0.54)",
                  },
                  "tonalOffset": 0.2,
                  "type": "light",
                  "warning": Object {
                    "contrastText": "rgba(0, 0, 0, 0.87)",
                    "dark": "#f57c00",
                    "light": "#ffb74d",
                    "main": "#ff9800",
                  },
                },
                "props": Object {},
                "shadows": Array [
                  "none",
                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                ],
                "shape": Object {
                  "borderRadius": 4,
                },
                "spacing": [Function],
                "transitions": Object {
                  "create": [Function],
                  "duration": Object {
                    "complex": 375,
                    "enteringScreen": 225,
                    "leavingScreen": 195,
                    "short": 250,
                    "shorter": 200,
                    "shortest": 150,
                    "standard": 300,
                  },
                  "easing": Object {
                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                  },
                  "getAutoHeightDuration": [Function],
                },
                "typography": Object {
                  "body1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.5,
                  },
                  "body2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.01071em",
                    "lineHeight": 1.43,
                  },
                  "button": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.02857em",
                    "lineHeight": 1.75,
                    "textTransform": "uppercase",
                  },
                  "caption": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.03333em",
                    "lineHeight": 1.66,
                  },
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": 14,
                  "fontWeightBold": 700,
                  "fontWeightLight": 300,
                  "fontWeightMedium": 500,
                  "fontWeightRegular": 400,
                  "h1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "6rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.01562em",
                    "lineHeight": 1.167,
                  },
                  "h2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3.75rem",
                    "fontWeight": 300,
                    "letterSpacing": "-0.00833em",
                    "lineHeight": 1.2,
                  },
                  "h3": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "3rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.167,
                  },
                  "h4": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "2.125rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00735em",
                    "lineHeight": 1.235,
                  },
                  "h5": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.5rem",
                    "fontWeight": 400,
                    "letterSpacing": "0em",
                    "lineHeight": 1.334,
                  },
                  "h6": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1.25rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.0075em",
                    "lineHeight": 1.6,
                  },
                  "htmlFontSize": 16,
                  "overline": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.75rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.08333em",
                    "lineHeight": 2.66,
                    "textTransform": "uppercase",
                  },
                  "pxToRem": [Function],
                  "round": [Function],
                  "subtitle1": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "1rem",
                    "fontWeight": 400,
                    "letterSpacing": "0.00938em",
                    "lineHeight": 1.75,
                  },
                  "subtitle2": Object {
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": "0.875rem",
                    "fontWeight": 500,
                    "letterSpacing": "0.00714em",
                    "lineHeight": 1.57,
                  },
                },
                "zIndex": Object {
                  "appBar": 1100,
                  "drawer": 1200,
                  "mobileStepper": 1000,
                  "modal": 1300,
                  "snackbar": 1400,
                  "speedDial": 1050,
                  "tooltip": 1500,
                },
              },
              "name": "MuiBackdrop",
            },
            "propTypes": Object {
              "classes": [Function],
              "innerRef": [Function],
            },
            "render": [Function],
            "useStyles": [Function],
          }
        }
        BackdropProps={
          Object {
            "transitionDuration": Object {
              "enter": 225,
              "exit": 195,
            },
          }
        }
        className="MuiDialog-root select-meeting"
        closeAfterTransition={true}
        disableEscapeKeyDown={false}
        onClose={[Function]}
        open={false}
      />
    </ForwardRef(Dialog)>
  </WithStyles(ForwardRef(Dialog))>
  <ShareDocumentModal
    documentURL=""
    handleClose={[Function]}
    heading=""
    isOpen={false}
  >
    <WithStyles(ForwardRef(Dialog))
      className="select-meeting"
      fullWidth={true}
      onClose={[Function]}
      open={false}
    >
      <ForwardRef(Dialog)
        className="select-meeting"
        classes={
          Object {
            "container": "MuiDialog-container",
            "paper": "MuiDialog-paper",
            "paperFullScreen": "MuiDialog-paperFullScreen",
            "paperFullWidth": "MuiDialog-paperFullWidth",
            "paperScrollBody": "MuiDialog-paperScrollBody",
            "paperScrollPaper": "MuiDialog-paperScrollPaper",
            "paperWidthFalse": "MuiDialog-paperWidthFalse",
            "paperWidthLg": "MuiDialog-paperWidthLg",
            "paperWidthMd": "MuiDialog-paperWidthMd",
            "paperWidthSm": "MuiDialog-paperWidthSm",
            "paperWidthXl": "MuiDialog-paperWidthXl",
            "paperWidthXs": "MuiDialog-paperWidthXs",
            "root": "MuiDialog-root",
            "scrollBody": "MuiDialog-scrollBody",
            "scrollPaper": "MuiDialog-scrollPaper",
          }
        }
        fullWidth={true}
        onClose={[Function]}
        open={false}
      >
        <ForwardRef(Modal)
          BackdropComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "Naked": Object {
                "$$typeof": Symbol(react.forward_ref),
                "propTypes": Object {
                  "children": [Function],
                  "className": [Function],
                  "classes": [Function],
                  "invisible": [Function],
                  "open": [Function],
                  "transitionDuration": [Function],
                },
                "render": [Function],
              },
              "displayName": "WithStyles(ForwardRef(Backdrop))",
              "options": Object {
                "defaultTheme": Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "up": [Function],
                    "values": Object {
                      "lg": 1280,
                      "md": 960,
                      "sm": 600,
                      "xl": 1920,
                      "xs": 0,
                    },
                    "width": [Function],
                  },
                  "direction": "ltr",
                  "mixins": Object {
                    "gutters": [Function],
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "overrides": Object {},
                  "palette": Object {
                    "action": Object {
                      "activatedOpacity": 0.12,
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "disabledOpacity": 0.38,
                      "focus": "rgba(0, 0, 0, 0.12)",
                      "focusOpacity": 0.12,
                      "hover": "rgba(0, 0, 0, 0.04)",
                      "hoverOpacity": 0.04,
                      "selected": "rgba(0, 0, 0, 0.08)",
                      "selectedOpacity": 0.08,
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#fafafa",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#d32f2f",
                      "light": "#e57373",
                      "main": "#f44336",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#d5d5d5",
                      "A200": "#aaaaaa",
                      "A400": "#303030",
                      "A700": "#616161",
                    },
                    "info": Object {
                      "contrastText": "#fff",
                      "dark": "#1976d2",
                      "light": "#64b5f6",
                      "main": "#2196f3",
                    },
                    "primary": Object {
                      "contrastText": "#fff",
                      "dark": "#303f9f",
                      "light": "#7986cb",
                      "main": "#3f51b5",
                    },
                    "secondary": Object {
                      "contrastText": "#fff",
                      "dark": "#c51162",
                      "light": "#ff4081",
                      "main": "#f50057",
                    },
                    "success": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#388e3c",
                      "light": "#81c784",
                      "main": "#4caf50",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "hint": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.54)",
                    },
                    "tonalOffset": 0.2,
                    "type": "light",
                    "warning": Object {
                      "contrastText": "rgba(0, 0, 0, 0.87)",
                      "dark": "#f57c00",
                      "light": "#ffb74d",
                      "main": "#ff9800",
                    },
                  },
                  "props": Object {},
                  "shadows": Array [
                    "none",
                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": [Function],
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.43,
                    },
                    "button": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightBold": 700,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1.167,
                    },
                    "h2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1.2,
                    },
                    "h3": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.167,
                    },
                    "h4": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.235,
                    },
                    "h5": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.334,
                    },
                    "h6": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "htmlFontSize": 16,
                    "overline": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "round": [Function],
                    "subtitle1": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "speedDial": 1050,
                    "tooltip": 1500,
                  },
                },
                "name": "MuiBackdrop",
              },
              "propTypes": Object {
                "classes": [Function],
                "innerRef": [Function],
              },
              "render": [Function],
              "useStyles": [Function],
            }
          }
          BackdropProps={
            Object {
              "transitionDuration": Object {
                "enter": 225,
                "exit": 195,
              },
            }
          }
          className="MuiDialog-root select-meeting"
          closeAfterTransition={true}
          disableEscapeKeyDown={false}
          onClose={[Function]}
          open={false}
        />
      </ForwardRef(Dialog)>
    </WithStyles(ForwardRef(Dialog))>
  </ShareDocumentModal>
</DocumentListChairman>
`;
